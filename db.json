{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/JavaSE_day04【数组】.md","hash":"1efd69a58a687df2069d0b3d38e30b242984f060","modified":1633073175856},{"_id":"source/_posts/day02课后练习.md","hash":"aab8103d8b6337b50d6bec7f4b95391f142a0def","modified":1633067467669},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"source/categories/index.md","hash":"80a6980d29d2840cd9a8e8c573e0f2d063cae931","modified":1633073425167},{"_id":"source/tags/index.md","hash":"21803d9be269035ddb3fe7b0e320263f2fd69406","modified":1633073434496},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1633072229054},{"_id":"themes/butterfly/README.md","hash":"0f0eaee9c30ef1e9aed588fbb3e8263401348b55","modified":1633072229055},{"_id":"themes/butterfly/_config.yml","hash":"29dfa8df986237d1b9c6b59e2e94ba72426ade41","modified":1633074026074},{"_id":"themes/butterfly/README_CN.md","hash":"70ec43a8aa0776b5a0a2a6b6009dd253fa3679eb","modified":1633072229055},{"_id":"themes/butterfly/package.json","hash":"6a5ddc166980502757c1413b5e04a3a8a91c0a48","modified":1633072229127},{"_id":"themes/butterfly/.github/stale.yml","hash":"7a131b8aa4936fbcedea3517299e1cdc1bcbcaab","modified":1633072229052},{"_id":"themes/butterfly/languages/default.yml","hash":"b9dbdb20bd1f1c7ca8a8f38635bdc4ed8bb1d44c","modified":1633072229058},{"_id":"themes/butterfly/languages/en.yml","hash":"fd1c1211c8f166d089a7697872185a81182d92e1","modified":1633072229058},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"46685048a05b419ed9c72cf31bd6e5efef7524f2","modified":1633072229059},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"736bec8eeb3a29d0d43669d81f1fa686e02be18e","modified":1633072229060},{"_id":"themes/butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1633072229061},{"_id":"themes/butterfly/layout/category.pug","hash":"5ac3cd8172088843cec03175c612a9c85f49cf2e","modified":1633072229061},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1633072229125},{"_id":"themes/butterfly/layout/page.pug","hash":"cae76ce64c114fd192b5da5a7d14aa0240df2f06","modified":1633072229125},{"_id":"themes/butterfly/layout/post.pug","hash":"8f2f13c9ae099dd83827ce3dbac5abc8d7d5bde3","modified":1633072229126},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1633072229127},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"0b7979a908ebe8c350d73b6731f0be3e29d401c2","modified":1633072229051},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"b41123ce5f0ccfa9e06a68b9f3cb59ba040a049a","modified":1633072229051},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"205a69ba038cf76affcdc1f39d88a8cb8079fc12","modified":1633072229052},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1633072229053},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"3cdc5e32d0f1e5866bcf86f94a0d76aaf7142937","modified":1633072229063},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"a1ca58fdff74b890cade94479f8f0eb9ce7e5e73","modified":1633072229064},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1633072229064},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"f4dcc0a596eb9801c4d3c033d018d0abb413c8e5","modified":1633072229065},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"f2e1d8a05d2e409c4804f67a98f5f59f527d6627","modified":1633072229076},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1633072229082},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"66b14189a1913119ff5927c0b933b5c73fb37f48","modified":1633072229085},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9b5243385f7a90e0103c25c531a1e7f2f1884c15","modified":1633072229085},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1633072229129},{"_id":"themes/butterfly/scripts/events/init.js","hash":"5803aa55d9c21e51ea64c1ae50c9b602979aaee2","modified":1633072229129},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"1e1da036fae593be7e2cc502f0a5cbeb2e7881d1","modified":1633072229130},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"98ef86305b8d2ad9dbab969715e1ac93b407f036","modified":1633072229131},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"bd29f20fad3d3fab600940e7a6dc9a803943cb33","modified":1633072229132},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1633072229133},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1633072229133},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"98ab13a60413d68bd9d02d54d121c66a6d4634d2","modified":1633072229134},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"384de3c04809ec5fa996e8aa0628f770cd4bff3e","modified":1633072229134},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"26dd1900e68a3e10a5cf3f3484a93139a0f1340e","modified":1633072229135},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"8cb7ef368cc2ac7f4a13c2959908b1574e572acf","modified":1633072229136},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"7ffbe625f184116e442648c8416ea58614a1cef8","modified":1633072229137},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"eb019da8c190923e759d2fd7cb846281eef8594e","modified":1633072229137},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1633072229138},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1633072229138},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"829229b0074b332ba779e159219eb2466612ff6e","modified":1633072229139},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1633072229140},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1633072229141},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1633072229175},{"_id":"themes/butterfly/source/css/var.styl","hash":"31198af95fecc6819d3b2cb7ef03988ef67257da","modified":1633072229175},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1633072229177},{"_id":"themes/butterfly/source/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1633072229177},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1633072229178},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1633072229179},{"_id":"themes/butterfly/source/js/main.js","hash":"53c6df70de6e7949b102ab06fd0cd53b9b39b01c","modified":1633072229180},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1633072229183},{"_id":"themes/butterfly/source/js/utils.js","hash":"1b8bf1e6d50fa8ffe2aff7548b141cab72540ba0","modified":1633072229184},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1633072229066},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"3ca9d9cdfd6e61df1d5b07de40f34349cda7a7c7","modified":1633072229067},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"903d12250ce70713dd5b8ac7e1f7a20fe15eb815","modified":1633072229067},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"73c04d62055840545112dd12d73807835ca62347","modified":1633072229068},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1633072229069},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1633072229069},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"d6556d5396eb0e10ea0ec10158779c21dc78f738","modified":1633072229070},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1633072229071},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1633072229071},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"3a2797d2744607ba6cdb5a02853851957c0f7e29","modified":1633072229072},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"419807903e5586b8804b1f8f17cea97bd05f0b17","modified":1633072229073},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"4d52000cae1fce333329c382dac6c9a21ad0b195","modified":1633072229073},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"7677911bd3f43edaf8230eea02f60a248eee9934","modified":1633072229074},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1633072229075},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1633072229077},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1633072229077},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1633072229078},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"dcccb1425fabcf12a1bed955518b0e7b1054cab0","modified":1633072229079},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"95924d28d71b28769963529f82b376a9dc731fad","modified":1633072229080},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"f5ea1e10a169aeb98e42b19ac084c4eb27693b46","modified":1633072229081},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"9aa743b1f6fb7fafabee38f9204ce9c8f1be7f9a","modified":1633072229081},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"62dc2e683d56ddc9b588abc44dc1cfb778a2c68f","modified":1633072229082},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"6ec54b77e3a90e148e66e317e5bb6c89624fddca","modified":1633072229083},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"c762732e200ff2627bc046af5f170b3269343341","modified":1633072229084},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"bee06b3f01fa1f0d8fa08c154234b452da425101","modified":1633072229086},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4c3da5a89b4e6fd3ab527f5c6d27790359d57f71","modified":1633072229102},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"d06dafe7faf3a2e328ef62f26166a51ffe7a5579","modified":1633072229109},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"ad59dcce32e4e67066303a1ffd1dd95874d9953e","modified":1633072229110},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"2448b243ded58aa1d5fc22fd115e6d06b636f9fd","modified":1633072229111},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"4a2ea9fe59f1dc8cb4f4f6a28cf24a40fc300254","modified":1633072229116},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1633072229117},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"009bdbef23381f10664622fafdc602f2ff5bf1ec","modified":1633072229118},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1633072229118},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"6c3449a44ae1a80f71dd4d9d6a85cec1781ceff1","modified":1633072229119},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1633072229119},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1633072229120},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"0f1a5c356c1ffd47ff49e153226e2d670dc61057","modified":1633072229120},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"0b5c165664f9f8691551fc5ff435b40e7f73c737","modified":1633072229121},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1633072229122},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1633072229122},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1633072229123},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1633072229124},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"e4c39101d7087066a86f7743985a53d6a246470b","modified":1633072229124},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f9de9db2a49ac4d5447660ab159171ac5c228e3c","modified":1633072229143},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"03164bca4546707543828cb2a41bc672b77bfa5a","modified":1633072229143},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"2e8e391b211b2416d3c9430ab5361659c073f348","modified":1633072229144},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"f25415a436100688248fef0ad90e3d4397627833","modified":1633072229150},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"23ea60f8becc91f6e9f6cfb1cbfd25689c263b9c","modified":1633072229151},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1633072229152},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"8e6c9a2c1881985e4b2ae14ef1bdfdbb1bc83b37","modified":1633072229152},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"bfc4b9d8df66593c11c9ae78899f54e69785ca90","modified":1633072229153},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"dd71e34edece4e06b59e941fb3cc5ad9a3ad09cf","modified":1633072229153},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"807f18717c29b5c41de6fc600a69a80ce8b7a19c","modified":1633072229154},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"db7fe645662d87be4f8dfc08e55bbe1a3734bf93","modified":1633072229155},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"814729d1d71f4326623a4f34b621bf0421503103","modified":1633072229155},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"8c4e08c8a63dacdfb2a733a0d0035fa97c7f5e9e","modified":1633072229156},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"4ae98e703440b616d2a36da139bda844c94d425e","modified":1633072229157},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"191ce31ce0f2b1d22a64225801a88cee6054f574","modified":1633072229158},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"943aa34c83c87d0225db65ae90621870472972fa","modified":1633072229159},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"a00ad74074513a1c7f6e02977b8fa778beaa2108","modified":1633072229157},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"87c576a3361f30eefafec27a872ad76e9fbb2765","modified":1633072229161},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"190b85de3e686393e45869d12464995f23b304dc","modified":1633072229162},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"5e5c1d6d104cc15314ae365d0da7cb07334a6457","modified":1633072229163},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"ca1d3a885a85a91fcd6f7b55fca96cafb6a1b0a3","modified":1633072229163},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"48ad198d0ea97a25db4d2a3e587a16ef41617c0b","modified":1633072229164},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"0da09b1811a776106ca66c56be6e2a396dca5680","modified":1633072229164},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"26e26797b3175498e20b2a8bf1679d3ed9fac5a6","modified":1633072229165},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"8489722684aa9b4baa38386f4d4b39f4dbd60113","modified":1633072229160},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"89a6cb63a97cc08675319c403e4a89391f6ab401","modified":1633072229160},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"25ac939fc57346de07ba9e15a1a760b492baefd7","modified":1633072229166},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"e65ed98056e6c91e622f94bad5283d00fdb22142","modified":1633072229167},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"fa2985afd08556b25f5f1a01bc1a7c76b294a962","modified":1633072229167},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"c3369a14f4111c098d0177036ca57df6deb59d72","modified":1633072229168},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"6c12a03e26ca5d538537d472657d3d03a7fcbb87","modified":1633072229169},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"aa0728c556af75f5d66ecd44fa207722d474c26d","modified":1633072229169},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"56691537c7f06c2cf1ffa1509a328f506d938ee8","modified":1633072229170},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1633072229170},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"c91609b7f431cacecc3718ae2fb7403c55f8267a","modified":1633072229171},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"8520674768dd0b1837f947892e8402b192a4f9c1","modified":1633072229172},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"75a5c15c7029197ec5cffd27f7c5455891c946c9","modified":1633072229172},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1633072229174},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"a19f12257b14f70806a0c3cb0e9df1090f36e919","modified":1633072229182},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"54378d52d275e4ab84173bb02e17ea02ae46e55f","modified":1633072229182},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1633072229087},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1633072229088},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1633072229088},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"eb2d840fa42de3ec7a7fda0eaa30246d52f543e2","modified":1633072229089},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"896dc0b7480151562c5717771e3000c5a7fc1b16","modified":1633072229090},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"f3db5c5e738e097a191dc0de59c61d3e1444f7c3","modified":1633072229090},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1633072229092},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1633072229092},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1633072229093},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1633072229093},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1633072229094},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1633072229095},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1633072229095},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"50126b2e841b01584b8b65b2f834038e3997b694","modified":1633072229096},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"0bf6a47e804fb793b40f82690a24816b902edd41","modified":1633072229097},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0254203aae73e70b90dfce6ec4f9c9d3be9ac9f8","modified":1633072229097},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"d97403cdd58c759cfd1752dd85aa4a0f9b73dc46","modified":1633072229098},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"e877c98949873a62659db7501d19eb3d66650b51","modified":1633072229099},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1633072229099},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"afffc4ac8ce93d39dcc892bd518805cf33531244","modified":1633072229100},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1c7e9fe86b7d7ef18cc876dfce19263fd4e73066","modified":1633072229100},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"8290994cf1ee2faff60214ff245cf513fbbe94aa","modified":1633072229101},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"0bf1c53b914443c66be5077ff09cfc218f111e11","modified":1633072229102},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1633072229103},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"266caf985dc0703ff81b871b8f8d206f57db6e79","modified":1633072229104},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"87e40f0c315407ab88571a2b3450d640f15c96bc","modified":1633072229104},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"faf1113de12d6db0486572d7e99b03cbd0c4a896","modified":1633072229105},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"8890becd8220c57db2c7451409710942c103a7f4","modified":1633072229105},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0ad766ae491e6fcba2ef3d136a7af6158cd4153e","modified":1633072229106},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"16cf05cf9649322da57e9b8d316573bb65f8d8d8","modified":1633072229107},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"767c38e3dfa0097b0dc1fdfd0df292c16f757d05","modified":1633072229107},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"a3d43cc360666b5b9730e8bb9e5c8fd940ae5b3d","modified":1633072229108},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"83103bad0db195bce095330c4a84e7529bbd40dd","modified":1633072229109},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"1c06e60b120c946c1856904848ceba6ab58d1f82","modified":1633072229112},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1633072229112},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"fbcf94ecdca30bed7cfc4f4ec08b200579c2614e","modified":1633072229113},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1633072229114},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"fbac21a6c5924fb2f8d1190fd634105fdbc603d4","modified":1633072229114},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1633072229115},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"7e9a7347dd8ca4c33c564fb62512743b6012bb2d","modified":1633072229115},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"b0916c8c7d15b67b55cb1618be8370870fedbf42","modified":1633072229145},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"b74c61f6e15b422e9d2df23133552bbd1b5fe513","modified":1633072229147},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1633072229148},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1633072229149},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"4d71aab9082c67d3ee52ad58dfc3c1c9b41f2ab1","modified":1633072229149},{"_id":"public/categories/index.html","hash":"e2aeaba5ea615e03d47e42cf4214fb6627a8fda9","modified":1633074082466},{"_id":"public/tags/index.html","hash":"bbfb1e64bb714357adb2220df45f56240d063f7a","modified":1633074082466},{"_id":"public/2021/10/01/JavaSE_day04【数组】/index.html","hash":"12556c8590cb36b4aec42ab2c17c226c5ea371c0","modified":1633074082466},{"_id":"public/2021/10/01/hello-world/index.html","hash":"9af5930ea7e8b7c5606257738e808f71bb9a3934","modified":1633074082466},{"_id":"public/archives/index.html","hash":"178eb6f2bf879da0921c8a01fbe0a040146abfaa","modified":1633074082466},{"_id":"public/categories/Java/index.html","hash":"eddfa2f950a0edffed98d99cf05b5b6b38df4271","modified":1633074082466},{"_id":"public/archives/2021/index.html","hash":"3b66701c92dde32df379b67c3532b186e112e669","modified":1633074082466},{"_id":"public/archives/2021/10/index.html","hash":"f2638cf31ce517f4d306c5b8b60392d214a1ec8f","modified":1633074082466},{"_id":"public/tags/Java/index.html","hash":"ef8af1d11b98479b97a5943fa27aae467955c62b","modified":1633074082466},{"_id":"public/tags/课后练习/index.html","hash":"1aa5e905f7ef4ce2ad3bc07f9e6207f145e74ba6","modified":1633074082466},{"_id":"public/tags/文档/index.html","hash":"9a4565baff5ab2e43f6fb35b3c7c792750d57161","modified":1633074082466},{"_id":"public/2021/10/01/day02课后练习/index.html","hash":"16fd4deac77a071eb837cf092e3b5ccd2c31e3be","modified":1633074082466},{"_id":"public/index.html","hash":"aabde84fb16c36db35af153324e1176ea62ab027","modified":1633074082466},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1633074082466},{"_id":"public/img/algolia.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1633074082466},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1633074082466},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1633074082466},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1633074082466},{"_id":"public/js/search/algolia.js","hash":"65b45e61586f7e66c3f338370bfd9daadd71a4b7","modified":1633074082466},{"_id":"public/js/utils.js","hash":"8319b59c26ce8cd2b0ae7d030c4912215148fa92","modified":1633074082466},{"_id":"public/js/search/local-search.js","hash":"b1429e9f80ef6b9a77434819ffb87d90bdad25e8","modified":1633074082466},{"_id":"public/css/index.css","hash":"bee737b5563415c3df235957e5b2ac02590b06b8","modified":1633074082466},{"_id":"public/js/main.js","hash":"b244f28124a46d7f1e8ef76ba6e925289691f93b","modified":1633074082466},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1633074082466}],"Category":[{"name":"Java","_id":"cku8257je0004q8v7avfnh9f0"}],"Data":[],"Page":[{"title":"分類","date":"2018-01-04T16:00:00.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分類\ndate: 2018-01-05 00:00:00\ntype: \"categories\"\n---","updated":"2021-10-01T07:30:25.167Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cku8257iw0000q8v7cyuj51lb","content":"","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""},{"title":"標籤","date":"2018-01-04T16:00:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 標籤\ndate: 2018-01-05 00:00:00\ntype: \"tags\"\n---","updated":"2021-10-01T07:30:34.496Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cku8257ja0002q8v78lqn85jp","content":"","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":""}],"Post":[{"title":"day02课后练习","_content":"\n\n# 基础题目:\n\n## 第一题\n\n* 按步骤编写代码，效果如图所示：\n\n![](img\\1.jpg)\n\n* 编写步骤：\n\n1. 定义类 Test1\n\n2. 定义 main方法\n\n3. 定义两个byte类型变量b1,b2,并分别赋值为10和20.\n\n4. 定义变量b3,保存b1和b2的和,并输出.\n\n5. 定义两个short类型变量s1,s2,并分别赋值为1000和2000.\n\n6. 定义变量s3,保存s1和s2的和,并输出.\n\n7. 定义一个char类型变量ch1赋值为'a',一个int类型变量i1赋值为30.\n\n8. 定义变量ch3,保存c1和i1的差,并输出.\n\n## 第二题\n\n* 按步骤编写代码，效果如图所示：\n\n  ![](img\\2.jpg)\n\n\n\n* 编写步骤：\n\n  1. 定义类 Test2\n  2. 定义 main方法\n  3. 定义 int类型变量i1 和 long类型变量l1\n  4. 定义变量add,保存i1和l1的和,并输出.\n  5. 定义 long类型变量l2 和 float类型变量f2\n  6. 定义变量add2,保存l2和f2的和,并输出.\n  7. 定义 int类型变量i3 和 double类型变量d3\n  8. 定义变量add3,保存i3和d3的和,并输出.\n  9. 定义 float类型变量f4 和 double类型变量d4\n  10. 定义变量add4,保存f4和d4的和,并输出.\n\n## 第三题\n\n- 按步骤编写代码，效果如图所示：\n\n  ![](img\\3.jpg)\n\n- 编写步骤：\n\n  1. 定义类 Test3\n  2. 定义 main方法\n  3. 定义char类型变量ch,赋值为'J'\n  4. 使用强制转换的方式,将变量ch转换为小写'j',并输出\n  5. 定义char类型变量ch2,赋值为'a'\n  6. 使用+=的方式,将变量ch2转换为大写'A',并输出\n  7. 定义double类型变量d3,int类型变量i3\n  8. 定义double变量sum3,保存d3与i3的和,输出sum3的值和sum3去除小数部分的值\n  9. 定义double类型变量d4,int类型变量i4\n  10. 定义int变量mul4,保存d4和i4乘积的整数部分,并输出\n\n\n\n## 第四题\n\n- 按步骤编写代码，效果如图所示：\n\n  ![](img\\4.jpg)\n\n- 编写步骤：\n\n  1. 定义类 Test4\n  2. 定义 main方法\n  3. 定义两个int类型变量a1和a2,分别赋值10,11,判断变量是否为偶数,拼接输出结果\n  4. 定义两个int类型变量a3和a4,分别赋值12,13,判断变量是否为奇数,拼接输出结果\n\n\n\n## 第五题\n\n- 按步骤编写代码，效果如图所示：\n\n  ![](img\\5.jpg)\n\n\n\n* 编写步骤：\n  1. 定义类 Test5\n  2. 定义 main方法\n  3. 定义一个int类型变量a,变量b,都赋值为20.\n  4. 定义boolean类型变量bo , 判断++a 是否被3整除,并且a++ 是否被7整除,将结果赋值给bo\n  5. 输出a的值,bo的值.\n  6. 定义boolean类型变量bo2 , 判断b++ 是否被3整除,并且++b 是否被7整除,将结果赋值给bo2\n  7. 输出b的值,bo2的值.\n\n\n\n## 第六题\n\n案例：为抵抗洪水，战士连续作战89小时，编程计算共多少天零多少小时？\n\n- 按步骤编写代码，效果如图所示：\n\n  ![1557879127503](img/6.png)\n\n\n* 编写步骤：\n  1. 定义类Test6\n  2. 定义main方法\n  3. 定义一个int类型变量hours，赋值为89\n  4. 定义一个int类型变量day，用来保存89小时中天数的结果\n  5. 定义一个int类型变量hour，用来保存89小时中不够一天的剩余小时数的结果\n  6. 输出结果\n\n\n\n## 第七题\n\n案例：今天是周2，100天以后是周几？\n\n* 按步骤编写代码，效果如图所示：\n\n![1557879464870](img/7.png)\n\n* 编写步骤：\n  1. 定义类Test7\n  2. 定义main方法\n  3. 定义一个int类型变量week，赋值为2\n  4. 修改week的值，在原值基础上加上100\n  5. 因为week的值加上100后超过了星期的范围，重写修改week的值\n  6. 输出结果，在输出结果的时候考虑特殊值，例如周日\n\n\n\n## 第八题\n\n案例：求三个整数x,y,z中的最大值\n\n* 按步骤编写代码，效果如图所示：\n\n![1557879847378](img/8.png)\n\n* 编写步骤：\n\n  1. 定义类Test8\n  2. 定义main方法\n  3. 定义三个int类型变量,x,y,z，随意赋值整数值\n  4. 定义一个int类型变量max，先存储x与y中的最大值（使用三元运算符）\n  5. 再次对max赋值，让它等于上面max与z中的最大值（使用三元运算符）\n  6. 输出结果\n\n\n\n## 第九题\n\n案例：给定一个年份，判断是否是闰年\n\n闰年的判断标准是：\n\n​       1）可以被4整除，但不可被100整除\n\n​       2）可以被400整除\n\n* 按步骤编写代码，效果如图所示：\n\n![1557902649882](img/9.png)\n\n* 编写步骤：\n  1. 定义类Test9\n  2. 定义main方法\n  3. 定义一个int类型变量year，随意赋值一个年份\n  4. 定一个一个boolean类型变量，用来保存这个年份是否是闰年的结果\n  5. 输出结果\n\n\n\n## 第十题\n\n案例：小明要到美国旅游，可是那里的温度是以华氏度为单位记录的。它需要一个程序将华氏温度（80度）转换为摄氏度，并以华氏度和摄氏度为单位分别显示该温度。\n\n![1557903785834](img/1557903785834.png)\n\n* 按步骤编写代码，效果如图所示：\n\n  ![1557903814057](img/1557903814057.png)\n\n* 编写步骤：\n  1. 定义类Test10\n  2. 定义main方法\n  3. 定义一个double类型变量hua，存储华氏温度80\n  4. 定义一个double类型变量she，存储摄氏温度，根据公式求值\n  5. 输出结果\n\n\n\n# 阅读代码题：\n\n## 第一题\n\n```java\n如下代码的计算结果是：\nint i = 1;\ni *= 0.2;  \ni++;\nSystem.out.println(\"i=\" + i);\n```\n\n## 第二题\n\n```java\n如下代码的运算结果是：\nint i = 2;\ni *= i++;\n\nint j = 2;\nj *= j+1; \n\nint k = 2;\nk *= ++k;\n\nSystem.out.println(\"i=\" + i);\nSystem.out.println(\"j=\" + j);\nSystem.out.println(\"k=\" + k);\n```\n\n## 第三题\n\n```java\n\tpublic static void main(String[] args) {\n\t\tint a = 3;\n\t\tint b = 1;\n\t\tif(a = b){\n\t\t\tSystem.out.println(\"Equal\");\n\t\t}else{\n\t\t\tSystem.out.println(\"Not Equal\");\n\t\t}\n\t}\n```\n\n\n## 第四题\n\n```java\n\tpublic static void main(String[] args) {\n\t\tint a = 8, b = 3;\n\t\tSystem.out.println(a>>>b);\n\t\tSystem.out.println(a>>>b | 2);\n\t}\n```\n\n```java\n\npublic class Test1 {\n    public static void main(String[] args) {\n        /**\n         * 第一题\n         */\n//        Byte b1 =10;\n//        Byte b2 = 20;\n//        int b3 = b1 + b2;\n//        System.out.println(\"b3 = \" + b3);\n//        short s1 = 1000;\n//        short s2 = 2000;\n//        int s3 = s1+s2;\n//        System.out.println(\"s3 = \" + s3);\n//        char ch1='a';\n//        int i1=30;\n//        int ch3 = ch1-i1;\n//        System.out.println(\"ch3 = \" + ch3);\n        /**\n         * 第二题\n         */\n//        int i1 =0;\n//        long l1 = 0;\n//        long add = i1 + l1;\n//        System.out.println(\"add = \" + add);\n//\n//        long l2 = 1;\n//        float f2 = 2.0f;\n//        float add2 = l2 + f2;\n//        System.out.println(\"add2 = \" + add2);\n//\n//        int i3 = 3;\n//        double d3 = 5.1345;\n//        double add3 = i3 + d3;\n//        System.out.println(\"add3 = \" + add3);\n//\n//        float f4 = 3.14f;\n//        double d4 = 3.1415926;\n//        double add4 = f4 + d4;\n//        System.out.println(\"add4 = \" + add4);\n        /**\n         * 第三题\n         */\n//        char ch = 'J';\n//          ch = (char) (ch + 32);\n////        char ch1 = (char)(ch +32);\n//        System.out.println(\"ch = \" + ch);\n//\n//        char ch2 = 'a';\n//        ch +=32;\n//        System.out.println(\"ch2 = \" + ch2);\n//\n//        double d3= 20.1;\n//        int i3 = 555;\n//        double sum3 = d3 + i3;\n//        System.out.println(\"sum3 = \" + sum3);\n//        int sum4= (int)sum3;\n//        System.out.println(\"sum4 = \" + sum4);\n//\n//        double d4 = 5.555;\n//        int i4 = 4396;\n//        int mul4 = (int) (d4 * i4);\n//        System.out.println(\"mul4 = \" + mul4);\n\n//        /**\n//         * 第四题\n//         */\n//        int a1 = 10,a2 = 11;\n//        String s1 =  a1%2 == 0 ? \"偶数\" : \"奇数\";\n//        System.out.println(\"10是否是偶数: 是\" + s1);\n//        String s2 =  a2%2 == 0 ? \"偶数\" : \"奇数\";\n//        System.out.println(\"11是\" +s2);\n//        int a3 = 12,a4 = 13;\n//        System.out.println(\"12是\" + (a3 % 2 == 0));\n//        System.out.println(\"13是\" + (a4 % 2 == 0));\n\n        /**\n         * 第五题\n         */\n//        int a = 20,b = 20;\n//        boolean bo = false;\n//        if (++a % 3 == 0 && a++ % 7 ==0){\n//            bo = true;\n//            System.out.println(\"a = \" + a);\n//        }else{\n//            System.out.println(\"bo == \" + false);\n//            System.out.println(a);\n//        }\n//        boolean bo2 = false;\n//        if (b++ % 3 == 0 && ++b % 7 == 0){\n//            bo2 = true;\n//            System.out.println(\"b = \" + b);\n//        }else {\n//            System.out.println(bo2);\n//            System.out.println(\"b = \" + b);\n//        }\n\n\n//        boolean bo3 = ((++a % 3) == 0 && (a++ % 7 == 0));\n//        boolean bo4 = ((b++ % 3 ) == 0 && (++b % 7 == 0));\n//        System.out.println(\"bo3 = \" + bo3);\n//        System.out.println(\"bo4 = \" + bo4);\n//        System.out.println(\"a = \" + a);\n//        System.out.println(\"b = \" + b);\n\n        /**\n         * 第六题\n         */\n//        int hours = 89;\n//        int day = hours / 24;\n//        int hour= hours % 24;\n//        System.out.println(\"战士连续作战\" + day +\"天\"+hour+\"小时\");\n        /**\n         * 第七题\n         */\n//        int week = 2;\n//        week += 100;\n//        week = week % 7;\n//        System.out.println(\"week = \" + week);\n\n        /**\n         * 第八题\n         */\n//        int x=1,y=2,z=3;\n//        int max = x>y ? x : y;\n//        System.out.println(\"max = \" + max);\n//        max = max > y ? max : z;\n//        System.out.println(\"max = \" + max);\n        /**\n         * 第九题\n         */\n//        int year = 2000;\n//        boolean bl=((year % 4 ==0 && year % 100 != 0) || (year % 400 == 0));\n//        System.out.println(\"bl = \" + bl);\n        /**\n         * 第十题\n         */\n//        double hua = 80;\n//        double she = (hua-32)/1.8;\n//        System.out.println(\"she = \" + she);\n\n        /**\n         * 阅读代码题\n         */\n//        int i = 2;\n//        i *= i++;\n//        int j = 2;\n//        j *= j+1;\n//        int k = 2;\n//        k *= ++k;\n//        System.out.println(\"i=\" + i);\n//        System.out.println(\"j=\" + j);\n//        System.out.println(\"k=\" + k);\n//        4 4 6\n\n\n\n//        int i = 1;\n//        i *= 0.2;\n//        i++;\n//        System.out.println(\"i=\" + i);\n\n//        1\n\n//        int a = 3;\n//        int b = 1;\n//        if(a = b){  //编译错误\n//            System.out.println(\"Equal\");\n//        }else{\n//            System.out.println(\"Not Equal\");\n//        }\n\n//            int a = 8, b = 3;\n//            System.out.println(a>>>b); //1\n//            System.out.println(a>>>b | 2); //3\n\n    }\n}\n\n```\n\n","source":"_posts/day02课后练习.md","raw":"---\ntitle: day02课后练习\ntags:\n  - Java\n  - 课后练习\ncategories: Java\n---\n\n\n# 基础题目:\n\n## 第一题\n\n* 按步骤编写代码，效果如图所示：\n\n![](img\\1.jpg)\n\n* 编写步骤：\n\n1. 定义类 Test1\n\n2. 定义 main方法\n\n3. 定义两个byte类型变量b1,b2,并分别赋值为10和20.\n\n4. 定义变量b3,保存b1和b2的和,并输出.\n\n5. 定义两个short类型变量s1,s2,并分别赋值为1000和2000.\n\n6. 定义变量s3,保存s1和s2的和,并输出.\n\n7. 定义一个char类型变量ch1赋值为'a',一个int类型变量i1赋值为30.\n\n8. 定义变量ch3,保存c1和i1的差,并输出.\n\n## 第二题\n\n* 按步骤编写代码，效果如图所示：\n\n  ![](img\\2.jpg)\n\n\n\n* 编写步骤：\n\n  1. 定义类 Test2\n  2. 定义 main方法\n  3. 定义 int类型变量i1 和 long类型变量l1\n  4. 定义变量add,保存i1和l1的和,并输出.\n  5. 定义 long类型变量l2 和 float类型变量f2\n  6. 定义变量add2,保存l2和f2的和,并输出.\n  7. 定义 int类型变量i3 和 double类型变量d3\n  8. 定义变量add3,保存i3和d3的和,并输出.\n  9. 定义 float类型变量f4 和 double类型变量d4\n  10. 定义变量add4,保存f4和d4的和,并输出.\n\n## 第三题\n\n- 按步骤编写代码，效果如图所示：\n\n  ![](img\\3.jpg)\n\n- 编写步骤：\n\n  1. 定义类 Test3\n  2. 定义 main方法\n  3. 定义char类型变量ch,赋值为'J'\n  4. 使用强制转换的方式,将变量ch转换为小写'j',并输出\n  5. 定义char类型变量ch2,赋值为'a'\n  6. 使用+=的方式,将变量ch2转换为大写'A',并输出\n  7. 定义double类型变量d3,int类型变量i3\n  8. 定义double变量sum3,保存d3与i3的和,输出sum3的值和sum3去除小数部分的值\n  9. 定义double类型变量d4,int类型变量i4\n  10. 定义int变量mul4,保存d4和i4乘积的整数部分,并输出\n\n\n\n## 第四题\n\n- 按步骤编写代码，效果如图所示：\n\n  ![](img\\4.jpg)\n\n- 编写步骤：\n\n  1. 定义类 Test4\n  2. 定义 main方法\n  3. 定义两个int类型变量a1和a2,分别赋值10,11,判断变量是否为偶数,拼接输出结果\n  4. 定义两个int类型变量a3和a4,分别赋值12,13,判断变量是否为奇数,拼接输出结果\n\n\n\n## 第五题\n\n- 按步骤编写代码，效果如图所示：\n\n  ![](img\\5.jpg)\n\n\n\n* 编写步骤：\n  1. 定义类 Test5\n  2. 定义 main方法\n  3. 定义一个int类型变量a,变量b,都赋值为20.\n  4. 定义boolean类型变量bo , 判断++a 是否被3整除,并且a++ 是否被7整除,将结果赋值给bo\n  5. 输出a的值,bo的值.\n  6. 定义boolean类型变量bo2 , 判断b++ 是否被3整除,并且++b 是否被7整除,将结果赋值给bo2\n  7. 输出b的值,bo2的值.\n\n\n\n## 第六题\n\n案例：为抵抗洪水，战士连续作战89小时，编程计算共多少天零多少小时？\n\n- 按步骤编写代码，效果如图所示：\n\n  ![1557879127503](img/6.png)\n\n\n* 编写步骤：\n  1. 定义类Test6\n  2. 定义main方法\n  3. 定义一个int类型变量hours，赋值为89\n  4. 定义一个int类型变量day，用来保存89小时中天数的结果\n  5. 定义一个int类型变量hour，用来保存89小时中不够一天的剩余小时数的结果\n  6. 输出结果\n\n\n\n## 第七题\n\n案例：今天是周2，100天以后是周几？\n\n* 按步骤编写代码，效果如图所示：\n\n![1557879464870](img/7.png)\n\n* 编写步骤：\n  1. 定义类Test7\n  2. 定义main方法\n  3. 定义一个int类型变量week，赋值为2\n  4. 修改week的值，在原值基础上加上100\n  5. 因为week的值加上100后超过了星期的范围，重写修改week的值\n  6. 输出结果，在输出结果的时候考虑特殊值，例如周日\n\n\n\n## 第八题\n\n案例：求三个整数x,y,z中的最大值\n\n* 按步骤编写代码，效果如图所示：\n\n![1557879847378](img/8.png)\n\n* 编写步骤：\n\n  1. 定义类Test8\n  2. 定义main方法\n  3. 定义三个int类型变量,x,y,z，随意赋值整数值\n  4. 定义一个int类型变量max，先存储x与y中的最大值（使用三元运算符）\n  5. 再次对max赋值，让它等于上面max与z中的最大值（使用三元运算符）\n  6. 输出结果\n\n\n\n## 第九题\n\n案例：给定一个年份，判断是否是闰年\n\n闰年的判断标准是：\n\n​       1）可以被4整除，但不可被100整除\n\n​       2）可以被400整除\n\n* 按步骤编写代码，效果如图所示：\n\n![1557902649882](img/9.png)\n\n* 编写步骤：\n  1. 定义类Test9\n  2. 定义main方法\n  3. 定义一个int类型变量year，随意赋值一个年份\n  4. 定一个一个boolean类型变量，用来保存这个年份是否是闰年的结果\n  5. 输出结果\n\n\n\n## 第十题\n\n案例：小明要到美国旅游，可是那里的温度是以华氏度为单位记录的。它需要一个程序将华氏温度（80度）转换为摄氏度，并以华氏度和摄氏度为单位分别显示该温度。\n\n![1557903785834](img/1557903785834.png)\n\n* 按步骤编写代码，效果如图所示：\n\n  ![1557903814057](img/1557903814057.png)\n\n* 编写步骤：\n  1. 定义类Test10\n  2. 定义main方法\n  3. 定义一个double类型变量hua，存储华氏温度80\n  4. 定义一个double类型变量she，存储摄氏温度，根据公式求值\n  5. 输出结果\n\n\n\n# 阅读代码题：\n\n## 第一题\n\n```java\n如下代码的计算结果是：\nint i = 1;\ni *= 0.2;  \ni++;\nSystem.out.println(\"i=\" + i);\n```\n\n## 第二题\n\n```java\n如下代码的运算结果是：\nint i = 2;\ni *= i++;\n\nint j = 2;\nj *= j+1; \n\nint k = 2;\nk *= ++k;\n\nSystem.out.println(\"i=\" + i);\nSystem.out.println(\"j=\" + j);\nSystem.out.println(\"k=\" + k);\n```\n\n## 第三题\n\n```java\n\tpublic static void main(String[] args) {\n\t\tint a = 3;\n\t\tint b = 1;\n\t\tif(a = b){\n\t\t\tSystem.out.println(\"Equal\");\n\t\t}else{\n\t\t\tSystem.out.println(\"Not Equal\");\n\t\t}\n\t}\n```\n\n\n## 第四题\n\n```java\n\tpublic static void main(String[] args) {\n\t\tint a = 8, b = 3;\n\t\tSystem.out.println(a>>>b);\n\t\tSystem.out.println(a>>>b | 2);\n\t}\n```\n\n```java\n\npublic class Test1 {\n    public static void main(String[] args) {\n        /**\n         * 第一题\n         */\n//        Byte b1 =10;\n//        Byte b2 = 20;\n//        int b3 = b1 + b2;\n//        System.out.println(\"b3 = \" + b3);\n//        short s1 = 1000;\n//        short s2 = 2000;\n//        int s3 = s1+s2;\n//        System.out.println(\"s3 = \" + s3);\n//        char ch1='a';\n//        int i1=30;\n//        int ch3 = ch1-i1;\n//        System.out.println(\"ch3 = \" + ch3);\n        /**\n         * 第二题\n         */\n//        int i1 =0;\n//        long l1 = 0;\n//        long add = i1 + l1;\n//        System.out.println(\"add = \" + add);\n//\n//        long l2 = 1;\n//        float f2 = 2.0f;\n//        float add2 = l2 + f2;\n//        System.out.println(\"add2 = \" + add2);\n//\n//        int i3 = 3;\n//        double d3 = 5.1345;\n//        double add3 = i3 + d3;\n//        System.out.println(\"add3 = \" + add3);\n//\n//        float f4 = 3.14f;\n//        double d4 = 3.1415926;\n//        double add4 = f4 + d4;\n//        System.out.println(\"add4 = \" + add4);\n        /**\n         * 第三题\n         */\n//        char ch = 'J';\n//          ch = (char) (ch + 32);\n////        char ch1 = (char)(ch +32);\n//        System.out.println(\"ch = \" + ch);\n//\n//        char ch2 = 'a';\n//        ch +=32;\n//        System.out.println(\"ch2 = \" + ch2);\n//\n//        double d3= 20.1;\n//        int i3 = 555;\n//        double sum3 = d3 + i3;\n//        System.out.println(\"sum3 = \" + sum3);\n//        int sum4= (int)sum3;\n//        System.out.println(\"sum4 = \" + sum4);\n//\n//        double d4 = 5.555;\n//        int i4 = 4396;\n//        int mul4 = (int) (d4 * i4);\n//        System.out.println(\"mul4 = \" + mul4);\n\n//        /**\n//         * 第四题\n//         */\n//        int a1 = 10,a2 = 11;\n//        String s1 =  a1%2 == 0 ? \"偶数\" : \"奇数\";\n//        System.out.println(\"10是否是偶数: 是\" + s1);\n//        String s2 =  a2%2 == 0 ? \"偶数\" : \"奇数\";\n//        System.out.println(\"11是\" +s2);\n//        int a3 = 12,a4 = 13;\n//        System.out.println(\"12是\" + (a3 % 2 == 0));\n//        System.out.println(\"13是\" + (a4 % 2 == 0));\n\n        /**\n         * 第五题\n         */\n//        int a = 20,b = 20;\n//        boolean bo = false;\n//        if (++a % 3 == 0 && a++ % 7 ==0){\n//            bo = true;\n//            System.out.println(\"a = \" + a);\n//        }else{\n//            System.out.println(\"bo == \" + false);\n//            System.out.println(a);\n//        }\n//        boolean bo2 = false;\n//        if (b++ % 3 == 0 && ++b % 7 == 0){\n//            bo2 = true;\n//            System.out.println(\"b = \" + b);\n//        }else {\n//            System.out.println(bo2);\n//            System.out.println(\"b = \" + b);\n//        }\n\n\n//        boolean bo3 = ((++a % 3) == 0 && (a++ % 7 == 0));\n//        boolean bo4 = ((b++ % 3 ) == 0 && (++b % 7 == 0));\n//        System.out.println(\"bo3 = \" + bo3);\n//        System.out.println(\"bo4 = \" + bo4);\n//        System.out.println(\"a = \" + a);\n//        System.out.println(\"b = \" + b);\n\n        /**\n         * 第六题\n         */\n//        int hours = 89;\n//        int day = hours / 24;\n//        int hour= hours % 24;\n//        System.out.println(\"战士连续作战\" + day +\"天\"+hour+\"小时\");\n        /**\n         * 第七题\n         */\n//        int week = 2;\n//        week += 100;\n//        week = week % 7;\n//        System.out.println(\"week = \" + week);\n\n        /**\n         * 第八题\n         */\n//        int x=1,y=2,z=3;\n//        int max = x>y ? x : y;\n//        System.out.println(\"max = \" + max);\n//        max = max > y ? max : z;\n//        System.out.println(\"max = \" + max);\n        /**\n         * 第九题\n         */\n//        int year = 2000;\n//        boolean bl=((year % 4 ==0 && year % 100 != 0) || (year % 400 == 0));\n//        System.out.println(\"bl = \" + bl);\n        /**\n         * 第十题\n         */\n//        double hua = 80;\n//        double she = (hua-32)/1.8;\n//        System.out.println(\"she = \" + she);\n\n        /**\n         * 阅读代码题\n         */\n//        int i = 2;\n//        i *= i++;\n//        int j = 2;\n//        j *= j+1;\n//        int k = 2;\n//        k *= ++k;\n//        System.out.println(\"i=\" + i);\n//        System.out.println(\"j=\" + j);\n//        System.out.println(\"k=\" + k);\n//        4 4 6\n\n\n\n//        int i = 1;\n//        i *= 0.2;\n//        i++;\n//        System.out.println(\"i=\" + i);\n\n//        1\n\n//        int a = 3;\n//        int b = 1;\n//        if(a = b){  //编译错误\n//            System.out.println(\"Equal\");\n//        }else{\n//            System.out.println(\"Not Equal\");\n//        }\n\n//            int a = 8, b = 3;\n//            System.out.println(a>>>b); //1\n//            System.out.println(a>>>b | 2); //3\n\n    }\n}\n\n```\n\n","slug":"day02课后练习","published":1,"date":"2021-10-01T07:24:26.744Z","updated":"2021-10-01T05:51:07.669Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cku8257j20001q8v7hph936y3","content":"<h1 id=\"基础题目\"><a href=\"#基础题目\" class=\"headerlink\" title=\"基础题目:\"></a>基础题目:</h1><h2 id=\"第一题\"><a href=\"#第一题\" class=\"headerlink\" title=\"第一题\"></a>第一题</h2><ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img%5C1.jpg\"></p>\n<ul>\n<li>编写步骤：</li>\n</ul>\n<ol>\n<li><p>定义类 Test1</p>\n</li>\n<li><p>定义 main方法</p>\n</li>\n<li><p>定义两个byte类型变量b1,b2,并分别赋值为10和20.</p>\n</li>\n<li><p>定义变量b3,保存b1和b2的和,并输出.</p>\n</li>\n<li><p>定义两个short类型变量s1,s2,并分别赋值为1000和2000.</p>\n</li>\n<li><p>定义变量s3,保存s1和s2的和,并输出.</p>\n</li>\n<li><p>定义一个char类型变量ch1赋值为’a’,一个int类型变量i1赋值为30.</p>\n</li>\n<li><p>定义变量ch3,保存c1和i1的差,并输出.</p>\n</li>\n</ol>\n<h2 id=\"第二题\"><a href=\"#第二题\" class=\"headerlink\" title=\"第二题\"></a>第二题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C2.jpg\"></p>\n</li>\n</ul>\n<ul>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类 Test2</li>\n<li>定义 main方法</li>\n<li>定义 int类型变量i1 和 long类型变量l1</li>\n<li>定义变量add,保存i1和l1的和,并输出.</li>\n<li>定义 long类型变量l2 和 float类型变量f2</li>\n<li>定义变量add2,保存l2和f2的和,并输出.</li>\n<li>定义 int类型变量i3 和 double类型变量d3</li>\n<li>定义变量add3,保存i3和d3的和,并输出.</li>\n<li>定义 float类型变量f4 和 double类型变量d4</li>\n<li>定义变量add4,保存f4和d4的和,并输出.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第三题\"><a href=\"#第三题\" class=\"headerlink\" title=\"第三题\"></a>第三题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C3.jpg\"></p>\n</li>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类 Test3</li>\n<li>定义 main方法</li>\n<li>定义char类型变量ch,赋值为’J’</li>\n<li>使用强制转换的方式,将变量ch转换为小写’j’,并输出</li>\n<li>定义char类型变量ch2,赋值为’a’</li>\n<li>使用+=的方式,将变量ch2转换为大写’A’,并输出</li>\n<li>定义double类型变量d3,int类型变量i3</li>\n<li>定义double变量sum3,保存d3与i3的和,输出sum3的值和sum3去除小数部分的值</li>\n<li>定义double类型变量d4,int类型变量i4</li>\n<li>定义int变量mul4,保存d4和i4乘积的整数部分,并输出</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第四题\"><a href=\"#第四题\" class=\"headerlink\" title=\"第四题\"></a>第四题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C4.jpg\"></p>\n</li>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类 Test4</li>\n<li>定义 main方法</li>\n<li>定义两个int类型变量a1和a2,分别赋值10,11,判断变量是否为偶数,拼接输出结果</li>\n<li>定义两个int类型变量a3和a4,分别赋值12,13,判断变量是否为奇数,拼接输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第五题\"><a href=\"#第五题\" class=\"headerlink\" title=\"第五题\"></a>第五题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C5.jpg\"></p>\n</li>\n</ul>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类 Test5</li>\n<li>定义 main方法</li>\n<li>定义一个int类型变量a,变量b,都赋值为20.</li>\n<li>定义boolean类型变量bo , 判断++a 是否被3整除,并且a++ 是否被7整除,将结果赋值给bo</li>\n<li>输出a的值,bo的值.</li>\n<li>定义boolean类型变量bo2 , 判断b++ 是否被3整除,并且++b 是否被7整除,将结果赋值给bo2</li>\n<li>输出b的值,bo2的值.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第六题\"><a href=\"#第六题\" class=\"headerlink\" title=\"第六题\"></a>第六题</h2><p>案例：为抵抗洪水，战士连续作战89小时，编程计算共多少天零多少小时？</p>\n<ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img/6.png\" alt=\"1557879127503\"></p>\n</li>\n</ul>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类Test6</li>\n<li>定义main方法</li>\n<li>定义一个int类型变量hours，赋值为89</li>\n<li>定义一个int类型变量day，用来保存89小时中天数的结果</li>\n<li>定义一个int类型变量hour，用来保存89小时中不够一天的剩余小时数的结果</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第七题\"><a href=\"#第七题\" class=\"headerlink\" title=\"第七题\"></a>第七题</h2><p>案例：今天是周2，100天以后是周几？</p>\n<ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img/7.png\" alt=\"1557879464870\"></p>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类Test7</li>\n<li>定义main方法</li>\n<li>定义一个int类型变量week，赋值为2</li>\n<li>修改week的值，在原值基础上加上100</li>\n<li>因为week的值加上100后超过了星期的范围，重写修改week的值</li>\n<li>输出结果，在输出结果的时候考虑特殊值，例如周日</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第八题\"><a href=\"#第八题\" class=\"headerlink\" title=\"第八题\"></a>第八题</h2><p>案例：求三个整数x,y,z中的最大值</p>\n<ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img/8.png\" alt=\"1557879847378\"></p>\n<ul>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类Test8</li>\n<li>定义main方法</li>\n<li>定义三个int类型变量,x,y,z，随意赋值整数值</li>\n<li>定义一个int类型变量max，先存储x与y中的最大值（使用三元运算符）</li>\n<li>再次对max赋值，让它等于上面max与z中的最大值（使用三元运算符）</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第九题\"><a href=\"#第九题\" class=\"headerlink\" title=\"第九题\"></a>第九题</h2><p>案例：给定一个年份，判断是否是闰年</p>\n<p>闰年的判断标准是：</p>\n<p>​       1）可以被4整除，但不可被100整除</p>\n<p>​       2）可以被400整除</p>\n<ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img/9.png\" alt=\"1557902649882\"></p>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类Test9</li>\n<li>定义main方法</li>\n<li>定义一个int类型变量year，随意赋值一个年份</li>\n<li>定一个一个boolean类型变量，用来保存这个年份是否是闰年的结果</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第十题\"><a href=\"#第十题\" class=\"headerlink\" title=\"第十题\"></a>第十题</h2><p>案例：小明要到美国旅游，可是那里的温度是以华氏度为单位记录的。它需要一个程序将华氏温度（80度）转换为摄氏度，并以华氏度和摄氏度为单位分别显示该温度。</p>\n<p><img src=\"img/1557903785834.png\" alt=\"1557903785834\"></p>\n<ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img/1557903814057.png\" alt=\"1557903814057\"></p>\n</li>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类Test10</li>\n<li>定义main方法</li>\n<li>定义一个double类型变量hua，存储华氏温度80</li>\n<li>定义一个double类型变量she，存储摄氏温度，根据公式求值</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"阅读代码题：\"><a href=\"#阅读代码题：\" class=\"headerlink\" title=\"阅读代码题：\"></a>阅读代码题：</h1><h2 id=\"第一题-1\"><a href=\"#第一题-1\" class=\"headerlink\" title=\"第一题\"></a>第一题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如下代码的计算结果是：</span><br><span class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">i *= <span class=\"number\">0.2</span>;  </span><br><span class=\"line\">i++;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;i=&quot;</span> + i);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第二题-1\"><a href=\"#第二题-1\" class=\"headerlink\" title=\"第二题\"></a>第二题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如下代码的运算结果是：</span><br><span class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;</span><br><span class=\"line\">i *= i++;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> j = <span class=\"number\">2</span>;</span><br><span class=\"line\">j *= j+<span class=\"number\">1</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> k = <span class=\"number\">2</span>;</span><br><span class=\"line\">k *= ++k;</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;i=&quot;</span> + i);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;j=&quot;</span> + j);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;k=&quot;</span> + k);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三题-1\"><a href=\"#第三题-1\" class=\"headerlink\" title=\"第三题\"></a>第三题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a = b)&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;Equal&quot;</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;Not Equal&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"第四题-1\"><a href=\"#第四题-1\" class=\"headerlink\" title=\"第四题\"></a>第四题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">8</span>, b = <span class=\"number\">3</span>;</span><br><span class=\"line\">\tSystem.out.println(a&gt;&gt;&gt;b);</span><br><span class=\"line\">\tSystem.out.println(a&gt;&gt;&gt;b | <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test1</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第一题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        Byte b1 =10;</span></span><br><span class=\"line\"><span class=\"comment\">//        Byte b2 = 20;</span></span><br><span class=\"line\"><span class=\"comment\">//        int b3 = b1 + b2;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;b3 = &quot; + b3);</span></span><br><span class=\"line\"><span class=\"comment\">//        short s1 = 1000;</span></span><br><span class=\"line\"><span class=\"comment\">//        short s2 = 2000;</span></span><br><span class=\"line\"><span class=\"comment\">//        int s3 = s1+s2;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;s3 = &quot; + s3);</span></span><br><span class=\"line\"><span class=\"comment\">//        char ch1=&#x27;a&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//        int i1=30;</span></span><br><span class=\"line\"><span class=\"comment\">//        int ch3 = ch1-i1;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;ch3 = &quot; + ch3);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第二题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int i1 =0;</span></span><br><span class=\"line\"><span class=\"comment\">//        long l1 = 0;</span></span><br><span class=\"line\"><span class=\"comment\">//        long add = i1 + l1;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add = &quot; + add);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        long l2 = 1;</span></span><br><span class=\"line\"><span class=\"comment\">//        float f2 = 2.0f;</span></span><br><span class=\"line\"><span class=\"comment\">//        float add2 = l2 + f2;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add2 = &quot; + add2);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        int i3 = 3;</span></span><br><span class=\"line\"><span class=\"comment\">//        double d3 = 5.1345;</span></span><br><span class=\"line\"><span class=\"comment\">//        double add3 = i3 + d3;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add3 = &quot; + add3);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        float f4 = 3.14f;</span></span><br><span class=\"line\"><span class=\"comment\">//        double d4 = 3.1415926;</span></span><br><span class=\"line\"><span class=\"comment\">//        double add4 = f4 + d4;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add4 = &quot; + add4);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第三题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        char ch = &#x27;J&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//          ch = (char) (ch + 32);</span></span><br><span class=\"line\"><span class=\"comment\">////        char ch1 = (char)(ch +32);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;ch = &quot; + ch);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        char ch2 = &#x27;a&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//        ch +=32;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;ch2 = &quot; + ch2);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        double d3= 20.1;</span></span><br><span class=\"line\"><span class=\"comment\">//        int i3 = 555;</span></span><br><span class=\"line\"><span class=\"comment\">//        double sum3 = d3 + i3;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;sum3 = &quot; + sum3);</span></span><br><span class=\"line\"><span class=\"comment\">//        int sum4= (int)sum3;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;sum4 = &quot; + sum4);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        double d4 = 5.555;</span></span><br><span class=\"line\"><span class=\"comment\">//        int i4 = 4396;</span></span><br><span class=\"line\"><span class=\"comment\">//        int mul4 = (int) (d4 * i4);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;mul4 = &quot; + mul4);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        /**</span></span><br><span class=\"line\"><span class=\"comment\">//         * 第四题</span></span><br><span class=\"line\"><span class=\"comment\">//         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int a1 = 10,a2 = 11;</span></span><br><span class=\"line\"><span class=\"comment\">//        String s1 =  a1%2 == 0 ? &quot;偶数&quot; : &quot;奇数&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;10是否是偶数: 是&quot; + s1);</span></span><br><span class=\"line\"><span class=\"comment\">//        String s2 =  a2%2 == 0 ? &quot;偶数&quot; : &quot;奇数&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;11是&quot; +s2);</span></span><br><span class=\"line\"><span class=\"comment\">//        int a3 = 12,a4 = 13;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;12是&quot; + (a3 % 2 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;13是&quot; + (a4 % 2 == 0));</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第五题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int a = 20,b = 20;</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo = false;</span></span><br><span class=\"line\"><span class=\"comment\">//        if (++a % 3 == 0 &amp;&amp; a++ % 7 ==0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            bo = true;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;a = &quot; + a);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;bo == &quot; + false);</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(a);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo2 = false;</span></span><br><span class=\"line\"><span class=\"comment\">//        if (b++ % 3 == 0 &amp;&amp; ++b % 7 == 0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            bo2 = true;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;b = &quot; + b);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(bo2);</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;b = &quot; + b);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo3 = ((++a % 3) == 0 &amp;&amp; (a++ % 7 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo4 = ((b++ % 3 ) == 0 &amp;&amp; (++b % 7 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;bo3 = &quot; + bo3);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;bo4 = &quot; + bo4);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;a = &quot; + a);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;b = &quot; + b);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第六题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int hours = 89;</span></span><br><span class=\"line\"><span class=\"comment\">//        int day = hours / 24;</span></span><br><span class=\"line\"><span class=\"comment\">//        int hour= hours % 24;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;战士连续作战&quot; + day +&quot;天&quot;+hour+&quot;小时&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第七题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int week = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        week += 100;</span></span><br><span class=\"line\"><span class=\"comment\">//        week = week % 7;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;week = &quot; + week);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第八题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int x=1,y=2,z=3;</span></span><br><span class=\"line\"><span class=\"comment\">//        int max = x&gt;y ? x : y;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;max = &quot; + max);</span></span><br><span class=\"line\"><span class=\"comment\">//        max = max &gt; y ? max : z;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;max = &quot; + max);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第九题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int year = 2000;</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bl=((year % 4 ==0 &amp;&amp; year % 100 != 0) || (year % 400 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;bl = &quot; + bl);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第十题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        double hua = 80;</span></span><br><span class=\"line\"><span class=\"comment\">//        double she = (hua-32)/1.8;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;she = &quot; + she);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 阅读代码题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int i = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        i *= i++;</span></span><br><span class=\"line\"><span class=\"comment\">//        int j = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        j *= j+1;</span></span><br><span class=\"line\"><span class=\"comment\">//        int k = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        k *= ++k;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;i=&quot; + i);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;j=&quot; + j);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;k=&quot; + k);</span></span><br><span class=\"line\"><span class=\"comment\">//        4 4 6</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        int i = 1;</span></span><br><span class=\"line\"><span class=\"comment\">//        i *= 0.2;</span></span><br><span class=\"line\"><span class=\"comment\">//        i++;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;i=&quot; + i);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        int a = 3;</span></span><br><span class=\"line\"><span class=\"comment\">//        int b = 1;</span></span><br><span class=\"line\"><span class=\"comment\">//        if(a = b)&#123;  //编译错误</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;Equal&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;Not Equal&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//            int a = 8, b = 3;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(a&gt;&gt;&gt;b); //1</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(a&gt;&gt;&gt;b | 2); //3</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h1 id=\"基础题目\"><a href=\"#基础题目\" class=\"headerlink\" title=\"基础题目:\"></a>基础题目:</h1><h2 id=\"第一题\"><a href=\"#第一题\" class=\"headerlink\" title=\"第一题\"></a>第一题</h2><ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img%5C1.jpg\"></p>\n<ul>\n<li>编写步骤：</li>\n</ul>\n<ol>\n<li><p>定义类 Test1</p>\n</li>\n<li><p>定义 main方法</p>\n</li>\n<li><p>定义两个byte类型变量b1,b2,并分别赋值为10和20.</p>\n</li>\n<li><p>定义变量b3,保存b1和b2的和,并输出.</p>\n</li>\n<li><p>定义两个short类型变量s1,s2,并分别赋值为1000和2000.</p>\n</li>\n<li><p>定义变量s3,保存s1和s2的和,并输出.</p>\n</li>\n<li><p>定义一个char类型变量ch1赋值为’a’,一个int类型变量i1赋值为30.</p>\n</li>\n<li><p>定义变量ch3,保存c1和i1的差,并输出.</p>\n</li>\n</ol>\n<h2 id=\"第二题\"><a href=\"#第二题\" class=\"headerlink\" title=\"第二题\"></a>第二题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C2.jpg\"></p>\n</li>\n</ul>\n<ul>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类 Test2</li>\n<li>定义 main方法</li>\n<li>定义 int类型变量i1 和 long类型变量l1</li>\n<li>定义变量add,保存i1和l1的和,并输出.</li>\n<li>定义 long类型变量l2 和 float类型变量f2</li>\n<li>定义变量add2,保存l2和f2的和,并输出.</li>\n<li>定义 int类型变量i3 和 double类型变量d3</li>\n<li>定义变量add3,保存i3和d3的和,并输出.</li>\n<li>定义 float类型变量f4 和 double类型变量d4</li>\n<li>定义变量add4,保存f4和d4的和,并输出.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第三题\"><a href=\"#第三题\" class=\"headerlink\" title=\"第三题\"></a>第三题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C3.jpg\"></p>\n</li>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类 Test3</li>\n<li>定义 main方法</li>\n<li>定义char类型变量ch,赋值为’J’</li>\n<li>使用强制转换的方式,将变量ch转换为小写’j’,并输出</li>\n<li>定义char类型变量ch2,赋值为’a’</li>\n<li>使用+=的方式,将变量ch2转换为大写’A’,并输出</li>\n<li>定义double类型变量d3,int类型变量i3</li>\n<li>定义double变量sum3,保存d3与i3的和,输出sum3的值和sum3去除小数部分的值</li>\n<li>定义double类型变量d4,int类型变量i4</li>\n<li>定义int变量mul4,保存d4和i4乘积的整数部分,并输出</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第四题\"><a href=\"#第四题\" class=\"headerlink\" title=\"第四题\"></a>第四题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C4.jpg\"></p>\n</li>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类 Test4</li>\n<li>定义 main方法</li>\n<li>定义两个int类型变量a1和a2,分别赋值10,11,判断变量是否为偶数,拼接输出结果</li>\n<li>定义两个int类型变量a3和a4,分别赋值12,13,判断变量是否为奇数,拼接输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第五题\"><a href=\"#第五题\" class=\"headerlink\" title=\"第五题\"></a>第五题</h2><ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img%5C5.jpg\"></p>\n</li>\n</ul>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类 Test5</li>\n<li>定义 main方法</li>\n<li>定义一个int类型变量a,变量b,都赋值为20.</li>\n<li>定义boolean类型变量bo , 判断++a 是否被3整除,并且a++ 是否被7整除,将结果赋值给bo</li>\n<li>输出a的值,bo的值.</li>\n<li>定义boolean类型变量bo2 , 判断b++ 是否被3整除,并且++b 是否被7整除,将结果赋值给bo2</li>\n<li>输出b的值,bo2的值.</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第六题\"><a href=\"#第六题\" class=\"headerlink\" title=\"第六题\"></a>第六题</h2><p>案例：为抵抗洪水，战士连续作战89小时，编程计算共多少天零多少小时？</p>\n<ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img/6.png\" alt=\"1557879127503\"></p>\n</li>\n</ul>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类Test6</li>\n<li>定义main方法</li>\n<li>定义一个int类型变量hours，赋值为89</li>\n<li>定义一个int类型变量day，用来保存89小时中天数的结果</li>\n<li>定义一个int类型变量hour，用来保存89小时中不够一天的剩余小时数的结果</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第七题\"><a href=\"#第七题\" class=\"headerlink\" title=\"第七题\"></a>第七题</h2><p>案例：今天是周2，100天以后是周几？</p>\n<ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img/7.png\" alt=\"1557879464870\"></p>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类Test7</li>\n<li>定义main方法</li>\n<li>定义一个int类型变量week，赋值为2</li>\n<li>修改week的值，在原值基础上加上100</li>\n<li>因为week的值加上100后超过了星期的范围，重写修改week的值</li>\n<li>输出结果，在输出结果的时候考虑特殊值，例如周日</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第八题\"><a href=\"#第八题\" class=\"headerlink\" title=\"第八题\"></a>第八题</h2><p>案例：求三个整数x,y,z中的最大值</p>\n<ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img/8.png\" alt=\"1557879847378\"></p>\n<ul>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类Test8</li>\n<li>定义main方法</li>\n<li>定义三个int类型变量,x,y,z，随意赋值整数值</li>\n<li>定义一个int类型变量max，先存储x与y中的最大值（使用三元运算符）</li>\n<li>再次对max赋值，让它等于上面max与z中的最大值（使用三元运算符）</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第九题\"><a href=\"#第九题\" class=\"headerlink\" title=\"第九题\"></a>第九题</h2><p>案例：给定一个年份，判断是否是闰年</p>\n<p>闰年的判断标准是：</p>\n<p>​       1）可以被4整除，但不可被100整除</p>\n<p>​       2）可以被400整除</p>\n<ul>\n<li>按步骤编写代码，效果如图所示：</li>\n</ul>\n<p><img src=\"img/9.png\" alt=\"1557902649882\"></p>\n<ul>\n<li>编写步骤：<ol>\n<li>定义类Test9</li>\n<li>定义main方法</li>\n<li>定义一个int类型变量year，随意赋值一个年份</li>\n<li>定一个一个boolean类型变量，用来保存这个年份是否是闰年的结果</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"第十题\"><a href=\"#第十题\" class=\"headerlink\" title=\"第十题\"></a>第十题</h2><p>案例：小明要到美国旅游，可是那里的温度是以华氏度为单位记录的。它需要一个程序将华氏温度（80度）转换为摄氏度，并以华氏度和摄氏度为单位分别显示该温度。</p>\n<p><img src=\"img/1557903785834.png\" alt=\"1557903785834\"></p>\n<ul>\n<li><p>按步骤编写代码，效果如图所示：</p>\n<p><img src=\"img/1557903814057.png\" alt=\"1557903814057\"></p>\n</li>\n<li><p>编写步骤：</p>\n<ol>\n<li>定义类Test10</li>\n<li>定义main方法</li>\n<li>定义一个double类型变量hua，存储华氏温度80</li>\n<li>定义一个double类型变量she，存储摄氏温度，根据公式求值</li>\n<li>输出结果</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"阅读代码题：\"><a href=\"#阅读代码题：\" class=\"headerlink\" title=\"阅读代码题：\"></a>阅读代码题：</h1><h2 id=\"第一题-1\"><a href=\"#第一题-1\" class=\"headerlink\" title=\"第一题\"></a>第一题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如下代码的计算结果是：</span><br><span class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;</span><br><span class=\"line\">i *= <span class=\"number\">0.2</span>;  </span><br><span class=\"line\">i++;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;i=&quot;</span> + i);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第二题-1\"><a href=\"#第二题-1\" class=\"headerlink\" title=\"第二题\"></a>第二题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如下代码的运算结果是：</span><br><span class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">2</span>;</span><br><span class=\"line\">i *= i++;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> j = <span class=\"number\">2</span>;</span><br><span class=\"line\">j *= j+<span class=\"number\">1</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> k = <span class=\"number\">2</span>;</span><br><span class=\"line\">k *= ++k;</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;i=&quot;</span> + i);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;j=&quot;</span> + j);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;k=&quot;</span> + k);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三题-1\"><a href=\"#第三题-1\" class=\"headerlink\" title=\"第三题\"></a>第三题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a = b)&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;Equal&quot;</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;Not Equal&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"第四题-1\"><a href=\"#第四题-1\" class=\"headerlink\" title=\"第四题\"></a>第四题</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">8</span>, b = <span class=\"number\">3</span>;</span><br><span class=\"line\">\tSystem.out.println(a&gt;&gt;&gt;b);</span><br><span class=\"line\">\tSystem.out.println(a&gt;&gt;&gt;b | <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test1</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第一题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        Byte b1 =10;</span></span><br><span class=\"line\"><span class=\"comment\">//        Byte b2 = 20;</span></span><br><span class=\"line\"><span class=\"comment\">//        int b3 = b1 + b2;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;b3 = &quot; + b3);</span></span><br><span class=\"line\"><span class=\"comment\">//        short s1 = 1000;</span></span><br><span class=\"line\"><span class=\"comment\">//        short s2 = 2000;</span></span><br><span class=\"line\"><span class=\"comment\">//        int s3 = s1+s2;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;s3 = &quot; + s3);</span></span><br><span class=\"line\"><span class=\"comment\">//        char ch1=&#x27;a&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//        int i1=30;</span></span><br><span class=\"line\"><span class=\"comment\">//        int ch3 = ch1-i1;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;ch3 = &quot; + ch3);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第二题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int i1 =0;</span></span><br><span class=\"line\"><span class=\"comment\">//        long l1 = 0;</span></span><br><span class=\"line\"><span class=\"comment\">//        long add = i1 + l1;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add = &quot; + add);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        long l2 = 1;</span></span><br><span class=\"line\"><span class=\"comment\">//        float f2 = 2.0f;</span></span><br><span class=\"line\"><span class=\"comment\">//        float add2 = l2 + f2;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add2 = &quot; + add2);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        int i3 = 3;</span></span><br><span class=\"line\"><span class=\"comment\">//        double d3 = 5.1345;</span></span><br><span class=\"line\"><span class=\"comment\">//        double add3 = i3 + d3;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add3 = &quot; + add3);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        float f4 = 3.14f;</span></span><br><span class=\"line\"><span class=\"comment\">//        double d4 = 3.1415926;</span></span><br><span class=\"line\"><span class=\"comment\">//        double add4 = f4 + d4;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;add4 = &quot; + add4);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第三题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        char ch = &#x27;J&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//          ch = (char) (ch + 32);</span></span><br><span class=\"line\"><span class=\"comment\">////        char ch1 = (char)(ch +32);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;ch = &quot; + ch);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        char ch2 = &#x27;a&#x27;;</span></span><br><span class=\"line\"><span class=\"comment\">//        ch +=32;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;ch2 = &quot; + ch2);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        double d3= 20.1;</span></span><br><span class=\"line\"><span class=\"comment\">//        int i3 = 555;</span></span><br><span class=\"line\"><span class=\"comment\">//        double sum3 = d3 + i3;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;sum3 = &quot; + sum3);</span></span><br><span class=\"line\"><span class=\"comment\">//        int sum4= (int)sum3;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;sum4 = &quot; + sum4);</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//        double d4 = 5.555;</span></span><br><span class=\"line\"><span class=\"comment\">//        int i4 = 4396;</span></span><br><span class=\"line\"><span class=\"comment\">//        int mul4 = (int) (d4 * i4);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;mul4 = &quot; + mul4);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        /**</span></span><br><span class=\"line\"><span class=\"comment\">//         * 第四题</span></span><br><span class=\"line\"><span class=\"comment\">//         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int a1 = 10,a2 = 11;</span></span><br><span class=\"line\"><span class=\"comment\">//        String s1 =  a1%2 == 0 ? &quot;偶数&quot; : &quot;奇数&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;10是否是偶数: 是&quot; + s1);</span></span><br><span class=\"line\"><span class=\"comment\">//        String s2 =  a2%2 == 0 ? &quot;偶数&quot; : &quot;奇数&quot;;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;11是&quot; +s2);</span></span><br><span class=\"line\"><span class=\"comment\">//        int a3 = 12,a4 = 13;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;12是&quot; + (a3 % 2 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;13是&quot; + (a4 % 2 == 0));</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第五题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int a = 20,b = 20;</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo = false;</span></span><br><span class=\"line\"><span class=\"comment\">//        if (++a % 3 == 0 &amp;&amp; a++ % 7 ==0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            bo = true;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;a = &quot; + a);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;bo == &quot; + false);</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(a);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo2 = false;</span></span><br><span class=\"line\"><span class=\"comment\">//        if (b++ % 3 == 0 &amp;&amp; ++b % 7 == 0)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            bo2 = true;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;b = &quot; + b);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(bo2);</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;b = &quot; + b);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo3 = ((++a % 3) == 0 &amp;&amp; (a++ % 7 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bo4 = ((b++ % 3 ) == 0 &amp;&amp; (++b % 7 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;bo3 = &quot; + bo3);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;bo4 = &quot; + bo4);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;a = &quot; + a);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;b = &quot; + b);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第六题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int hours = 89;</span></span><br><span class=\"line\"><span class=\"comment\">//        int day = hours / 24;</span></span><br><span class=\"line\"><span class=\"comment\">//        int hour= hours % 24;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;战士连续作战&quot; + day +&quot;天&quot;+hour+&quot;小时&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第七题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int week = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        week += 100;</span></span><br><span class=\"line\"><span class=\"comment\">//        week = week % 7;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;week = &quot; + week);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第八题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int x=1,y=2,z=3;</span></span><br><span class=\"line\"><span class=\"comment\">//        int max = x&gt;y ? x : y;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;max = &quot; + max);</span></span><br><span class=\"line\"><span class=\"comment\">//        max = max &gt; y ? max : z;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;max = &quot; + max);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第九题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int year = 2000;</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean bl=((year % 4 ==0 &amp;&amp; year % 100 != 0) || (year % 400 == 0));</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;bl = &quot; + bl);</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第十题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        double hua = 80;</span></span><br><span class=\"line\"><span class=\"comment\">//        double she = (hua-32)/1.8;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;she = &quot; + she);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 阅读代码题</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\"><span class=\"comment\">//        int i = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        i *= i++;</span></span><br><span class=\"line\"><span class=\"comment\">//        int j = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        j *= j+1;</span></span><br><span class=\"line\"><span class=\"comment\">//        int k = 2;</span></span><br><span class=\"line\"><span class=\"comment\">//        k *= ++k;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;i=&quot; + i);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;j=&quot; + j);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;k=&quot; + k);</span></span><br><span class=\"line\"><span class=\"comment\">//        4 4 6</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        int i = 1;</span></span><br><span class=\"line\"><span class=\"comment\">//        i *= 0.2;</span></span><br><span class=\"line\"><span class=\"comment\">//        i++;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(&quot;i=&quot; + i);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        int a = 3;</span></span><br><span class=\"line\"><span class=\"comment\">//        int b = 1;</span></span><br><span class=\"line\"><span class=\"comment\">//        if(a = b)&#123;  //编译错误</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;Equal&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(&quot;Not Equal&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//            int a = 8, b = 3;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(a&gt;&gt;&gt;b); //1</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(a&gt;&gt;&gt;b | 2); //3</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-10-01T07:07:44.620Z","updated":"1985-10-26T08:15:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cku8257jb0003q8v7178aeaqx","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"day04【数组】","date":"2021-10-01T07:26:00.895Z","_content":"\n# JavaSE_day04【数组】\n\n## 今日内容\n\n- 数组概念\n- 数组的声明和初始化\n- 数组的索引\n- 数组的长度\n- 数组的遍历\n- 数组内存\n- 数组的相关算法\n\n## 学习目标\n\n- [ ] 理解数组作为容器的概念\n- [ ] 掌握数组的声明和初始化\n- [ ] 使用索引访问数组的元素\n- [ ] 了解数组的内存图解\n- [ ] 避免空指针和越界异常\n- [ ] 掌握数组的遍历\n- [ ] 掌握常见的数组算法\n\n# 第四章 数组\n\n## 4.1 容器概述\n\n### 案例分析\n\n现在需要统计某公司员工的工资情况，例如计算平均工资、找到最高工资等。假设该公司有50名员工，用前面所学的知识，程序首先需要声明50个变量来分别记住每位员工的工资，然后在进行操作，这样做会显得很麻烦，而且错误率也会很高。因此我们可以使用容器进行操作。将所有的数据全部存储到一个容器中，统一操作。\n\n### 容器概念\n\n- **容器：**是将多个数据存储到一起，每个数据称为该容器的元素。\n- **生活中的容器：**水杯，衣柜，教室\n\n## 4.2 数组的概念\n\n- **数组概念：** 数组就是用于存储数据的长度固定的容器，保证多个数据的数据类型要一致。\n\n百度百科中对数组的定义：\n\n所谓**数组**(array)，就是相同数据类型的元素按一定顺序排列的集合，就是把有限个类型相同的变量用一个名字命名，以便统一管理他们，然后用编号区分他们，这个名字称为**数组名**，编号称为**下标或索引**(index)。组成数组的各个变量称为数组的**元素**(element)。数组中元素的个数称为**数组的长度**(length)。\n\n![1561452334825](imgs/1561452334825.png)\n\n数组的特点：\n\n1、数组的长度一旦确定就不能修改\n\n2、创建数组时会在内存中开辟一整块连续的空间。\n\n3、存取元素的速度快，因为可以通过[下标]，直接定位到任意一个元素。\n\n## 4.3 数组的声明与初始化\n\n数组的声明：\n\n```java\n//推荐\n元素的数据类型[] 二维数组的名称;\n\n//不推荐\n元素的数据类型  二维数组名[];\n```\n\n### 方式一：静态初始化\n\n* **格式：**\n\n```java\n数据类型[] 数组名 = {元素1,元素2,元素3...};//必须在一个语句中完成，不能分开两个语句写\n```\n\n* 举例：\n\n定义存储1，2，3，4，5整数的数组容器\n\n```java\nint[] arr = {1,2,3,4,5};//正确\n\nint[] arr;\narr = {1,2,3,4,5};//错误\n```\n\n### 方式二：静态初始化\n\n* **格式：**\n\n```java\n数据类型[] 数组名 = new 数据类型[]{元素1,元素2,元素3...};\n或\n数据类型[] 数组名;\n数组名 = new 数据类型[]{元素1,元素2,元素3...};\n```\n\n* 举例：\n\n定义存储1，2，3，4，5整数的数组容器。\n\n```java\nint[] arr = new int[]{1,2,3,4,5};//正确\n\nint[] arr;\narr = new int[]{1,2,3,4,5};//正确\n\nint[] arr = new int[5]{1,2,3,4,5};//错误的，后面有{}指定元素列表，就不需要在[长度]指定长度。\n```\n\n### 方式三：动态初始化\n\n- **格式：**\n\n```java\n 数组存储的元素的数据类型[] 数组名字 = new 数组存储的元素的数据类型[长度];\n\n  或\n\n 数组存储的数据类型[] 数组名字;\n 数组名字 = new 数组存储的数据类型[长度];\n```\n\n- 数组定义格式详解：\n  - 数组存储的元素的数据类型： 创建的数组容器可以存储什么数据类型的数据。\n  - 元素的类型可以是任意的Java的数据类型。例如：int, String, Student等\n  - [] : 表示数组。\n  - 数组名字：为定义的数组起个变量名，满足标识符规范，可以使用名字操作数组。\n  - new：关键字，创建数组使用的关键字。因为数组本身是引用数据类型，所以要用new创建数组对象。\n  - [长度]：数组的长度，表示数组容器中可以存储多少个元素。\n  - **注意：数组有定长特性，长度一旦指定，不可更改。**\n    - 和水杯道理相同，买了一个2升的水杯，总容量就是2升，不能多也不能少。\n- 举例：\n\n定义可以存储5个整数的数组容器，代码如下：\n\n```java\nint[] arr = new int[5];\n\nint[] arr;\narr = new int[5];\n```\n\n> 思考：用这种方式初始化的数组，元素有值吗？\n\n## 4.4 数组元素的访问\n\n- **索引：** 每一个存储到数组的元素，都会自动的拥有一个编号，从0开始，这个自动编号称为**数组索引(index)**，可以通过数组的索引访问到数组中的元素。\n- **索引范围：**[0, 数组的长度-1]\n- **格式：**\n\n```java\n数组名[索引]\n```\n\n- **索引访问数组中的元素：**\n  - 数组名[索引]=数值，为数组中的元素赋值\n  - 变量=数组名[索引]，获取出数组中的元素\n\n```java\npublic static void main(String[] args) {\n    //定义存储int类型数组，赋值元素1，2，3，4，5\n    int[] arr = {1,2,3,4,5};\n    //为0索引元素赋值为6\n    arr[0] = 6;\n    //获取数组0索引上的元素\n    int i = arr[0];\n    System.out.println(i);\n    //直接输出数组0索引元素\n    System.out.println(arr[0]);\n}\n```\n\n## 4.5 数组的遍历\n\n* **数组的长度属性：** 每个数组都具有长度，而且是固定的，Java中赋予了数组的一个属性，可以获取到数组的长度，语句为：`数组名.length` ，属性length的执行结果是数组的长度，int类型结果。由次可以推断出，数组的最大索引值为`数组名.length-1`。\n* **数组遍历：** 就是将数组中的每个元素分别获取出来，就是遍历。遍历也是数组操作中的基石。\n\n```java\npublic static void main(String[] args) {\n  \tint[] arr = new int[]{1,2,3,4,5};\n  \t//打印数组的属性，输出结果是5\n  \tSystem.out.println(\"数组的长度：\" + arr.length);\n    \n    //遍历输出数组中的元素\n    System.out.println(\"数组的元素有：\");\n    for(int i=0; i<arr.length; i++){\n        System.out.println(arr[i]);\n    }\n}\n```\n\n## 4.6 数组元素的默认值\n\n当我们使用动态初始化创建数组时：\n\n```java\n 数组存储的元素的数据类型[] 数组名字 = new 数组存储的元素的数据类型[长度];\n```\n\n此时只确定了数组的长度，那么数组的元素是什么值呢？\n\n数组的元素有默认值：\n\n![1561509460135](imgs/1561509460135.png)\n\n## 4.7 数组内存图\n\n### 4.7.1 内存概述\n\n内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来。我们编写的程序是存放在硬盘中的，在硬盘中的程序是不会运行的，必须放进内存中才能运行，运行完毕后会清空内存。\n\nJava虚拟机要运行程序，必须要对内存进行空间的分配和管理。\n\n### 4.7.2 Java虚拟机的内存划分\n\n为了提高运算效率，就对空间进行了不同区域的划分，因为每一片区域都有特定的处理数据方式和内存管理方式。\n\n![1561465258546](imgs/1561465258546.png)\n\n| 区域名称   | 作用                                                      |\n| ----------| ---------------------------------------------------------|\n| 程序计数器 | 程序计数器是CPU中的寄存器，它包含每一个线程下一条要执行的指令的地址 |\n| 本地方法栈 | 当程序中调用了native的本地方法时，本地方法执行期间的内存区域 |\n| 方法区     | 存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。 |\n| 堆内存     | 存储对象（包括数组对象），new来创建的，都存储在堆内存。      |\n| 虚拟机栈   | 用于存储正在执行的每个Java方法的局部变量表等。局部变量表存放了编译期可知长度的各种基本数据类型、对象引用，方法执行完，自动释放。 |\n\n### 4.7.3 数组在内存中的存储\n\n#### 1、一个数组内存图\n\n```java\npublic static void main(String[] args) {\n  \tint[] arr = new int[3];\n  \tSystem.out.println(arr);//[I@5f150435\n}\n\n```\n\n![](imgs/数组内存图1.jpg)\n\n> 思考：打印arr为什么是[I@5f150435，它是数组的地址吗？\n>\n> 答：它不是数组的地址。\n>\n> 问？不是说arr中存储的是数组对象的首地址吗？\n>\n> 答：arr中存储的是数组的首地址，但是因为数组是引用数据类型，打印arr时，会自动调用arr数组对象的toString()方法，默认该方法实现的是对象类型名@该对象的hashCode()值的十六进制值。\n>\n> 问？对象的hashCode值是否就是对象内存地址？\n>\n> 答：不一定，因为这个和不同品牌的JVM产品的具体实现有关。例如：Oracle的OpenJDK中给出了5种实现，其中有一种是直接返回对象的内存地址，但是OpenJDK默认没有选择这种方式。\n\n#### 2、数组下标为什么是0开始\n\n因为第一个元素距离数组首地址间隔0个单元。\n\n#### 3、两个数组内存图\n\n```java\npublic static void main(String[] args) {\n    int[] arr = new int[3];\n    int[] arr2 = new int[2];\n    System.out.println(arr);\n    System.out.println(arr2);\n}\n\n```\n\n![](imgs/数组内存图2.jpg)\n\n#### 4、两个变量指向一个数组\n\n```java\npublic static void main(String[] args) {\n    // 定义数组，存储3个元素\n    int[] arr = new int[3];\n    //数组索引进行赋值\n    arr[0] = 5;\n    arr[1] = 6;\n    arr[2] = 7;\n    //输出3个索引上的元素值\n    System.out.println(arr[0]);\n    System.out.println(arr[1]);\n    System.out.println(arr[2]);\n    //定义数组变量arr2，将arr的地址赋值给arr2\n    int[] arr2 = arr;\n    arr2[1] = 9;\n    System.out.println(arr[1]);\n}\n\n```\n\n ![](imgs/数组内存图3.jpg)\n\n## 4.8 数组的练习题\n\n1、练习1：用一个数组存储26个小写英文字母，并遍历显示，显示要求如：a->A\n\n2、练习2：用一个数组存储本组学员的年龄，从键盘输入，并遍历显示\n\n3、练习3：用一个数组存储本组学员的姓名，从键盘输入，并遍历显示\n\n4、练习4：用数组存储一个星期的7个英文单词，然后从键盘输入星期的值[1-7]，输出对应的英文单词\n\n\n\n## 4.9 数组的常见算法\n\n### 4.9.1 数组统计：求总和、均值、统计偶数个数等\n\n思路：遍历数组，挨个的累加，判断每一个元素\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//求总和、均值\nint sum = 0;//因为0加上任何数都不影响结果\nfor(int i=0; i<arr.length; i++){\n    sum += arr[i];\n}\ndouble avg = (double)sum/arr.length;\n```\n\n示例代码2：\n\n```java\nint[] arr = {4,5,6,1,9};\n\n//求总乘积\nlong result = 1;//因为1乘以任何数都不影响结果\nfor(int i=0; i<arr.length; i++){\n    result *= arr[i];\n}\n```\n\n示例代码3：\n\n```java\nint[] arr = {4,5,6,1,9};\n//统计偶数个数\nint even = 0;\nfor(int i=0; i<arr.length; i++){\n    if(arr[i]%2==0){\n        even++;\n    }\n}\n```\n\n### 4.9.2  数组的顺序查找\n\n顺序查找：挨个查看\n\n要求：对数组元素的顺序没要求\n\n顺序查找示例代码：\n\n```java\n//查找value第一次在数组中出现的index\npublic static void main(String[] args){\n    int[] arr = {4,5,6,1,9};\n    int value = 1;\n    int index = -1;\n\n    for(int i=0; i<arr.length; i++){\n        if(arr[i] == value){\n            index = i;\n            break;\n        }\n    }\n\n    if(index==-1){\n        System.out.println(value + \"不存在\");\n    }else{\n        System.out.println(value + \"的下标是\" + index);\n    }\n}\n```\n\n### 4.9.3 数组找最值\n\n![1574577970893](imgs/1574577970893.png)\n\n思路：\n\n（1）先假设第一个元素最大/最小\n\n（2）然后用max/min与后面的元素一一比较\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint max = arr[0];\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n```\n\n### 4.9.4 数组中找最值及其下标\n\n情况一：找最值及其第一次出现的下标\n\n思路：\n\n（1）先假设第一个元素最大/最小\n\n（2）用max/min变量表示最大/小值，用max/min与后面的元素一一比较\n\n（3）用index时刻记录目前比对的最大/小的下标\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint max = arr[0];\nint index = 0;\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > max){\n        max = arr[i];\n        index = i;\n    }\n}\n```\n\n或\n\n思路：\n\n（1）先假设第一个元素最大/最小\n\n（2）用maxIndex时刻记录目前比对的最大/小的下标，那么arr[maxIndex]就是目前的最大值\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint maxIndex = 0;\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > arr[maxIndex]){\n        maxIndex = i;\n    }\n}\nSystem.out.println(\"最大值：\" + arr[maxIndex]);\n```\n\n情况二：找最值及其所有最值的下标（即可能最大值重复）\n\n思路：\n\n（1）先找最大值\n\n①假设第一个元素最大\n\n②用max与后面的元素一一比较\n\n（2）遍历数组，看哪些元素和最大值是一样的\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint max = arr[0];\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n\n//遍历数组，看哪些元素和最大值是一样的\nfor(int i=0; i<arr.length; i++){\n    if(max == arr[i]){\n        System.out.print(i+\"\\t\");\n    }\n}\n```\n\n\n\n### 4.9.5 冒泡排序\n\nJava中的经典算法之冒泡排序（Bubble Sort）\n\n原理：比较两个相邻的元素，将值大的元素交换至右端。\n\n思路：依次比较相邻的两个数，将小数放到前面，大数放到后面。\n\n​\t即第一趟，首先比较第1个和第2个元素，将小数放到前面，大数放到后面。\n\n​\t\t\t然后比较第2个和第3个元素，将小数放到前面，大数放到后面。\n\n​\t\t\t如此继续，直到比较最后两个数，将小数放到前面，大数放到后面。\n\n​\t重复第一趟步骤，直至全部排序完成。\n\n```java\n例如：冒泡：从小到大，从左到右两两比较\n/*\n{6,3,8,2,9,1}\n\t第一轮：\n\t第1次：arr[0]与arr[1]比较，6>3成立，就交换，{3,6,8,2,9,1}\n\t第2次：arr[1]与arr[2]比较，6>8不成立，不交换{3,6,8,2,9,1}\n\t第3次：arr[2]与arr[3]比较，8>2成立，就交换，{3,6,2,8,9,1}\n\t第4次：arr[3]与arr[4]比较，8>9不成立，不交换{3,6,2,8,9,1}\n\t第5次：arr[4]与arr[5]比较，9>1成立，就交换，{3,6,2,8,1,9}\n\t\n\t第一轮结果：{3,6,2,8,1,9}   9已经到达正确位置，下一轮不用在参与\n\n\t第二轮：\n\t第1次：arr[0]与arr[1]比较，3>6不成立，不交换{3,6,2,8,1,9}\n\t第2次：arr[1]与arr[2]比较，6>2成立，就交换，{3,2,6,8,1,9}\n\t第3次：arr[2]与arr[3]比较，6>8不成立，不交换{3,2,6,8,1,9}\n\t第4次：arr[3]与arr[4]比较，8>1成立，就交换，{3,2,6,1,8,9}\n\t\n\t第二轮结果：{3,2,6,1,8,9}   8已经到达正确位置，下一轮不用在参与\n\t\n\t第三轮：\n\t第1次：arr[0]与arr[1]比较，3>2成立，就交换，{2,3,6,1,8,9}\n\t第2次：arr[1]与arr[2]比较，3>6不成立，不交换{2,3,6,1,8,9}\n\t第3次：arr[2]与arr[3]比较，6>1成立，就交换，{2,3,1,6,8,9}\n\t\n\t第三轮结果：{2,3,1,6,8,9}   6已经到达正确位置，下一轮不用在参与\n\t\n\t第四轮：\n\t第1次：arr[0]与arr[1]比较，2>3不成立，不交换{2,3,1,6,8,9} \n\t第2次：arr[1]与arr[2]比较，3>1成立，就交换，{2,1,3,6,8,9} \n\t\n\t第四轮结果：{2,1,3,6,8,9}    3已经到达正确位置，下一轮不用在参与\n\t\n\t第五轮\n\t第1次：arr[0]与arr[1]比较，2>1成立，就交换，{1,2,3,6,8,9}\n\t\n\t第五轮结果：{1,2,3,6,8,9}   2已经到达正确位置，下一轮不用在参与\n\t\n\t剩下1，肯定是最小的了，不用比较了\n\t\n\t6个元素，比较了5轮， n个元素需要n-1轮\n\t每一轮比较很多次\n*/\n```\n\n示例代码：\n\n```java\n\tpublic static void main(String[] args){\n\t\tint[] arr = {6,3,8,2,9,1};  //arr.length = 6\n\t\t\n\t\t//i=1,2,3,4,5  一共5轮\n\t\tfor(int i=1; i<arr.length; i++){//轮数\n\t\t\t/*\n\t\t\ti=1，第1轮，j=0,1,2,3,4   arr[j]与arr[j+1]\n\t\t\ti=2，第2轮，j=0,1,2,3     arr[j]与arr[j+1]\n\t\t\ti=3，第3轮，j=0,1,2       arr[j]与arr[j+1]\n\t\t\ti=4，第4轮，j=0,1         arr[j]与arr[j+1]\n\t\t\ti=5，第5轮，j=0           arr[j]与arr[j+1]\n\t\t\t\n\t\t\tj=0, j<=arr.length-1-i\n\t\t\t*/\n\t\t\tfor(int j=0; j<=arr.length-1-i; j++){\n\t\t\t\tif(arr[j] > arr[j+1]){\n\t\t\t\t\tint temp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t//结果\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n```\n\n示例代码：从大到小，从右到左\n\n```java\nchar[] arr = {'h','e','l','l','o','j','a','v','a'};\nfor(int i=1; i<arr.length; i++){//外循环的次数 = 轮数 = 数组的长度-1\n    /*\n    第1轮，i=1，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[1]与arr[0]\n    第2轮，i=2，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[2]与arr[1]\n    ...\n    第8轮，i=8，从右到左两两比较，arr[8]与arr[7]\n    \t\t   arr[j]与arr[j-1]\n    找两个关键点：（1）j的起始值：8（2）找j的终止值，依次是1,2,3,。。。8，得出j>=i\n    */\n    for(int j=8; j>=i; j--){\n        //从大到小，后面的元素 > 前面的元素，就交换\n        if(arr[j]>arr[j-1]){\n            int temp = arr[j];\n            arr[j] = arr[j-1];\n            arr[j-1] = temp;\n        }\n    }\n}\t\n\t\t\n```\n\n### 4.9.6 练习\n\n1、随机产生10个[0,100)之间整数，统计3的倍数的个数\n\n2、随机产生10个[0,150)之间整数，统计既是3又是5，但不是7的倍数的个数\n\n3、随机产生10个[0,100)之间整数，统计素数的个数\n\n4、已知本组学员有：String[] names = {\"张三\",\"李四\",\"王五\",\"赵六\",\"钱七\"};，从键盘输入一个学生姓名，查看他是否是本组学员\n\n5、声明两个数组，一个存储本组学员姓名，一个存储本组学员成绩，找出最高分同学的姓名\n\n##  4.10 二维数组\n\n* 二维数组：本质上就是元素为一维数组的一个数组。\n\n* 二维数组的标记：\\[\\]\\[\\]\n\n```java\nint[][] arr; //arr是一个二维数组，可以看成元素是int[]一维数组类型的一个数组\n```\n\n二维数组也可以看成一个二维表，行*列组成的二维表，只不过这个二维表，每一行的列数还可能不同。但是每一个单元格中的元素的数据类型是一致的，例如：都是int，都是String等\n\n![1561524724397](imgs/1561524724397.png)\n\n### 4.10.1 二维数组的声明与初始化\n\n语法格式：\n\n```java\n//推荐\n元素的数据类型[][] 二维数组的名称;\n\n//不推荐\n元素的数据类型  二维数组名[][];\n//不推荐\n元素的数据类型[]  二维数组名[];\n```\n\n面试：\n\n```\nint[] x, y[];\n//x是一维数组，y是二维数组\n```\n\n#### 1、静态初始化\n\n```java\n元素的数据类型[][] 二维数组名 = new 元素的数据类型[][]{\n\t\t\t{元素1，元素2，元素3 。。。}, \n\t\t\t{第二行的值列表},\n\t\t\t...\n\t\t\t{第n行的值列表}\n\t\t};\n\n元素的数据类型[][] 二维数组名;\n二维数组名 = new 元素的数据类型[][]{\n\t\t\t{元素1，元素2，元素3 。。。}, \n\t\t\t{第二行的值列表},\n\t\t\t...\n\t\t\t{第n行的值列表}\n\t\t};\n\t\t\n//以下格式要求声明与静态初始化必须一起完成\n元素的数据类型[][] 二维数组的名称 = {\n\t\t\t{元素1，元素2，元素3 。。。}, \n\t\t\t{第二行的值列表},\n\t\t\t...\n\t\t\t{第n行的值列表}\n\t\t};\n```\n\n> **如果是静态初始化，右边new 数据类型\\[\\]\\[\\]中不能写数字，因为行数和列数，由{}的元素个数决定**\n\n举例：\n\n```java\n\tint[][] arr;\n\tarr = new int[][]{{1,2,3},{4,5,6},{7,8,9}};\n\tarr = new int[3][3]{{1,2,3},{4,5,6},{7,8,9}};//错误，静态初始化右边new 数据类型[]中不能写数字\n\n\tint[][] arr = new int[][]{{1,2,3},{4,5,6},{7,8,9}};\n\n\tint[][] arr = {{1,2,3},{4,5,6},{7,8,9}};//声明与初始化必须在一句完成\n```\n\n```java\npublic class Array2Demo1 {\n\tpublic static void main(String[] args) {\n\t\t//定义数组\n\t\tint[][] arr = {{1,2,3},{4,5},{6}};\n\t\t\n\t\tSystem.out.println(arr);\n\t\tSystem.out.println(arr[0]);\n\t\tSystem.out.println(arr[1]);\n\t\tSystem.out.println(arr[2]);\n\t\t\n\t\tSystem.out.println(arr[0][0]); //1\n\t\tSystem.out.println(arr[1][0]); //4\n\t\tSystem.out.println(arr[2][0]); //6\n\t\t\n\t\tSystem.out.println(arr[0][1]); //2\n\t\tSystem.out.println(arr[1][1]); //5\n\t\t//越界\n\t\tSystem.out.println(arr[2][1]); //错误\n\t}\n}\n```\n\n#### 2、动态初始化（规则二维表：每一行的列数是相同的）\n\n```java\n//（1）确定行数和列数\n元素的数据类型[][] 二维数组名 = new 元素的数据类型[m][n];\n\tm:表示这个二维数组有多少个一维数组。或者说一共二维表有几行\n\tn:表示每一个一维数组的元素有多少个。或者说每一行共有一个单元格\n\n//此时创建完数组，行数、列数确定，而且元素也都有默认值\n\n//（2）再为元素赋新值\n二维数组名[行下标][列下标] = 值;\n```\n\n```java\npublic static void main(String[] args) {\n    //定义一个二维数组\n    int[][] arr = new int[3][2];\n    \n    //定义了一个二维数组arr\n    //这个二维数组有3个一维数组的元素\n    //每一个一维数组有2个元素\n    //输出二维数组名称\n    System.out.println(arr); //地址值\t[[I@175078b\n    \n    //输出二维数组的第一个元素一维数组的名称\n    System.out.println(arr[0]); //地址值\t[I@42552c\n    System.out.println(arr[1]); //地址值\t[I@e5bbd6\n    System.out.println(arr[2]); //地址值\t[I@8ee016\n    \n    //输出二维数组的元素\n    System.out.println(arr[0][0]); //0\n    System.out.println(arr[0][1]); //0\n    \n    //...\n}\t \n```\n\n#### 3、动态初始化（不规则：每一行的列数可能不一样）\n\n```java\n//（1）先确定总行数\n元素的数据类型[][] 二维数组名 = new 元素的数据类型[总行数][];\n\n//此时只是确定了总行数，每一行里面现在是null\n\n//（2）再确定每一行的列数，创建每一行的一维数组\n二维数组名[行下标] = new 元素的数据类型[该行的总列数];\n\n//此时已经new完的行的元素就有默认值了，没有new的行还是null\n\n//(3)再为元素赋值\n二维数组名[行下标][列下标] = 值;\n```\n\n```java\n\tpublic static void main(String[] args) {\n\t\t//定义数组\n\t\tint[][] arr = new int[3][];\n        \n        System.out.println(arr);\t//[[I@175078b\n        \n        System.out.println(arr[1][0]);//NullPointerException\n\t\tSystem.out.println(arr[0]); //null\n\t\tSystem.out.println(arr[1]); //null\n\t\tSystem.out.println(arr[2]); //null\n\t\t\n\t\t//动态的为每一个一维数组分配空间\n\t\tarr[0] = new int[2];\n\t\tarr[1] = new int[3];\n\t\tarr[2] = new int[1];\n\t\t\n\t\tSystem.out.println(arr[0]); //[I@42552c\n\t\tSystem.out.println(arr[1]); //[I@e5bbd6\n\t\tSystem.out.println(arr[2]); //[I@8ee016\n\t\t\n\t\tSystem.out.println(arr[0][0]); //0\n\t\tSystem.out.println(arr[0][1]); //0\n\t\t//ArrayIndexOutOfBoundsException\n\t\t//System.out.println(arr[0][2]); //错误\n\t\t\n\t\tarr[1][0] = 100;\n\t\tarr[1][2] = 200;\n\t}\n```\n\n### 4.10.2 二维数组的相关名称及其表示方式\n\n（1）二维数组的长度/行数： \n\n​\t二维数组名.length\n\n（2）二维数组的某一行：\n\n​\t二维数组名[行下标]\n\n​\t行下标的范围：[0, 二维数组名.length-1]\n\n（3）某一行的列数：\n\n​\t二维数组名[行下标].length\n\n​       因为二维数组的每一行是一个一维数组\n\n（4）某一个元素\n\n​\t二维数组名\\[行下标\\]\\[列下标\\]\n\n### 4.10.3  二维数组的遍历\n\n```java\nfor(int i=0; i<二维数组名.length; i++){\n    for(int j=0; j<二维数组名[i].length; j++){\n        System.out.print(二维数组名[i][j]);\n    }\n    System.out.println();\n}\n```\n\n### 4.10.4 数组操作的常见异常\n\n#### 1 数组越界异常\n\n观察一下代码，运行后会出现什么结果。\n\n```java\npublic static void main(String[] args) {\n    int[] arr = {1,2,3};\n    System.out.println(arr[3]);\n}\n\n```\n\n创建数组，赋值3个元素，数组的索引就是0，1，2，没有3索引，因此我们不能访问数组中不存在的索引，程序运行后，将会抛出 `ArrayIndexOutOfBoundsException`  数组越界异常。在开发中，数组的越界异常是**不能出现**的，一旦出现了，就必须要修改我们编写的代码。\n\n![](imgs/数组越界异常.jpg)\n\n#### 2 数组空指针异常\n\n观察一下代码，运行后会出现什么结果。\n\n```java\n\tpublic static void main(String[] args) {\n\t\t//定义数组\n\t\tint[][] arr = new int[3][];\n        \n        System.out.println(arr[0][0]);//NullPointerException\n    }\n```\n\n因为此时数组的每一行还未分配具体存储元素的空间，此时arr\\[0\\]是null，此时访问arr\\[0\\]\\[0\\]会抛出`NullPointerException` 空指针异常。\n\n![](imgs/空指针异常.jpg)\n\n**空指针异常在内存图中的表现**\n\n![1572338767825](imgs/1572338767825.png)\n\n### 4.10.5 二维数组练习\n\n#### 1、练习1\n\n1、请使用二维数组存储如下数据，并遍历显示\n\n 1\n\n 2 2\n\n 3 3 3\n\n 4 4 4 4\n\n 5 5 5 5 5\n\n```java\n\tpublic static void main(String[] args){\n\t\t//1、声明一个二维数组，并且确定行数\n\t\t//因为每一行的列数不同，这里无法直接确定列数\n\t\tint[][]  arr = new int[5][];\n\t\t\n\t\t//2、确定每一行的列数\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\t/*\n\t\t\tarr[0] 的列数是1\n\t\t\tarr[1] 的列数是2\n\t\t\tarr[2] 的列数是3\n\t\t\tarr[3] 的列数是4\n\t\t\tarr[4] 的列数是5\n\t\t\t*/\n\t\t\tarr[i] = new int[i+1];\n\t\t}\n\t\t\n\t\t//3、确定元素的值\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tarr[i][j] = i+1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//4、遍历显示\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n```\n\n```java\n\tpublic static void main(String[] args){\n\t\t//1、声明一个二维数组，并且初始化\n        int[][] arr = {\n            {1},\n            {2,2},\n            {3,3,3},\n            {4,4,4,4},\n            {5,5,5,5,5}\n        };\n\t\t\n\t\t\n\t\t//2、遍历显示\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n```\n\n```java\n\tpublic static void main(String[] args){\n\t\t//1、声明一个二维数组，并且确定行数\n\t\t//因为每一行的列数不同，这里无法直接确定列数\n\t\tint[][]  arr = new int[5][];\n\t\t\n\t\t\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\t//2、确定每一行的列数\n\t\t\tarr[i] = new int[i+1];\n\t\t\t\n\t\t\t//3、确定元素的值\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tarr[i][j] = i+1;\n\t\t\t\t\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\n\t\t\tSystem.out.println();\n\t\t}\n\n\t}\n```\n\n#### 2、练习2\n\n2、请使用二维数组存储如下数据，并遍历显示\n\n 1 1 1 1 1\n\n 2 2 2 2 2\n\n 3 3 3 3 3\n\n 4 4 4 4 4\n\n```java\npublic static void main(String[] args){\n\t\tint[][] arr = {\n\t\t\t{1,1,1,1,1},\n\t\t\t{2,2,2,2,2},\n\t\t\t{3,3,3,3,3},\n\t\t\t{4,4,4,4,4}\n\t\t};\n\t\t\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n```\n\n```java\n\tpublic static void main(String[] args) {\n\t\t//1、声明二维数组，并确定行数和列数\n\t\tint[][] arr = new int[4][5];\n\t\t\n\t\t//2、确定元素的值\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tfor (int j = 0; j < arr.length; j++) {\n\t\t\t\tarr[i][j] = i + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//3、遍历显示\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n```\n\n#### 3、练习3\n\n3、请使用二维数组存储如下数据，并遍历显示\n\n```java\n\t\tString[][] employees = {\n\t\t        {\"10\", \"1\", \"段誉\", \"22\", \"3000\"},\n\t\t        {\"13\", \"2\", \"令狐冲\", \"32\", \"18000\", \"15000\", \"2000\"},\n\t\t        {\"11\", \"3\", \"任我行\", \"23\", \"7000\"},\n\t\t        {\"11\", \"4\", \"张三丰\", \"24\", \"7300\"},\n\t\t        {\"12\", \"5\", \"周芷若\", \"28\", \"10000\", \"5000\"},\n\t\t        {\"11\", \"6\", \"赵敏\", \"22\", \"6800\"},\n\t\t        {\"12\", \"7\", \"张无忌\", \"29\", \"10800\",\"5200\"},\n\t\t        {\"13\", \"8\", \"韦小宝\", \"30\", \"19800\", \"15000\", \"2500\"},\n\t\t        {\"12\", \"9\", \"杨过\", \"26\", \"9800\", \"5500\"},\n\t\t        {\"11\", \"10\", \"小龙女\", \"21\", \"6600\"},\n\t\t        {\"11\", \"11\", \"郭靖\", \"25\", \"7100\"},\n\t\t        {\"12\", \"12\", \"黄蓉\", \"27\", \"9600\", \"4800\"}\n\t\t    };\n```\n\n其中\"10\"代表普通职员，\"11\"代表程序员，\"12\"代表设计师，\"13\"代表架构师\n\n![1561529559251](imgs/1561529559251.png)\n\n```java\n\tpublic static void main(String[] args) {\n\t\tString[][] employees = {\n\t\t        {\"10\", \"1\", \"段誉\", \"22\", \"3000\"},\n\t\t        {\"13\", \"2\", \"令狐冲\", \"32\", \"18000\", \"15000\", \"2000\"},\n\t\t        {\"11\", \"3\", \"任我行\", \"23\", \"7000\"},\n\t\t        {\"11\", \"4\", \"张三丰\", \"24\", \"7300\"},\n\t\t        {\"12\", \"5\", \"周芷若\", \"28\", \"10000\", \"5000\"},\n\t\t        {\"11\", \"6\", \"赵敏\", \"22\", \"6800\"},\n\t\t        {\"12\", \"7\", \"张无忌\", \"29\", \"10800\",\"5200\"},\n\t\t        {\"13\", \"8\", \"韦小宝\", \"30\", \"19800\", \"15000\", \"2500\"},\n\t\t        {\"12\", \"9\", \"杨过\", \"26\", \"9800\", \"5500\"},\n\t\t        {\"11\", \"10\", \"小龙女\", \"21\", \"6600\"},\n\t\t        {\"11\", \"11\", \"郭靖\", \"25\", \"7100\"},\n\t\t        {\"12\", \"12\", \"黄蓉\", \"27\", \"9600\", \"4800\"}\n\t\t    };\n\t\tSystem.out.println(\"员工类型\\t编号\\t姓名\\t年龄\\t薪资\\t奖金\\t股票\\t\");\n\t\tfor (int i = 0; i < employees.length; i++) {\n\t\t\tswitch(employees[i][0]){\n\t\t\tcase \"10\":\n\t\t\t\tSystem.out.print(\"普通职员\");\n\t\t\t\tbreak;\n\t\t\tcase \"11\":\n\t\t\t\tSystem.out.print(\"程序员\");\n\t\t\t\tbreak;\n\t\t\tcase \"12\":\n\t\t\t\tSystem.out.print(\"设计师\");\n\t\t\t\tbreak;\n\t\t\tcase \"13\":\n\t\t\t\tSystem.out.print(\"架构师\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (int j = 1; j < employees[i].length; j++) {\n\t\t\t\tSystem.out.print(\"\\t\" + employees[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n```\n\n### 4.10.6 二维数组的内存图分析\n\n#### 1、示例一\n\n```java\n        int[][] arr = {\n            {1},\n            {2,2},\n            {3,3,3},\n            {4,4,4,4},\n            {5,5,5,5,5}\n        };\n```\n\n![1562112672215](imgs/1562112672215.png)\n\n#### 2、示例二\n\n```java\n\t\t//1、声明二维数组，并确定行数和列数\n\t\tint[][] arr = new int[4][5];\n\t\t\n\t\t//2、确定元素的值\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tfor (int j = 0; j < arr.length; j++) {\n\t\t\t\tarr[i][j] = i + 1;\n\t\t\t}\n\t\t}\n```\n\n![1562113179785](imgs/1562113179785.png)\n\n#### 3、示例三\n\n```java\n\t\t//1、声明一个二维数组，并且确定行数\n\t\t//因为每一行的列数不同，这里无法直接确定列数\n\t\tint[][]  arr = new int[5][];\n\t\t\n\t\t//2、确定每一行的列数\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\t/*\n\t\t\tarr[0] 的列数是1\n\t\t\tarr[1] 的列数是2\n\t\t\tarr[2] 的列数是3\n\t\t\tarr[3] 的列数是4\n\t\t\tarr[4] 的列数是5\n\t\t\t*/\n\t\t\tarr[i] = new int[i+1];\n\t\t}\n\t\t\n\t\t//3、确定元素的值\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tarr[i][j] = i+1;\n\t\t\t}\n\t\t}\n```\n\n![1562113981079](imgs/1562113981079.png)\n\n","source":"_posts/JavaSE_day04【数组】.md","raw":"---\ntitle: day04【数组】\ndate: 2021年10月1日 15:25:46\ntags:\n  - Java\n  - 文档\ncategories: Java\n---\n\n# JavaSE_day04【数组】\n\n## 今日内容\n\n- 数组概念\n- 数组的声明和初始化\n- 数组的索引\n- 数组的长度\n- 数组的遍历\n- 数组内存\n- 数组的相关算法\n\n## 学习目标\n\n- [ ] 理解数组作为容器的概念\n- [ ] 掌握数组的声明和初始化\n- [ ] 使用索引访问数组的元素\n- [ ] 了解数组的内存图解\n- [ ] 避免空指针和越界异常\n- [ ] 掌握数组的遍历\n- [ ] 掌握常见的数组算法\n\n# 第四章 数组\n\n## 4.1 容器概述\n\n### 案例分析\n\n现在需要统计某公司员工的工资情况，例如计算平均工资、找到最高工资等。假设该公司有50名员工，用前面所学的知识，程序首先需要声明50个变量来分别记住每位员工的工资，然后在进行操作，这样做会显得很麻烦，而且错误率也会很高。因此我们可以使用容器进行操作。将所有的数据全部存储到一个容器中，统一操作。\n\n### 容器概念\n\n- **容器：**是将多个数据存储到一起，每个数据称为该容器的元素。\n- **生活中的容器：**水杯，衣柜，教室\n\n## 4.2 数组的概念\n\n- **数组概念：** 数组就是用于存储数据的长度固定的容器，保证多个数据的数据类型要一致。\n\n百度百科中对数组的定义：\n\n所谓**数组**(array)，就是相同数据类型的元素按一定顺序排列的集合，就是把有限个类型相同的变量用一个名字命名，以便统一管理他们，然后用编号区分他们，这个名字称为**数组名**，编号称为**下标或索引**(index)。组成数组的各个变量称为数组的**元素**(element)。数组中元素的个数称为**数组的长度**(length)。\n\n![1561452334825](imgs/1561452334825.png)\n\n数组的特点：\n\n1、数组的长度一旦确定就不能修改\n\n2、创建数组时会在内存中开辟一整块连续的空间。\n\n3、存取元素的速度快，因为可以通过[下标]，直接定位到任意一个元素。\n\n## 4.3 数组的声明与初始化\n\n数组的声明：\n\n```java\n//推荐\n元素的数据类型[] 二维数组的名称;\n\n//不推荐\n元素的数据类型  二维数组名[];\n```\n\n### 方式一：静态初始化\n\n* **格式：**\n\n```java\n数据类型[] 数组名 = {元素1,元素2,元素3...};//必须在一个语句中完成，不能分开两个语句写\n```\n\n* 举例：\n\n定义存储1，2，3，4，5整数的数组容器\n\n```java\nint[] arr = {1,2,3,4,5};//正确\n\nint[] arr;\narr = {1,2,3,4,5};//错误\n```\n\n### 方式二：静态初始化\n\n* **格式：**\n\n```java\n数据类型[] 数组名 = new 数据类型[]{元素1,元素2,元素3...};\n或\n数据类型[] 数组名;\n数组名 = new 数据类型[]{元素1,元素2,元素3...};\n```\n\n* 举例：\n\n定义存储1，2，3，4，5整数的数组容器。\n\n```java\nint[] arr = new int[]{1,2,3,4,5};//正确\n\nint[] arr;\narr = new int[]{1,2,3,4,5};//正确\n\nint[] arr = new int[5]{1,2,3,4,5};//错误的，后面有{}指定元素列表，就不需要在[长度]指定长度。\n```\n\n### 方式三：动态初始化\n\n- **格式：**\n\n```java\n 数组存储的元素的数据类型[] 数组名字 = new 数组存储的元素的数据类型[长度];\n\n  或\n\n 数组存储的数据类型[] 数组名字;\n 数组名字 = new 数组存储的数据类型[长度];\n```\n\n- 数组定义格式详解：\n  - 数组存储的元素的数据类型： 创建的数组容器可以存储什么数据类型的数据。\n  - 元素的类型可以是任意的Java的数据类型。例如：int, String, Student等\n  - [] : 表示数组。\n  - 数组名字：为定义的数组起个变量名，满足标识符规范，可以使用名字操作数组。\n  - new：关键字，创建数组使用的关键字。因为数组本身是引用数据类型，所以要用new创建数组对象。\n  - [长度]：数组的长度，表示数组容器中可以存储多少个元素。\n  - **注意：数组有定长特性，长度一旦指定，不可更改。**\n    - 和水杯道理相同，买了一个2升的水杯，总容量就是2升，不能多也不能少。\n- 举例：\n\n定义可以存储5个整数的数组容器，代码如下：\n\n```java\nint[] arr = new int[5];\n\nint[] arr;\narr = new int[5];\n```\n\n> 思考：用这种方式初始化的数组，元素有值吗？\n\n## 4.4 数组元素的访问\n\n- **索引：** 每一个存储到数组的元素，都会自动的拥有一个编号，从0开始，这个自动编号称为**数组索引(index)**，可以通过数组的索引访问到数组中的元素。\n- **索引范围：**[0, 数组的长度-1]\n- **格式：**\n\n```java\n数组名[索引]\n```\n\n- **索引访问数组中的元素：**\n  - 数组名[索引]=数值，为数组中的元素赋值\n  - 变量=数组名[索引]，获取出数组中的元素\n\n```java\npublic static void main(String[] args) {\n    //定义存储int类型数组，赋值元素1，2，3，4，5\n    int[] arr = {1,2,3,4,5};\n    //为0索引元素赋值为6\n    arr[0] = 6;\n    //获取数组0索引上的元素\n    int i = arr[0];\n    System.out.println(i);\n    //直接输出数组0索引元素\n    System.out.println(arr[0]);\n}\n```\n\n## 4.5 数组的遍历\n\n* **数组的长度属性：** 每个数组都具有长度，而且是固定的，Java中赋予了数组的一个属性，可以获取到数组的长度，语句为：`数组名.length` ，属性length的执行结果是数组的长度，int类型结果。由次可以推断出，数组的最大索引值为`数组名.length-1`。\n* **数组遍历：** 就是将数组中的每个元素分别获取出来，就是遍历。遍历也是数组操作中的基石。\n\n```java\npublic static void main(String[] args) {\n  \tint[] arr = new int[]{1,2,3,4,5};\n  \t//打印数组的属性，输出结果是5\n  \tSystem.out.println(\"数组的长度：\" + arr.length);\n    \n    //遍历输出数组中的元素\n    System.out.println(\"数组的元素有：\");\n    for(int i=0; i<arr.length; i++){\n        System.out.println(arr[i]);\n    }\n}\n```\n\n## 4.6 数组元素的默认值\n\n当我们使用动态初始化创建数组时：\n\n```java\n 数组存储的元素的数据类型[] 数组名字 = new 数组存储的元素的数据类型[长度];\n```\n\n此时只确定了数组的长度，那么数组的元素是什么值呢？\n\n数组的元素有默认值：\n\n![1561509460135](imgs/1561509460135.png)\n\n## 4.7 数组内存图\n\n### 4.7.1 内存概述\n\n内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来。我们编写的程序是存放在硬盘中的，在硬盘中的程序是不会运行的，必须放进内存中才能运行，运行完毕后会清空内存。\n\nJava虚拟机要运行程序，必须要对内存进行空间的分配和管理。\n\n### 4.7.2 Java虚拟机的内存划分\n\n为了提高运算效率，就对空间进行了不同区域的划分，因为每一片区域都有特定的处理数据方式和内存管理方式。\n\n![1561465258546](imgs/1561465258546.png)\n\n| 区域名称   | 作用                                                      |\n| ----------| ---------------------------------------------------------|\n| 程序计数器 | 程序计数器是CPU中的寄存器，它包含每一个线程下一条要执行的指令的地址 |\n| 本地方法栈 | 当程序中调用了native的本地方法时，本地方法执行期间的内存区域 |\n| 方法区     | 存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。 |\n| 堆内存     | 存储对象（包括数组对象），new来创建的，都存储在堆内存。      |\n| 虚拟机栈   | 用于存储正在执行的每个Java方法的局部变量表等。局部变量表存放了编译期可知长度的各种基本数据类型、对象引用，方法执行完，自动释放。 |\n\n### 4.7.3 数组在内存中的存储\n\n#### 1、一个数组内存图\n\n```java\npublic static void main(String[] args) {\n  \tint[] arr = new int[3];\n  \tSystem.out.println(arr);//[I@5f150435\n}\n\n```\n\n![](imgs/数组内存图1.jpg)\n\n> 思考：打印arr为什么是[I@5f150435，它是数组的地址吗？\n>\n> 答：它不是数组的地址。\n>\n> 问？不是说arr中存储的是数组对象的首地址吗？\n>\n> 答：arr中存储的是数组的首地址，但是因为数组是引用数据类型，打印arr时，会自动调用arr数组对象的toString()方法，默认该方法实现的是对象类型名@该对象的hashCode()值的十六进制值。\n>\n> 问？对象的hashCode值是否就是对象内存地址？\n>\n> 答：不一定，因为这个和不同品牌的JVM产品的具体实现有关。例如：Oracle的OpenJDK中给出了5种实现，其中有一种是直接返回对象的内存地址，但是OpenJDK默认没有选择这种方式。\n\n#### 2、数组下标为什么是0开始\n\n因为第一个元素距离数组首地址间隔0个单元。\n\n#### 3、两个数组内存图\n\n```java\npublic static void main(String[] args) {\n    int[] arr = new int[3];\n    int[] arr2 = new int[2];\n    System.out.println(arr);\n    System.out.println(arr2);\n}\n\n```\n\n![](imgs/数组内存图2.jpg)\n\n#### 4、两个变量指向一个数组\n\n```java\npublic static void main(String[] args) {\n    // 定义数组，存储3个元素\n    int[] arr = new int[3];\n    //数组索引进行赋值\n    arr[0] = 5;\n    arr[1] = 6;\n    arr[2] = 7;\n    //输出3个索引上的元素值\n    System.out.println(arr[0]);\n    System.out.println(arr[1]);\n    System.out.println(arr[2]);\n    //定义数组变量arr2，将arr的地址赋值给arr2\n    int[] arr2 = arr;\n    arr2[1] = 9;\n    System.out.println(arr[1]);\n}\n\n```\n\n ![](imgs/数组内存图3.jpg)\n\n## 4.8 数组的练习题\n\n1、练习1：用一个数组存储26个小写英文字母，并遍历显示，显示要求如：a->A\n\n2、练习2：用一个数组存储本组学员的年龄，从键盘输入，并遍历显示\n\n3、练习3：用一个数组存储本组学员的姓名，从键盘输入，并遍历显示\n\n4、练习4：用数组存储一个星期的7个英文单词，然后从键盘输入星期的值[1-7]，输出对应的英文单词\n\n\n\n## 4.9 数组的常见算法\n\n### 4.9.1 数组统计：求总和、均值、统计偶数个数等\n\n思路：遍历数组，挨个的累加，判断每一个元素\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//求总和、均值\nint sum = 0;//因为0加上任何数都不影响结果\nfor(int i=0; i<arr.length; i++){\n    sum += arr[i];\n}\ndouble avg = (double)sum/arr.length;\n```\n\n示例代码2：\n\n```java\nint[] arr = {4,5,6,1,9};\n\n//求总乘积\nlong result = 1;//因为1乘以任何数都不影响结果\nfor(int i=0; i<arr.length; i++){\n    result *= arr[i];\n}\n```\n\n示例代码3：\n\n```java\nint[] arr = {4,5,6,1,9};\n//统计偶数个数\nint even = 0;\nfor(int i=0; i<arr.length; i++){\n    if(arr[i]%2==0){\n        even++;\n    }\n}\n```\n\n### 4.9.2  数组的顺序查找\n\n顺序查找：挨个查看\n\n要求：对数组元素的顺序没要求\n\n顺序查找示例代码：\n\n```java\n//查找value第一次在数组中出现的index\npublic static void main(String[] args){\n    int[] arr = {4,5,6,1,9};\n    int value = 1;\n    int index = -1;\n\n    for(int i=0; i<arr.length; i++){\n        if(arr[i] == value){\n            index = i;\n            break;\n        }\n    }\n\n    if(index==-1){\n        System.out.println(value + \"不存在\");\n    }else{\n        System.out.println(value + \"的下标是\" + index);\n    }\n}\n```\n\n### 4.9.3 数组找最值\n\n![1574577970893](imgs/1574577970893.png)\n\n思路：\n\n（1）先假设第一个元素最大/最小\n\n（2）然后用max/min与后面的元素一一比较\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint max = arr[0];\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n```\n\n### 4.9.4 数组中找最值及其下标\n\n情况一：找最值及其第一次出现的下标\n\n思路：\n\n（1）先假设第一个元素最大/最小\n\n（2）用max/min变量表示最大/小值，用max/min与后面的元素一一比较\n\n（3）用index时刻记录目前比对的最大/小的下标\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint max = arr[0];\nint index = 0;\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > max){\n        max = arr[i];\n        index = i;\n    }\n}\n```\n\n或\n\n思路：\n\n（1）先假设第一个元素最大/最小\n\n（2）用maxIndex时刻记录目前比对的最大/小的下标，那么arr[maxIndex]就是目前的最大值\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint maxIndex = 0;\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > arr[maxIndex]){\n        maxIndex = i;\n    }\n}\nSystem.out.println(\"最大值：\" + arr[maxIndex]);\n```\n\n情况二：找最值及其所有最值的下标（即可能最大值重复）\n\n思路：\n\n（1）先找最大值\n\n①假设第一个元素最大\n\n②用max与后面的元素一一比较\n\n（2）遍历数组，看哪些元素和最大值是一样的\n\n示例代码：\n\n```java\nint[] arr = {4,5,6,1,9};\n//找最大值\nint max = arr[0];\nfor(int i=1; i<arr.length; i++){\n    if(arr[i] > max){\n        max = arr[i];\n    }\n}\n\n//遍历数组，看哪些元素和最大值是一样的\nfor(int i=0; i<arr.length; i++){\n    if(max == arr[i]){\n        System.out.print(i+\"\\t\");\n    }\n}\n```\n\n\n\n### 4.9.5 冒泡排序\n\nJava中的经典算法之冒泡排序（Bubble Sort）\n\n原理：比较两个相邻的元素，将值大的元素交换至右端。\n\n思路：依次比较相邻的两个数，将小数放到前面，大数放到后面。\n\n​\t即第一趟，首先比较第1个和第2个元素，将小数放到前面，大数放到后面。\n\n​\t\t\t然后比较第2个和第3个元素，将小数放到前面，大数放到后面。\n\n​\t\t\t如此继续，直到比较最后两个数，将小数放到前面，大数放到后面。\n\n​\t重复第一趟步骤，直至全部排序完成。\n\n```java\n例如：冒泡：从小到大，从左到右两两比较\n/*\n{6,3,8,2,9,1}\n\t第一轮：\n\t第1次：arr[0]与arr[1]比较，6>3成立，就交换，{3,6,8,2,9,1}\n\t第2次：arr[1]与arr[2]比较，6>8不成立，不交换{3,6,8,2,9,1}\n\t第3次：arr[2]与arr[3]比较，8>2成立，就交换，{3,6,2,8,9,1}\n\t第4次：arr[3]与arr[4]比较，8>9不成立，不交换{3,6,2,8,9,1}\n\t第5次：arr[4]与arr[5]比较，9>1成立，就交换，{3,6,2,8,1,9}\n\t\n\t第一轮结果：{3,6,2,8,1,9}   9已经到达正确位置，下一轮不用在参与\n\n\t第二轮：\n\t第1次：arr[0]与arr[1]比较，3>6不成立，不交换{3,6,2,8,1,9}\n\t第2次：arr[1]与arr[2]比较，6>2成立，就交换，{3,2,6,8,1,9}\n\t第3次：arr[2]与arr[3]比较，6>8不成立，不交换{3,2,6,8,1,9}\n\t第4次：arr[3]与arr[4]比较，8>1成立，就交换，{3,2,6,1,8,9}\n\t\n\t第二轮结果：{3,2,6,1,8,9}   8已经到达正确位置，下一轮不用在参与\n\t\n\t第三轮：\n\t第1次：arr[0]与arr[1]比较，3>2成立，就交换，{2,3,6,1,8,9}\n\t第2次：arr[1]与arr[2]比较，3>6不成立，不交换{2,3,6,1,8,9}\n\t第3次：arr[2]与arr[3]比较，6>1成立，就交换，{2,3,1,6,8,9}\n\t\n\t第三轮结果：{2,3,1,6,8,9}   6已经到达正确位置，下一轮不用在参与\n\t\n\t第四轮：\n\t第1次：arr[0]与arr[1]比较，2>3不成立，不交换{2,3,1,6,8,9} \n\t第2次：arr[1]与arr[2]比较，3>1成立，就交换，{2,1,3,6,8,9} \n\t\n\t第四轮结果：{2,1,3,6,8,9}    3已经到达正确位置，下一轮不用在参与\n\t\n\t第五轮\n\t第1次：arr[0]与arr[1]比较，2>1成立，就交换，{1,2,3,6,8,9}\n\t\n\t第五轮结果：{1,2,3,6,8,9}   2已经到达正确位置，下一轮不用在参与\n\t\n\t剩下1，肯定是最小的了，不用比较了\n\t\n\t6个元素，比较了5轮， n个元素需要n-1轮\n\t每一轮比较很多次\n*/\n```\n\n示例代码：\n\n```java\n\tpublic static void main(String[] args){\n\t\tint[] arr = {6,3,8,2,9,1};  //arr.length = 6\n\t\t\n\t\t//i=1,2,3,4,5  一共5轮\n\t\tfor(int i=1; i<arr.length; i++){//轮数\n\t\t\t/*\n\t\t\ti=1，第1轮，j=0,1,2,3,4   arr[j]与arr[j+1]\n\t\t\ti=2，第2轮，j=0,1,2,3     arr[j]与arr[j+1]\n\t\t\ti=3，第3轮，j=0,1,2       arr[j]与arr[j+1]\n\t\t\ti=4，第4轮，j=0,1         arr[j]与arr[j+1]\n\t\t\ti=5，第5轮，j=0           arr[j]与arr[j+1]\n\t\t\t\n\t\t\tj=0, j<=arr.length-1-i\n\t\t\t*/\n\t\t\tfor(int j=0; j<=arr.length-1-i; j++){\n\t\t\t\tif(arr[j] > arr[j+1]){\n\t\t\t\t\tint temp = arr[j];\n\t\t\t\t\tarr[j] = arr[j+1];\n\t\t\t\t\tarr[j+1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t//结果\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t}\n```\n\n示例代码：从大到小，从右到左\n\n```java\nchar[] arr = {'h','e','l','l','o','j','a','v','a'};\nfor(int i=1; i<arr.length; i++){//外循环的次数 = 轮数 = 数组的长度-1\n    /*\n    第1轮，i=1，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[1]与arr[0]\n    第2轮，i=2，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[2]与arr[1]\n    ...\n    第8轮，i=8，从右到左两两比较，arr[8]与arr[7]\n    \t\t   arr[j]与arr[j-1]\n    找两个关键点：（1）j的起始值：8（2）找j的终止值，依次是1,2,3,。。。8，得出j>=i\n    */\n    for(int j=8; j>=i; j--){\n        //从大到小，后面的元素 > 前面的元素，就交换\n        if(arr[j]>arr[j-1]){\n            int temp = arr[j];\n            arr[j] = arr[j-1];\n            arr[j-1] = temp;\n        }\n    }\n}\t\n\t\t\n```\n\n### 4.9.6 练习\n\n1、随机产生10个[0,100)之间整数，统计3的倍数的个数\n\n2、随机产生10个[0,150)之间整数，统计既是3又是5，但不是7的倍数的个数\n\n3、随机产生10个[0,100)之间整数，统计素数的个数\n\n4、已知本组学员有：String[] names = {\"张三\",\"李四\",\"王五\",\"赵六\",\"钱七\"};，从键盘输入一个学生姓名，查看他是否是本组学员\n\n5、声明两个数组，一个存储本组学员姓名，一个存储本组学员成绩，找出最高分同学的姓名\n\n##  4.10 二维数组\n\n* 二维数组：本质上就是元素为一维数组的一个数组。\n\n* 二维数组的标记：\\[\\]\\[\\]\n\n```java\nint[][] arr; //arr是一个二维数组，可以看成元素是int[]一维数组类型的一个数组\n```\n\n二维数组也可以看成一个二维表，行*列组成的二维表，只不过这个二维表，每一行的列数还可能不同。但是每一个单元格中的元素的数据类型是一致的，例如：都是int，都是String等\n\n![1561524724397](imgs/1561524724397.png)\n\n### 4.10.1 二维数组的声明与初始化\n\n语法格式：\n\n```java\n//推荐\n元素的数据类型[][] 二维数组的名称;\n\n//不推荐\n元素的数据类型  二维数组名[][];\n//不推荐\n元素的数据类型[]  二维数组名[];\n```\n\n面试：\n\n```\nint[] x, y[];\n//x是一维数组，y是二维数组\n```\n\n#### 1、静态初始化\n\n```java\n元素的数据类型[][] 二维数组名 = new 元素的数据类型[][]{\n\t\t\t{元素1，元素2，元素3 。。。}, \n\t\t\t{第二行的值列表},\n\t\t\t...\n\t\t\t{第n行的值列表}\n\t\t};\n\n元素的数据类型[][] 二维数组名;\n二维数组名 = new 元素的数据类型[][]{\n\t\t\t{元素1，元素2，元素3 。。。}, \n\t\t\t{第二行的值列表},\n\t\t\t...\n\t\t\t{第n行的值列表}\n\t\t};\n\t\t\n//以下格式要求声明与静态初始化必须一起完成\n元素的数据类型[][] 二维数组的名称 = {\n\t\t\t{元素1，元素2，元素3 。。。}, \n\t\t\t{第二行的值列表},\n\t\t\t...\n\t\t\t{第n行的值列表}\n\t\t};\n```\n\n> **如果是静态初始化，右边new 数据类型\\[\\]\\[\\]中不能写数字，因为行数和列数，由{}的元素个数决定**\n\n举例：\n\n```java\n\tint[][] arr;\n\tarr = new int[][]{{1,2,3},{4,5,6},{7,8,9}};\n\tarr = new int[3][3]{{1,2,3},{4,5,6},{7,8,9}};//错误，静态初始化右边new 数据类型[]中不能写数字\n\n\tint[][] arr = new int[][]{{1,2,3},{4,5,6},{7,8,9}};\n\n\tint[][] arr = {{1,2,3},{4,5,6},{7,8,9}};//声明与初始化必须在一句完成\n```\n\n```java\npublic class Array2Demo1 {\n\tpublic static void main(String[] args) {\n\t\t//定义数组\n\t\tint[][] arr = {{1,2,3},{4,5},{6}};\n\t\t\n\t\tSystem.out.println(arr);\n\t\tSystem.out.println(arr[0]);\n\t\tSystem.out.println(arr[1]);\n\t\tSystem.out.println(arr[2]);\n\t\t\n\t\tSystem.out.println(arr[0][0]); //1\n\t\tSystem.out.println(arr[1][0]); //4\n\t\tSystem.out.println(arr[2][0]); //6\n\t\t\n\t\tSystem.out.println(arr[0][1]); //2\n\t\tSystem.out.println(arr[1][1]); //5\n\t\t//越界\n\t\tSystem.out.println(arr[2][1]); //错误\n\t}\n}\n```\n\n#### 2、动态初始化（规则二维表：每一行的列数是相同的）\n\n```java\n//（1）确定行数和列数\n元素的数据类型[][] 二维数组名 = new 元素的数据类型[m][n];\n\tm:表示这个二维数组有多少个一维数组。或者说一共二维表有几行\n\tn:表示每一个一维数组的元素有多少个。或者说每一行共有一个单元格\n\n//此时创建完数组，行数、列数确定，而且元素也都有默认值\n\n//（2）再为元素赋新值\n二维数组名[行下标][列下标] = 值;\n```\n\n```java\npublic static void main(String[] args) {\n    //定义一个二维数组\n    int[][] arr = new int[3][2];\n    \n    //定义了一个二维数组arr\n    //这个二维数组有3个一维数组的元素\n    //每一个一维数组有2个元素\n    //输出二维数组名称\n    System.out.println(arr); //地址值\t[[I@175078b\n    \n    //输出二维数组的第一个元素一维数组的名称\n    System.out.println(arr[0]); //地址值\t[I@42552c\n    System.out.println(arr[1]); //地址值\t[I@e5bbd6\n    System.out.println(arr[2]); //地址值\t[I@8ee016\n    \n    //输出二维数组的元素\n    System.out.println(arr[0][0]); //0\n    System.out.println(arr[0][1]); //0\n    \n    //...\n}\t \n```\n\n#### 3、动态初始化（不规则：每一行的列数可能不一样）\n\n```java\n//（1）先确定总行数\n元素的数据类型[][] 二维数组名 = new 元素的数据类型[总行数][];\n\n//此时只是确定了总行数，每一行里面现在是null\n\n//（2）再确定每一行的列数，创建每一行的一维数组\n二维数组名[行下标] = new 元素的数据类型[该行的总列数];\n\n//此时已经new完的行的元素就有默认值了，没有new的行还是null\n\n//(3)再为元素赋值\n二维数组名[行下标][列下标] = 值;\n```\n\n```java\n\tpublic static void main(String[] args) {\n\t\t//定义数组\n\t\tint[][] arr = new int[3][];\n        \n        System.out.println(arr);\t//[[I@175078b\n        \n        System.out.println(arr[1][0]);//NullPointerException\n\t\tSystem.out.println(arr[0]); //null\n\t\tSystem.out.println(arr[1]); //null\n\t\tSystem.out.println(arr[2]); //null\n\t\t\n\t\t//动态的为每一个一维数组分配空间\n\t\tarr[0] = new int[2];\n\t\tarr[1] = new int[3];\n\t\tarr[2] = new int[1];\n\t\t\n\t\tSystem.out.println(arr[0]); //[I@42552c\n\t\tSystem.out.println(arr[1]); //[I@e5bbd6\n\t\tSystem.out.println(arr[2]); //[I@8ee016\n\t\t\n\t\tSystem.out.println(arr[0][0]); //0\n\t\tSystem.out.println(arr[0][1]); //0\n\t\t//ArrayIndexOutOfBoundsException\n\t\t//System.out.println(arr[0][2]); //错误\n\t\t\n\t\tarr[1][0] = 100;\n\t\tarr[1][2] = 200;\n\t}\n```\n\n### 4.10.2 二维数组的相关名称及其表示方式\n\n（1）二维数组的长度/行数： \n\n​\t二维数组名.length\n\n（2）二维数组的某一行：\n\n​\t二维数组名[行下标]\n\n​\t行下标的范围：[0, 二维数组名.length-1]\n\n（3）某一行的列数：\n\n​\t二维数组名[行下标].length\n\n​       因为二维数组的每一行是一个一维数组\n\n（4）某一个元素\n\n​\t二维数组名\\[行下标\\]\\[列下标\\]\n\n### 4.10.3  二维数组的遍历\n\n```java\nfor(int i=0; i<二维数组名.length; i++){\n    for(int j=0; j<二维数组名[i].length; j++){\n        System.out.print(二维数组名[i][j]);\n    }\n    System.out.println();\n}\n```\n\n### 4.10.4 数组操作的常见异常\n\n#### 1 数组越界异常\n\n观察一下代码，运行后会出现什么结果。\n\n```java\npublic static void main(String[] args) {\n    int[] arr = {1,2,3};\n    System.out.println(arr[3]);\n}\n\n```\n\n创建数组，赋值3个元素，数组的索引就是0，1，2，没有3索引，因此我们不能访问数组中不存在的索引，程序运行后，将会抛出 `ArrayIndexOutOfBoundsException`  数组越界异常。在开发中，数组的越界异常是**不能出现**的，一旦出现了，就必须要修改我们编写的代码。\n\n![](imgs/数组越界异常.jpg)\n\n#### 2 数组空指针异常\n\n观察一下代码，运行后会出现什么结果。\n\n```java\n\tpublic static void main(String[] args) {\n\t\t//定义数组\n\t\tint[][] arr = new int[3][];\n        \n        System.out.println(arr[0][0]);//NullPointerException\n    }\n```\n\n因为此时数组的每一行还未分配具体存储元素的空间，此时arr\\[0\\]是null，此时访问arr\\[0\\]\\[0\\]会抛出`NullPointerException` 空指针异常。\n\n![](imgs/空指针异常.jpg)\n\n**空指针异常在内存图中的表现**\n\n![1572338767825](imgs/1572338767825.png)\n\n### 4.10.5 二维数组练习\n\n#### 1、练习1\n\n1、请使用二维数组存储如下数据，并遍历显示\n\n 1\n\n 2 2\n\n 3 3 3\n\n 4 4 4 4\n\n 5 5 5 5 5\n\n```java\n\tpublic static void main(String[] args){\n\t\t//1、声明一个二维数组，并且确定行数\n\t\t//因为每一行的列数不同，这里无法直接确定列数\n\t\tint[][]  arr = new int[5][];\n\t\t\n\t\t//2、确定每一行的列数\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\t/*\n\t\t\tarr[0] 的列数是1\n\t\t\tarr[1] 的列数是2\n\t\t\tarr[2] 的列数是3\n\t\t\tarr[3] 的列数是4\n\t\t\tarr[4] 的列数是5\n\t\t\t*/\n\t\t\tarr[i] = new int[i+1];\n\t\t}\n\t\t\n\t\t//3、确定元素的值\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tarr[i][j] = i+1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//4、遍历显示\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n```\n\n```java\n\tpublic static void main(String[] args){\n\t\t//1、声明一个二维数组，并且初始化\n        int[][] arr = {\n            {1},\n            {2,2},\n            {3,3,3},\n            {4,4,4,4},\n            {5,5,5,5,5}\n        };\n\t\t\n\t\t\n\t\t//2、遍历显示\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\t\n\t}\n```\n\n```java\n\tpublic static void main(String[] args){\n\t\t//1、声明一个二维数组，并且确定行数\n\t\t//因为每一行的列数不同，这里无法直接确定列数\n\t\tint[][]  arr = new int[5][];\n\t\t\n\t\t\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\t//2、确定每一行的列数\n\t\t\tarr[i] = new int[i+1];\n\t\t\t\n\t\t\t//3、确定元素的值\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tarr[i][j] = i+1;\n\t\t\t\t\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\n\t\t\tSystem.out.println();\n\t\t}\n\n\t}\n```\n\n#### 2、练习2\n\n2、请使用二维数组存储如下数据，并遍历显示\n\n 1 1 1 1 1\n\n 2 2 2 2 2\n\n 3 3 3 3 3\n\n 4 4 4 4 4\n\n```java\npublic static void main(String[] args){\n\t\tint[][] arr = {\n\t\t\t{1,1,1,1,1},\n\t\t\t{2,2,2,2,2},\n\t\t\t{3,3,3,3,3},\n\t\t\t{4,4,4,4,4}\n\t\t};\n\t\t\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j]+\" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n```\n\n```java\n\tpublic static void main(String[] args) {\n\t\t//1、声明二维数组，并确定行数和列数\n\t\tint[][] arr = new int[4][5];\n\t\t\n\t\t//2、确定元素的值\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tfor (int j = 0; j < arr.length; j++) {\n\t\t\t\tarr[i][j] = i + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//3、遍历显示\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tSystem.out.print(arr[i][j] + \" \");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n```\n\n#### 3、练习3\n\n3、请使用二维数组存储如下数据，并遍历显示\n\n```java\n\t\tString[][] employees = {\n\t\t        {\"10\", \"1\", \"段誉\", \"22\", \"3000\"},\n\t\t        {\"13\", \"2\", \"令狐冲\", \"32\", \"18000\", \"15000\", \"2000\"},\n\t\t        {\"11\", \"3\", \"任我行\", \"23\", \"7000\"},\n\t\t        {\"11\", \"4\", \"张三丰\", \"24\", \"7300\"},\n\t\t        {\"12\", \"5\", \"周芷若\", \"28\", \"10000\", \"5000\"},\n\t\t        {\"11\", \"6\", \"赵敏\", \"22\", \"6800\"},\n\t\t        {\"12\", \"7\", \"张无忌\", \"29\", \"10800\",\"5200\"},\n\t\t        {\"13\", \"8\", \"韦小宝\", \"30\", \"19800\", \"15000\", \"2500\"},\n\t\t        {\"12\", \"9\", \"杨过\", \"26\", \"9800\", \"5500\"},\n\t\t        {\"11\", \"10\", \"小龙女\", \"21\", \"6600\"},\n\t\t        {\"11\", \"11\", \"郭靖\", \"25\", \"7100\"},\n\t\t        {\"12\", \"12\", \"黄蓉\", \"27\", \"9600\", \"4800\"}\n\t\t    };\n```\n\n其中\"10\"代表普通职员，\"11\"代表程序员，\"12\"代表设计师，\"13\"代表架构师\n\n![1561529559251](imgs/1561529559251.png)\n\n```java\n\tpublic static void main(String[] args) {\n\t\tString[][] employees = {\n\t\t        {\"10\", \"1\", \"段誉\", \"22\", \"3000\"},\n\t\t        {\"13\", \"2\", \"令狐冲\", \"32\", \"18000\", \"15000\", \"2000\"},\n\t\t        {\"11\", \"3\", \"任我行\", \"23\", \"7000\"},\n\t\t        {\"11\", \"4\", \"张三丰\", \"24\", \"7300\"},\n\t\t        {\"12\", \"5\", \"周芷若\", \"28\", \"10000\", \"5000\"},\n\t\t        {\"11\", \"6\", \"赵敏\", \"22\", \"6800\"},\n\t\t        {\"12\", \"7\", \"张无忌\", \"29\", \"10800\",\"5200\"},\n\t\t        {\"13\", \"8\", \"韦小宝\", \"30\", \"19800\", \"15000\", \"2500\"},\n\t\t        {\"12\", \"9\", \"杨过\", \"26\", \"9800\", \"5500\"},\n\t\t        {\"11\", \"10\", \"小龙女\", \"21\", \"6600\"},\n\t\t        {\"11\", \"11\", \"郭靖\", \"25\", \"7100\"},\n\t\t        {\"12\", \"12\", \"黄蓉\", \"27\", \"9600\", \"4800\"}\n\t\t    };\n\t\tSystem.out.println(\"员工类型\\t编号\\t姓名\\t年龄\\t薪资\\t奖金\\t股票\\t\");\n\t\tfor (int i = 0; i < employees.length; i++) {\n\t\t\tswitch(employees[i][0]){\n\t\t\tcase \"10\":\n\t\t\t\tSystem.out.print(\"普通职员\");\n\t\t\t\tbreak;\n\t\t\tcase \"11\":\n\t\t\t\tSystem.out.print(\"程序员\");\n\t\t\t\tbreak;\n\t\t\tcase \"12\":\n\t\t\t\tSystem.out.print(\"设计师\");\n\t\t\t\tbreak;\n\t\t\tcase \"13\":\n\t\t\t\tSystem.out.print(\"架构师\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor (int j = 1; j < employees[i].length; j++) {\n\t\t\t\tSystem.out.print(\"\\t\" + employees[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n```\n\n### 4.10.6 二维数组的内存图分析\n\n#### 1、示例一\n\n```java\n        int[][] arr = {\n            {1},\n            {2,2},\n            {3,3,3},\n            {4,4,4,4},\n            {5,5,5,5,5}\n        };\n```\n\n![1562112672215](imgs/1562112672215.png)\n\n#### 2、示例二\n\n```java\n\t\t//1、声明二维数组，并确定行数和列数\n\t\tint[][] arr = new int[4][5];\n\t\t\n\t\t//2、确定元素的值\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tfor (int j = 0; j < arr.length; j++) {\n\t\t\t\tarr[i][j] = i + 1;\n\t\t\t}\n\t\t}\n```\n\n![1562113179785](imgs/1562113179785.png)\n\n#### 3、示例三\n\n```java\n\t\t//1、声明一个二维数组，并且确定行数\n\t\t//因为每一行的列数不同，这里无法直接确定列数\n\t\tint[][]  arr = new int[5][];\n\t\t\n\t\t//2、确定每一行的列数\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\t/*\n\t\t\tarr[0] 的列数是1\n\t\t\tarr[1] 的列数是2\n\t\t\tarr[2] 的列数是3\n\t\t\tarr[3] 的列数是4\n\t\t\tarr[4] 的列数是5\n\t\t\t*/\n\t\t\tarr[i] = new int[i+1];\n\t\t}\n\t\t\n\t\t//3、确定元素的值\n\t\tfor(int i=0; i<arr.length; i++){\n\t\t\tfor(int j=0; j<arr[i].length; j++){\n\t\t\t\tarr[i][j] = i+1;\n\t\t\t}\n\t\t}\n```\n\n![1562113981079](imgs/1562113981079.png)\n\n","slug":"JavaSE_day04【数组】","published":1,"updated":"2021-10-01T07:26:15.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cku8257kb000aq8v75ncd3c6n","content":"<h1 id=\"JavaSE-day04【数组】\"><a href=\"#JavaSE-day04【数组】\" class=\"headerlink\" title=\"JavaSE_day04【数组】\"></a>JavaSE_day04【数组】</h1><h2 id=\"今日内容\"><a href=\"#今日内容\" class=\"headerlink\" title=\"今日内容\"></a>今日内容</h2><ul>\n<li>数组概念</li>\n<li>数组的声明和初始化</li>\n<li>数组的索引</li>\n<li>数组的长度</li>\n<li>数组的遍历</li>\n<li>数组内存</li>\n<li>数组的相关算法</li>\n</ul>\n<h2 id=\"学习目标\"><a href=\"#学习目标\" class=\"headerlink\" title=\"学习目标\"></a>学习目标</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 理解数组作为容器的概念</li>\n<li><input disabled=\"\" type=\"checkbox\"> 掌握数组的声明和初始化</li>\n<li><input disabled=\"\" type=\"checkbox\"> 使用索引访问数组的元素</li>\n<li><input disabled=\"\" type=\"checkbox\"> 了解数组的内存图解</li>\n<li><input disabled=\"\" type=\"checkbox\"> 避免空指针和越界异常</li>\n<li><input disabled=\"\" type=\"checkbox\"> 掌握数组的遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 掌握常见的数组算法</li>\n</ul>\n<h1 id=\"第四章-数组\"><a href=\"#第四章-数组\" class=\"headerlink\" title=\"第四章 数组\"></a>第四章 数组</h1><h2 id=\"4-1-容器概述\"><a href=\"#4-1-容器概述\" class=\"headerlink\" title=\"4.1 容器概述\"></a>4.1 容器概述</h2><h3 id=\"案例分析\"><a href=\"#案例分析\" class=\"headerlink\" title=\"案例分析\"></a>案例分析</h3><p>现在需要统计某公司员工的工资情况，例如计算平均工资、找到最高工资等。假设该公司有50名员工，用前面所学的知识，程序首先需要声明50个变量来分别记住每位员工的工资，然后在进行操作，这样做会显得很麻烦，而且错误率也会很高。因此我们可以使用容器进行操作。将所有的数据全部存储到一个容器中，统一操作。</p>\n<h3 id=\"容器概念\"><a href=\"#容器概念\" class=\"headerlink\" title=\"容器概念\"></a>容器概念</h3><ul>\n<li><strong>容器：</strong>是将多个数据存储到一起，每个数据称为该容器的元素。</li>\n<li><strong>生活中的容器：</strong>水杯，衣柜，教室</li>\n</ul>\n<h2 id=\"4-2-数组的概念\"><a href=\"#4-2-数组的概念\" class=\"headerlink\" title=\"4.2 数组的概念\"></a>4.2 数组的概念</h2><ul>\n<li><strong>数组概念：</strong> 数组就是用于存储数据的长度固定的容器，保证多个数据的数据类型要一致。</li>\n</ul>\n<p>百度百科中对数组的定义：</p>\n<p>所谓<strong>数组</strong>(array)，就是相同数据类型的元素按一定顺序排列的集合，就是把有限个类型相同的变量用一个名字命名，以便统一管理他们，然后用编号区分他们，这个名字称为<strong>数组名</strong>，编号称为<strong>下标或索引</strong>(index)。组成数组的各个变量称为数组的<strong>元素</strong>(element)。数组中元素的个数称为<strong>数组的长度</strong>(length)。</p>\n<p><img src=\"imgs/1561452334825.png\" alt=\"1561452334825\"></p>\n<p>数组的特点：</p>\n<p>1、数组的长度一旦确定就不能修改</p>\n<p>2、创建数组时会在内存中开辟一整块连续的空间。</p>\n<p>3、存取元素的速度快，因为可以通过[下标]，直接定位到任意一个元素。</p>\n<h2 id=\"4-3-数组的声明与初始化\"><a href=\"#4-3-数组的声明与初始化\" class=\"headerlink\" title=\"4.3 数组的声明与初始化\"></a>4.3 数组的声明与初始化</h2><p>数组的声明：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\">元素的数据类型[] 二维数组的名称;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">元素的数据类型  二维数组名[];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式一：静态初始化\"><a href=\"#方式一：静态初始化\" class=\"headerlink\" title=\"方式一：静态初始化\"></a>方式一：静态初始化</h3><ul>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型[] 数组名 = &#123;元素<span class=\"number\">1</span>,元素<span class=\"number\">2</span>,元素<span class=\"number\">3.</span>..&#125;;<span class=\"comment\">//必须在一个语句中完成，不能分开两个语句写</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>举例：</li>\n</ul>\n<p>定义存储1，2，3，4，5整数的数组容器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//错误</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式二：静态初始化\"><a href=\"#方式二：静态初始化\" class=\"headerlink\" title=\"方式二：静态初始化\"></a>方式二：静态初始化</h3><ul>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型[] 数组名 = <span class=\"keyword\">new</span> 数据类型[]&#123;元素<span class=\"number\">1</span>,元素<span class=\"number\">2</span>,元素<span class=\"number\">3.</span>..&#125;;</span><br><span class=\"line\">或</span><br><span class=\"line\">数据类型[] 数组名;</span><br><span class=\"line\">数组名 = <span class=\"keyword\">new</span> 数据类型[]&#123;元素<span class=\"number\">1</span>,元素<span class=\"number\">2</span>,元素<span class=\"number\">3.</span>..&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>举例：</li>\n</ul>\n<p>定义存储1，2，3，4，5整数的数组容器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//错误的，后面有&#123;&#125;指定元素列表，就不需要在[长度]指定长度。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式三：动态初始化\"><a href=\"#方式三：动态初始化\" class=\"headerlink\" title=\"方式三：动态初始化\"></a>方式三：动态初始化</h3><ul>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组存储的元素的数据类型[] 数组名字 = <span class=\"keyword\">new</span> 数组存储的元素的数据类型[长度];</span><br><span class=\"line\"></span><br><span class=\"line\"> 或</span><br><span class=\"line\"></span><br><span class=\"line\">数组存储的数据类型[] 数组名字;</span><br><span class=\"line\">数组名字 = <span class=\"keyword\">new</span> 数组存储的数据类型[长度];</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>数组定义格式详解：<ul>\n<li>数组存储的元素的数据类型： 创建的数组容器可以存储什么数据类型的数据。</li>\n<li>元素的类型可以是任意的Java的数据类型。例如：int, String, Student等</li>\n<li>[] : 表示数组。</li>\n<li>数组名字：为定义的数组起个变量名，满足标识符规范，可以使用名字操作数组。</li>\n<li>new：关键字，创建数组使用的关键字。因为数组本身是引用数据类型，所以要用new创建数组对象。</li>\n<li>[长度]：数组的长度，表示数组容器中可以存储多少个元素。</li>\n<li><strong>注意：数组有定长特性，长度一旦指定，不可更改。</strong><ul>\n<li>和水杯道理相同，买了一个2升的水杯，总容量就是2升，不能多也不能少。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>举例：</li>\n</ul>\n<p>定义可以存储5个整数的数组容器，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>思考：用这种方式初始化的数组，元素有值吗？</p>\n</blockquote>\n<h2 id=\"4-4-数组元素的访问\"><a href=\"#4-4-数组元素的访问\" class=\"headerlink\" title=\"4.4 数组元素的访问\"></a>4.4 数组元素的访问</h2><ul>\n<li><strong>索引：</strong> 每一个存储到数组的元素，都会自动的拥有一个编号，从0开始，这个自动编号称为**数组索引(index)**，可以通过数组的索引访问到数组中的元素。</li>\n<li><strong>索引范围：</strong>[0, 数组的长度-1]</li>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组名[索引]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>索引访问数组中的元素：</strong><ul>\n<li>数组名[索引]=数值，为数组中的元素赋值</li>\n<li>变量=数组名[索引]，获取出数组中的元素</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义存储int类型数组，赋值元素1，2，3，4，5</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">    <span class=\"comment\">//为0索引元素赋值为6</span></span><br><span class=\"line\">    arr[<span class=\"number\">0</span>] = <span class=\"number\">6</span>;</span><br><span class=\"line\">    <span class=\"comment\">//获取数组0索引上的元素</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">    System.out.println(i);</span><br><span class=\"line\">    <span class=\"comment\">//直接输出数组0索引元素</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-5-数组的遍历\"><a href=\"#4-5-数组的遍历\" class=\"headerlink\" title=\"4.5 数组的遍历\"></a>4.5 数组的遍历</h2><ul>\n<li><strong>数组的长度属性：</strong> 每个数组都具有长度，而且是固定的，Java中赋予了数组的一个属性，可以获取到数组的长度，语句为：<code>数组名.length</code> ，属性length的执行结果是数组的长度，int类型结果。由次可以推断出，数组的最大索引值为<code>数组名.length-1</code>。</li>\n<li><strong>数组遍历：</strong> 就是将数组中的每个元素分别获取出来，就是遍历。遍历也是数组操作中的基石。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">  \t<span class=\"comment\">//打印数组的属性，输出结果是5</span></span><br><span class=\"line\">  \tSystem.out.println(<span class=\"string\">&quot;数组的长度：&quot;</span> + arr.length);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//遍历输出数组中的元素</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;数组的元素有：&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">        System.out.println(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-6-数组元素的默认值\"><a href=\"#4-6-数组元素的默认值\" class=\"headerlink\" title=\"4.6 数组元素的默认值\"></a>4.6 数组元素的默认值</h2><p>当我们使用动态初始化创建数组时：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组存储的元素的数据类型[] 数组名字 = <span class=\"keyword\">new</span> 数组存储的元素的数据类型[长度];</span><br></pre></td></tr></table></figure>\n\n<p>此时只确定了数组的长度，那么数组的元素是什么值呢？</p>\n<p>数组的元素有默认值：</p>\n<p><img src=\"imgs/1561509460135.png\" alt=\"1561509460135\"></p>\n<h2 id=\"4-7-数组内存图\"><a href=\"#4-7-数组内存图\" class=\"headerlink\" title=\"4.7 数组内存图\"></a>4.7 数组内存图</h2><h3 id=\"4-7-1-内存概述\"><a href=\"#4-7-1-内存概述\" class=\"headerlink\" title=\"4.7.1 内存概述\"></a>4.7.1 内存概述</h3><p>内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来。我们编写的程序是存放在硬盘中的，在硬盘中的程序是不会运行的，必须放进内存中才能运行，运行完毕后会清空内存。</p>\n<p>Java虚拟机要运行程序，必须要对内存进行空间的分配和管理。</p>\n<h3 id=\"4-7-2-Java虚拟机的内存划分\"><a href=\"#4-7-2-Java虚拟机的内存划分\" class=\"headerlink\" title=\"4.7.2 Java虚拟机的内存划分\"></a>4.7.2 Java虚拟机的内存划分</h3><p>为了提高运算效率，就对空间进行了不同区域的划分，因为每一片区域都有特定的处理数据方式和内存管理方式。</p>\n<p><img src=\"imgs/1561465258546.png\" alt=\"1561465258546\"></p>\n<table>\n<thead>\n<tr>\n<th>区域名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>程序计数器</td>\n<td>程序计数器是CPU中的寄存器，它包含每一个线程下一条要执行的指令的地址</td>\n</tr>\n<tr>\n<td>本地方法栈</td>\n<td>当程序中调用了native的本地方法时，本地方法执行期间的内存区域</td>\n</tr>\n<tr>\n<td>方法区</td>\n<td>存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。</td>\n</tr>\n<tr>\n<td>堆内存</td>\n<td>存储对象（包括数组对象），new来创建的，都存储在堆内存。</td>\n</tr>\n<tr>\n<td>虚拟机栈</td>\n<td>用于存储正在执行的每个Java方法的局部变量表等。局部变量表存放了编译期可知长度的各种基本数据类型、对象引用，方法执行完，自动释放。</td>\n</tr>\n</tbody></table>\n<h3 id=\"4-7-3-数组在内存中的存储\"><a href=\"#4-7-3-数组在内存中的存储\" class=\"headerlink\" title=\"4.7.3 数组在内存中的存储\"></a>4.7.3 数组在内存中的存储</h3><h4 id=\"1、一个数组内存图\"><a href=\"#1、一个数组内存图\" class=\"headerlink\" title=\"1、一个数组内存图\"></a>1、一个数组内存图</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">  \tSystem.out.println(arr);<span class=\"comment\">//[I@5f150435</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E5%9B%BE1.jpg\"></p>\n<blockquote>\n<p>思考：打印arr为什么是[I@5f150435，它是数组的地址吗？</p>\n<p>答：它不是数组的地址。</p>\n<p>问？不是说arr中存储的是数组对象的首地址吗？</p>\n<p>答：arr中存储的是数组的首地址，但是因为数组是引用数据类型，打印arr时，会自动调用arr数组对象的toString()方法，默认该方法实现的是对象类型名@该对象的hashCode()值的十六进制值。</p>\n<p>问？对象的hashCode值是否就是对象内存地址？</p>\n<p>答：不一定，因为这个和不同品牌的JVM产品的具体实现有关。例如：Oracle的OpenJDK中给出了5种实现，其中有一种是直接返回对象的内存地址，但是OpenJDK默认没有选择这种方式。</p>\n</blockquote>\n<h4 id=\"2、数组下标为什么是0开始\"><a href=\"#2、数组下标为什么是0开始\" class=\"headerlink\" title=\"2、数组下标为什么是0开始\"></a>2、数组下标为什么是0开始</h4><p>因为第一个元素距离数组首地址间隔0个单元。</p>\n<h4 id=\"3、两个数组内存图\"><a href=\"#3、两个数组内存图\" class=\"headerlink\" title=\"3、两个数组内存图\"></a>3、两个数组内存图</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr2 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">    System.out.println(arr);</span><br><span class=\"line\">    System.out.println(arr2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E5%9B%BE2.jpg\"></p>\n<h4 id=\"4、两个变量指向一个数组\"><a href=\"#4、两个变量指向一个数组\" class=\"headerlink\" title=\"4、两个变量指向一个数组\"></a>4、两个变量指向一个数组</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定义数组，存储3个元素</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"comment\">//数组索引进行赋值</span></span><br><span class=\"line\">    arr[<span class=\"number\">0</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">1</span>] = <span class=\"number\">6</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">2</span>] = <span class=\"number\">7</span>;</span><br><span class=\"line\">    <span class=\"comment\">//输出3个索引上的元素值</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">2</span>]);</span><br><span class=\"line\">    <span class=\"comment\">//定义数组变量arr2，将arr的地址赋值给arr2</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr2 = arr;</span><br><span class=\"line\">    arr2[<span class=\"number\">1</span>] = <span class=\"number\">9</span>;</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"imgs/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E5%9B%BE3.jpg\"></p>\n<h2 id=\"4-8-数组的练习题\"><a href=\"#4-8-数组的练习题\" class=\"headerlink\" title=\"4.8 数组的练习题\"></a>4.8 数组的练习题</h2><p>1、练习1：用一个数组存储26个小写英文字母，并遍历显示，显示要求如：a-&gt;A</p>\n<p>2、练习2：用一个数组存储本组学员的年龄，从键盘输入，并遍历显示</p>\n<p>3、练习3：用一个数组存储本组学员的姓名，从键盘输入，并遍历显示</p>\n<p>4、练习4：用数组存储一个星期的7个英文单词，然后从键盘输入星期的值[1-7]，输出对应的英文单词</p>\n<h2 id=\"4-9-数组的常见算法\"><a href=\"#4-9-数组的常见算法\" class=\"headerlink\" title=\"4.9 数组的常见算法\"></a>4.9 数组的常见算法</h2><h3 id=\"4-9-1-数组统计：求总和、均值、统计偶数个数等\"><a href=\"#4-9-1-数组统计：求总和、均值、统计偶数个数等\" class=\"headerlink\" title=\"4.9.1 数组统计：求总和、均值、统计偶数个数等\"></a>4.9.1 数组统计：求总和、均值、统计偶数个数等</h3><p>思路：遍历数组，挨个的累加，判断每一个元素</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//求总和、均值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;<span class=\"comment\">//因为0加上任何数都不影响结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    sum += arr[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">double</span> avg = (<span class=\"keyword\">double</span>)sum/arr.length;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码2：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//求总乘积</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> result = <span class=\"number\">1</span>;<span class=\"comment\">//因为1乘以任何数都不影响结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    result *= arr[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//统计偶数个数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> even = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i]%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        even++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-2-数组的顺序查找\"><a href=\"#4-9-2-数组的顺序查找\" class=\"headerlink\" title=\"4.9.2  数组的顺序查找\"></a>4.9.2  数组的顺序查找</h3><p>顺序查找：挨个查看</p>\n<p>要求：对数组元素的顺序没要求</p>\n<p>顺序查找示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查找value第一次在数组中出现的index</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> value = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[i] == value)&#123;</span><br><span class=\"line\">            index = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index==-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        System.out.println(value + <span class=\"string\">&quot;不存在&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        System.out.println(value + <span class=\"string\">&quot;的下标是&quot;</span> + index);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-3-数组找最值\"><a href=\"#4-9-3-数组找最值\" class=\"headerlink\" title=\"4.9.3 数组找最值\"></a>4.9.3 数组找最值</h3><p><img src=\"imgs/1574577970893.png\" alt=\"1574577970893\"></p>\n<p>思路：</p>\n<p>（1）先假设第一个元素最大/最小</p>\n<p>（2）然后用max/min与后面的元素一一比较</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-4-数组中找最值及其下标\"><a href=\"#4-9-4-数组中找最值及其下标\" class=\"headerlink\" title=\"4.9.4 数组中找最值及其下标\"></a>4.9.4 数组中找最值及其下标</h3><p>情况一：找最值及其第一次出现的下标</p>\n<p>思路：</p>\n<p>（1）先假设第一个元素最大/最小</p>\n<p>（2）用max/min变量表示最大/小值，用max/min与后面的元素一一比较</p>\n<p>（3）用index时刻记录目前比对的最大/小的下标</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">        index = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<p>思路：</p>\n<p>（1）先假设第一个元素最大/最小</p>\n<p>（2）用maxIndex时刻记录目前比对的最大/小的下标，那么arr[maxIndex]就是目前的最大值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> maxIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; arr[maxIndex])&#123;</span><br><span class=\"line\">        maxIndex = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;最大值：&quot;</span> + arr[maxIndex]);</span><br></pre></td></tr></table></figure>\n\n<p>情况二：找最值及其所有最值的下标（即可能最大值重复）</p>\n<p>思路：</p>\n<p>（1）先找最大值</p>\n<p>①假设第一个元素最大</p>\n<p>②用max与后面的元素一一比较</p>\n<p>（2）遍历数组，看哪些元素和最大值是一样的</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组，看哪些元素和最大值是一样的</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(max == arr[i])&#123;</span><br><span class=\"line\">        System.out.print(i+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-9-5-冒泡排序\"><a href=\"#4-9-5-冒泡排序\" class=\"headerlink\" title=\"4.9.5 冒泡排序\"></a>4.9.5 冒泡排序</h3><p>Java中的经典算法之冒泡排序（Bubble Sort）</p>\n<p>原理：比较两个相邻的元素，将值大的元素交换至右端。</p>\n<p>思路：依次比较相邻的两个数，将小数放到前面，大数放到后面。</p>\n<p>​    即第一趟，首先比较第1个和第2个元素，将小数放到前面，大数放到后面。</p>\n<p>​            然后比较第2个和第3个元素，将小数放到前面，大数放到后面。</p>\n<p>​            如此继续，直到比较最后两个数，将小数放到前面，大数放到后面。</p>\n<p>​    重复第一趟步骤，直至全部排序完成。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：冒泡：从小到大，从左到右两两比较</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">&#123;6,3,8,2,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第一轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，6&gt;3成立，就交换，&#123;3,6,8,2,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，6&gt;8不成立，不交换&#123;3,6,8,2,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第3次：arr[2]与arr[3]比较，8&gt;2成立，就交换，&#123;3,6,2,8,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第4次：arr[3]与arr[4]比较，8&gt;9不成立，不交换&#123;3,6,2,8,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第5次：arr[4]与arr[5]比较，9&gt;1成立，就交换，&#123;3,6,2,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第一轮结果：&#123;3,6,2,8,1,9&#125;   9已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t第二轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，3&gt;6不成立，不交换&#123;3,6,2,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，6&gt;2成立，就交换，&#123;3,2,6,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第3次：arr[2]与arr[3]比较，6&gt;8不成立，不交换&#123;3,2,6,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第4次：arr[3]与arr[4]比较，8&gt;1成立，就交换，&#123;3,2,6,1,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第二轮结果：&#123;3,2,6,1,8,9&#125;   8已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第三轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，3&gt;2成立，就交换，&#123;2,3,6,1,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，3&gt;6不成立，不交换&#123;2,3,6,1,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第3次：arr[2]与arr[3]比较，6&gt;1成立，就交换，&#123;2,3,1,6,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第三轮结果：&#123;2,3,1,6,8,9&#125;   6已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第四轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，2&gt;3不成立，不交换&#123;2,3,1,6,8,9&#125; </span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，3&gt;1成立，就交换，&#123;2,1,3,6,8,9&#125; </span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第四轮结果：&#123;2,1,3,6,8,9&#125;    3已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第五轮</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，2&gt;1成立，就交换，&#123;1,2,3,6,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第五轮结果：&#123;1,2,3,6,8,9&#125;   2已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t剩下1，肯定是最小的了，不用比较了</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t6个元素，比较了5轮， n个元素需要n-1轮</span></span><br><span class=\"line\"><span class=\"comment\">\t每一轮比较很多次</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">8</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">1</span>&#125;;  <span class=\"comment\">//arr.length = 6</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//i=1,2,3,4,5  一共5轮</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;<span class=\"comment\">//轮数</span></span><br><span class=\"line\">\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=1，第1轮，j=0,1,2,3,4   arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=2，第2轮，j=0,1,2,3     arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=3，第3轮，j=0,1,2       arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=4，第4轮，j=0,1         arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=5，第5轮，j=0           arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t\tj=0, j&lt;=arr.length-1-i</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;=arr.length-<span class=\"number\">1</span>-i; j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(arr[j] &gt; arr[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> temp = arr[j];</span><br><span class=\"line\">\t\t\t\tarr[j] = arr[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\tarr[j+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//结果</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\tSystem.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码：从大到小，从右到左</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span>[] arr = &#123;<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;j&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;v&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;<span class=\"comment\">//外循环的次数 = 轮数 = 数组的长度-1</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    第1轮，i=1，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[1]与arr[0]</span></span><br><span class=\"line\"><span class=\"comment\">    第2轮，i=2，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[2]与arr[1]</span></span><br><span class=\"line\"><span class=\"comment\">    ...</span></span><br><span class=\"line\"><span class=\"comment\">    第8轮，i=8，从右到左两两比较，arr[8]与arr[7]</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t   arr[j]与arr[j-1]</span></span><br><span class=\"line\"><span class=\"comment\">    找两个关键点：（1）j的起始值：8（2）找j的终止值，依次是1,2,3,。。。8，得出j&gt;=i</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">8</span>; j&gt;=i; j--)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//从大到小，后面的元素 &gt; 前面的元素，就交换</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[j]&gt;arr[j-<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = arr[j];</span><br><span class=\"line\">            arr[j] = arr[j-<span class=\"number\">1</span>];</span><br><span class=\"line\">            arr[j-<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;\t</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-6-练习\"><a href=\"#4-9-6-练习\" class=\"headerlink\" title=\"4.9.6 练习\"></a>4.9.6 练习</h3><p>1、随机产生10个[0,100)之间整数，统计3的倍数的个数</p>\n<p>2、随机产生10个[0,150)之间整数，统计既是3又是5，但不是7的倍数的个数</p>\n<p>3、随机产生10个[0,100)之间整数，统计素数的个数</p>\n<p>4、已知本组学员有：String[] names = {“张三”,”李四”,”王五”,”赵六”,”钱七”};，从键盘输入一个学生姓名，查看他是否是本组学员</p>\n<p>5、声明两个数组，一个存储本组学员姓名，一个存储本组学员成绩，找出最高分同学的姓名</p>\n<h2 id=\"4-10-二维数组\"><a href=\"#4-10-二维数组\" class=\"headerlink\" title=\"4.10 二维数组\"></a>4.10 二维数组</h2><ul>\n<li><p>二维数组：本质上就是元素为一维数组的一个数组。</p>\n</li>\n<li><p>二维数组的标记：[][]</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr; <span class=\"comment\">//arr是一个二维数组，可以看成元素是int[]一维数组类型的一个数组</span></span><br></pre></td></tr></table></figure>\n\n<p>二维数组也可以看成一个二维表，行*列组成的二维表，只不过这个二维表，每一行的列数还可能不同。但是每一个单元格中的元素的数据类型是一致的，例如：都是int，都是String等</p>\n<p><img src=\"imgs/1561524724397.png\" alt=\"1561524724397\"></p>\n<h3 id=\"4-10-1-二维数组的声明与初始化\"><a href=\"#4-10-1-二维数组的声明与初始化\" class=\"headerlink\" title=\"4.10.1 二维数组的声明与初始化\"></a>4.10.1 二维数组的声明与初始化</h3><p>语法格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组的名称;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">元素的数据类型  二维数组名[][];</span><br><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">元素的数据类型[]  二维数组名[];</span><br></pre></td></tr></table></figure>\n\n<p>面试：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int[] x, y[];</span><br><span class=\"line\">//x是一维数组，y是二维数组</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1、静态初始化\"><a href=\"#1、静态初始化\" class=\"headerlink\" title=\"1、静态初始化\"></a>1、静态初始化</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素的数据类型[][] 二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[][]&#123;</span><br><span class=\"line\">\t\t\t&#123;元素<span class=\"number\">1</span>，元素<span class=\"number\">2</span>，元素<span class=\"number\">3</span> 。。。&#125;, </span><br><span class=\"line\">\t\t\t&#123;第二行的值列表&#125;,</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t&#123;第n行的值列表&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">元素的数据类型[][] 二维数组名;</span><br><span class=\"line\">二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[][]&#123;</span><br><span class=\"line\">\t\t\t&#123;元素<span class=\"number\">1</span>，元素<span class=\"number\">2</span>，元素<span class=\"number\">3</span> 。。。&#125;, </span><br><span class=\"line\">\t\t\t&#123;第二行的值列表&#125;,</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t&#123;第n行的值列表&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"comment\">//以下格式要求声明与静态初始化必须一起完成</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组的名称 = &#123;</span><br><span class=\"line\">\t\t\t&#123;元素<span class=\"number\">1</span>，元素<span class=\"number\">2</span>，元素<span class=\"number\">3</span> 。。。&#125;, </span><br><span class=\"line\">\t\t\t&#123;第二行的值列表&#125;,</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t&#123;第n行的值列表&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>如果是静态初始化，右边new 数据类型[][]中不能写数字，因为行数和列数，由{}的元素个数决定</strong></p>\n</blockquote>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[][]&#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][<span class=\"number\">3</span>]&#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;<span class=\"comment\">//错误，静态初始化右边new 数据类型[]中不能写数字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[][]&#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;<span class=\"comment\">//声明与初始化必须在一句完成</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Array2Demo1</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义数组</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;,&#123;<span class=\"number\">6</span>&#125;&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(arr);</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">2</span>]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//1</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">1</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//4</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">2</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//6</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//2</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">1</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//5</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//越界</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">2</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//错误</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、动态初始化（规则二维表：每一行的列数是相同的）\"><a href=\"#2、动态初始化（规则二维表：每一行的列数是相同的）\" class=\"headerlink\" title=\"2、动态初始化（规则二维表：每一行的列数是相同的）\"></a>2、动态初始化（规则二维表：每一行的列数是相同的）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//（1）确定行数和列数</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[m][n];</span><br><span class=\"line\">\tm:表示这个二维数组有多少个一维数组。或者说一共二维表有几行</span><br><span class=\"line\">\tn:表示每一个一维数组的元素有多少个。或者说每一行共有一个单元格</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//此时创建完数组，行数、列数确定，而且元素也都有默认值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//（2）再为元素赋新值</span></span><br><span class=\"line\">二维数组名[行下标][列下标] = 值;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义一个二维数组</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//定义了一个二维数组arr</span></span><br><span class=\"line\">    <span class=\"comment\">//这个二维数组有3个一维数组的元素</span></span><br><span class=\"line\">    <span class=\"comment\">//每一个一维数组有2个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//输出二维数组名称</span></span><br><span class=\"line\">    System.out.println(arr); <span class=\"comment\">//地址值\t[[I@175078b</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//输出二维数组的第一个元素一维数组的名称</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>]); <span class=\"comment\">//地址值\t[I@42552c</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">1</span>]); <span class=\"comment\">//地址值\t[I@e5bbd6</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">2</span>]); <span class=\"comment\">//地址值\t[I@8ee016</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//输出二维数组的元素</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;\t </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、动态初始化（不规则：每一行的列数可能不一样）\"><a href=\"#3、动态初始化（不规则：每一行的列数可能不一样）\" class=\"headerlink\" title=\"3、动态初始化（不规则：每一行的列数可能不一样）\"></a>3、动态初始化（不规则：每一行的列数可能不一样）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//（1）先确定总行数</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[总行数][];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//此时只是确定了总行数，每一行里面现在是null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//（2）再确定每一行的列数，创建每一行的一维数组</span></span><br><span class=\"line\">二维数组名[行下标] = <span class=\"keyword\">new</span> 元素的数据类型[该行的总列数];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//此时已经new完的行的元素就有默认值了，没有new的行还是null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//(3)再为元素赋值</span></span><br><span class=\"line\">二维数组名[行下标][列下标] = 值;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][];</span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(arr);\t<span class=\"comment\">//[[I@175078b</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(arr[<span class=\"number\">1</span>][<span class=\"number\">0</span>]);<span class=\"comment\">//NullPointerException</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>]); <span class=\"comment\">//null</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">1</span>]); <span class=\"comment\">//null</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">2</span>]); <span class=\"comment\">//null</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//动态的为每一个一维数组分配空间</span></span><br><span class=\"line\">\tarr[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">\tarr[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">\tarr[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>]); <span class=\"comment\">//[I@42552c</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">1</span>]); <span class=\"comment\">//[I@e5bbd6</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">2</span>]); <span class=\"comment\">//[I@8ee016</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">\t<span class=\"comment\">//ArrayIndexOutOfBoundsException</span></span><br><span class=\"line\">\t<span class=\"comment\">//System.out.println(arr[0][2]); //错误</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tarr[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">100</span>;</span><br><span class=\"line\">\tarr[<span class=\"number\">1</span>][<span class=\"number\">2</span>] = <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-10-2-二维数组的相关名称及其表示方式\"><a href=\"#4-10-2-二维数组的相关名称及其表示方式\" class=\"headerlink\" title=\"4.10.2 二维数组的相关名称及其表示方式\"></a>4.10.2 二维数组的相关名称及其表示方式</h3><p>（1）二维数组的长度/行数： </p>\n<p>​    二维数组名.length</p>\n<p>（2）二维数组的某一行：</p>\n<p>​    二维数组名[行下标]</p>\n<p>​    行下标的范围：[0, 二维数组名.length-1]</p>\n<p>（3）某一行的列数：</p>\n<p>​    二维数组名[行下标].length</p>\n<p>​       因为二维数组的每一行是一个一维数组</p>\n<p>（4）某一个元素</p>\n<p>​    二维数组名[行下标][列下标]</p>\n<h3 id=\"4-10-3-二维数组的遍历\"><a href=\"#4-10-3-二维数组的遍历\" class=\"headerlink\" title=\"4.10.3  二维数组的遍历\"></a>4.10.3  二维数组的遍历</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;二维数组名.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;二维数组名[i].length; j++)&#123;</span><br><span class=\"line\">        System.out.print(二维数组名[i][j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-10-4-数组操作的常见异常\"><a href=\"#4-10-4-数组操作的常见异常\" class=\"headerlink\" title=\"4.10.4 数组操作的常见异常\"></a>4.10.4 数组操作的常见异常</h3><h4 id=\"1-数组越界异常\"><a href=\"#1-数组越界异常\" class=\"headerlink\" title=\"1 数组越界异常\"></a>1 数组越界异常</h4><p>观察一下代码，运行后会出现什么结果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">3</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>创建数组，赋值3个元素，数组的索引就是0，1，2，没有3索引，因此我们不能访问数组中不存在的索引，程序运行后，将会抛出 <code>ArrayIndexOutOfBoundsException</code>  数组越界异常。在开发中，数组的越界异常是<strong>不能出现</strong>的，一旦出现了，就必须要修改我们编写的代码。</p>\n<p><img src=\"imgs/%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E5%BC%82%E5%B8%B8.jpg\"></p>\n<h4 id=\"2-数组空指针异常\"><a href=\"#2-数组空指针异常\" class=\"headerlink\" title=\"2 数组空指针异常\"></a>2 数组空指针异常</h4><p>观察一下代码，运行后会出现什么结果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][];</span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]);<span class=\"comment\">//NullPointerException</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<p>因为此时数组的每一行还未分配具体存储元素的空间，此时arr[0]是null，此时访问arr[0][0]会抛出<code>NullPointerException</code> 空指针异常。</p>\n<p><img src=\"imgs/%E7%A9%BA%E6%8C%87%E9%92%88%E5%BC%82%E5%B8%B8.jpg\"></p>\n<p><strong>空指针异常在内存图中的表现</strong></p>\n<p><img src=\"imgs/1572338767825.png\" alt=\"1572338767825\"></p>\n<h3 id=\"4-10-5-二维数组练习\"><a href=\"#4-10-5-二维数组练习\" class=\"headerlink\" title=\"4.10.5 二维数组练习\"></a>4.10.5 二维数组练习</h3><h4 id=\"1、练习1\"><a href=\"#1、练习1\" class=\"headerlink\" title=\"1、练习1\"></a>1、练习1</h4><p>1、请使用二维数组存储如下数据，并遍历显示</p>\n<p> 1</p>\n<p> 2 2</p>\n<p> 3 3 3</p>\n<p> 4 4 4 4</p>\n<p> 5 5 5 5 5</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明一个二维数组，并且确定行数</span></span><br><span class=\"line\">\t<span class=\"comment\">//因为每一行的列数不同，这里无法直接确定列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][]  arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>][];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//2、确定每一行的列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[0] 的列数是1</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[1] 的列数是2</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[2] 的列数是3</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[3] 的列数是4</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[4] 的列数是5</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\tarr[i] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//3、确定元素的值</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tarr[i][j] = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//4、遍历显示</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明一个二维数组，并且初始化</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span>[][] arr = &#123;</span><br><span class=\"line\">           &#123;<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">       &#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//2、遍历显示</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明一个二维数组，并且确定行数</span></span><br><span class=\"line\">\t<span class=\"comment\">//因为每一行的列数不同，这里无法直接确定列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][]  arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>][];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2、确定每一行的列数</span></span><br><span class=\"line\">\t\tarr[i] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3、确定元素的值</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tarr[i][j] = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、练习2\"><a href=\"#2、练习2\" class=\"headerlink\" title=\"2、练习2\"></a>2、练习2</h4><p>2、请使用二维数组存储如下数据，并遍历显示</p>\n<p> 1 1 1 1 1</p>\n<p> 2 2 2 2 2</p>\n<p> 3 3 3 3 3</p>\n<p> 4 4 4 4 4</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[][] arr = &#123;</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(arr[i][j]+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明二维数组，并确定行数和列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">4</span>][<span class=\"number\">5</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//2、确定元素的值</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">\t\t\tarr[i][j] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//3、遍历显示</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、练习3\"><a href=\"#3、练习3\" class=\"headerlink\" title=\"3、练习3\"></a>3、练习3</h4><p>3、请使用二维数组存储如下数据，并遍历显示</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String[][] employees = &#123;</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;段誉&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;3000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;令狐冲&quot;</span>, <span class=\"string\">&quot;32&quot;</span>, <span class=\"string\">&quot;18000&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;3&quot;</span>, <span class=\"string\">&quot;任我行&quot;</span>, <span class=\"string\">&quot;23&quot;</span>, <span class=\"string\">&quot;7000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;4&quot;</span>, <span class=\"string\">&quot;张三丰&quot;</span>, <span class=\"string\">&quot;24&quot;</span>, <span class=\"string\">&quot;7300&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;5&quot;</span>, <span class=\"string\">&quot;周芷若&quot;</span>, <span class=\"string\">&quot;28&quot;</span>, <span class=\"string\">&quot;10000&quot;</span>, <span class=\"string\">&quot;5000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;6&quot;</span>, <span class=\"string\">&quot;赵敏&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;6800&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;7&quot;</span>, <span class=\"string\">&quot;张无忌&quot;</span>, <span class=\"string\">&quot;29&quot;</span>, <span class=\"string\">&quot;10800&quot;</span>,<span class=\"string\">&quot;5200&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;韦小宝&quot;</span>, <span class=\"string\">&quot;30&quot;</span>, <span class=\"string\">&quot;19800&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2500&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;9&quot;</span>, <span class=\"string\">&quot;杨过&quot;</span>, <span class=\"string\">&quot;26&quot;</span>, <span class=\"string\">&quot;9800&quot;</span>, <span class=\"string\">&quot;5500&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;小龙女&quot;</span>, <span class=\"string\">&quot;21&quot;</span>, <span class=\"string\">&quot;6600&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;郭靖&quot;</span>, <span class=\"string\">&quot;25&quot;</span>, <span class=\"string\">&quot;7100&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;黄蓉&quot;</span>, <span class=\"string\">&quot;27&quot;</span>, <span class=\"string\">&quot;9600&quot;</span>, <span class=\"string\">&quot;4800&quot;</span>&#125;</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>其中”10”代表普通职员，”11”代表程序员，”12”代表设计师，”13”代表架构师</p>\n<p><img src=\"imgs/1561529559251.png\" alt=\"1561529559251\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\tString[][] employees = &#123;</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;段誉&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;3000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;令狐冲&quot;</span>, <span class=\"string\">&quot;32&quot;</span>, <span class=\"string\">&quot;18000&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;3&quot;</span>, <span class=\"string\">&quot;任我行&quot;</span>, <span class=\"string\">&quot;23&quot;</span>, <span class=\"string\">&quot;7000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;4&quot;</span>, <span class=\"string\">&quot;张三丰&quot;</span>, <span class=\"string\">&quot;24&quot;</span>, <span class=\"string\">&quot;7300&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;5&quot;</span>, <span class=\"string\">&quot;周芷若&quot;</span>, <span class=\"string\">&quot;28&quot;</span>, <span class=\"string\">&quot;10000&quot;</span>, <span class=\"string\">&quot;5000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;6&quot;</span>, <span class=\"string\">&quot;赵敏&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;6800&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;7&quot;</span>, <span class=\"string\">&quot;张无忌&quot;</span>, <span class=\"string\">&quot;29&quot;</span>, <span class=\"string\">&quot;10800&quot;</span>,<span class=\"string\">&quot;5200&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;韦小宝&quot;</span>, <span class=\"string\">&quot;30&quot;</span>, <span class=\"string\">&quot;19800&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2500&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;9&quot;</span>, <span class=\"string\">&quot;杨过&quot;</span>, <span class=\"string\">&quot;26&quot;</span>, <span class=\"string\">&quot;9800&quot;</span>, <span class=\"string\">&quot;5500&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;小龙女&quot;</span>, <span class=\"string\">&quot;21&quot;</span>, <span class=\"string\">&quot;6600&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;郭靖&quot;</span>, <span class=\"string\">&quot;25&quot;</span>, <span class=\"string\">&quot;7100&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;黄蓉&quot;</span>, <span class=\"string\">&quot;27&quot;</span>, <span class=\"string\">&quot;9600&quot;</span>, <span class=\"string\">&quot;4800&quot;</span>&#125;</span><br><span class=\"line\">\t    &#125;;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;员工类型\\t编号\\t姓名\\t年龄\\t薪资\\t奖金\\t股票\\t&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; employees.length; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(employees[i][<span class=\"number\">0</span>])&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;10&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;普通职员&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;11&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;程序员&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;12&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;设计师&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;13&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;架构师&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; employees[i].length; j++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;\\t&quot;</span> + employees[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-10-6-二维数组的内存图分析\"><a href=\"#4-10-6-二维数组的内存图分析\" class=\"headerlink\" title=\"4.10.6 二维数组的内存图分析\"></a>4.10.6 二维数组的内存图分析</h3><h4 id=\"1、示例一\"><a href=\"#1、示例一\" class=\"headerlink\" title=\"1、示例一\"></a>1、示例一</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;</span><br><span class=\"line\">    &#123;<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/1562112672215.png\" alt=\"1562112672215\"></p>\n<h4 id=\"2、示例二\"><a href=\"#2、示例二\" class=\"headerlink\" title=\"2、示例二\"></a>2、示例二</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1、声明二维数组，并确定行数和列数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">4</span>][<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2、确定元素的值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">\t\tarr[i][j] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/1562113179785.png\" alt=\"1562113179785\"></p>\n<h4 id=\"3、示例三\"><a href=\"#3、示例三\" class=\"headerlink\" title=\"3、示例三\"></a>3、示例三</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1、声明一个二维数组，并且确定行数</span></span><br><span class=\"line\"><span class=\"comment\">//因为每一行的列数不同，这里无法直接确定列数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][]  arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>][];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2、确定每一行的列数</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[0] 的列数是1</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[1] 的列数是2</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[2] 的列数是3</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[3] 的列数是4</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[4] 的列数是5</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tarr[i] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3、确定元素的值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\tarr[i][j] = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/1562113981079.png\" alt=\"1562113981079\"></p>\n","site":{"data":{}},"cover":"https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/img/default.jpg","excerpt":"","more":"<h1 id=\"JavaSE-day04【数组】\"><a href=\"#JavaSE-day04【数组】\" class=\"headerlink\" title=\"JavaSE_day04【数组】\"></a>JavaSE_day04【数组】</h1><h2 id=\"今日内容\"><a href=\"#今日内容\" class=\"headerlink\" title=\"今日内容\"></a>今日内容</h2><ul>\n<li>数组概念</li>\n<li>数组的声明和初始化</li>\n<li>数组的索引</li>\n<li>数组的长度</li>\n<li>数组的遍历</li>\n<li>数组内存</li>\n<li>数组的相关算法</li>\n</ul>\n<h2 id=\"学习目标\"><a href=\"#学习目标\" class=\"headerlink\" title=\"学习目标\"></a>学习目标</h2><ul>\n<li><input disabled=\"\" type=\"checkbox\"> 理解数组作为容器的概念</li>\n<li><input disabled=\"\" type=\"checkbox\"> 掌握数组的声明和初始化</li>\n<li><input disabled=\"\" type=\"checkbox\"> 使用索引访问数组的元素</li>\n<li><input disabled=\"\" type=\"checkbox\"> 了解数组的内存图解</li>\n<li><input disabled=\"\" type=\"checkbox\"> 避免空指针和越界异常</li>\n<li><input disabled=\"\" type=\"checkbox\"> 掌握数组的遍历</li>\n<li><input disabled=\"\" type=\"checkbox\"> 掌握常见的数组算法</li>\n</ul>\n<h1 id=\"第四章-数组\"><a href=\"#第四章-数组\" class=\"headerlink\" title=\"第四章 数组\"></a>第四章 数组</h1><h2 id=\"4-1-容器概述\"><a href=\"#4-1-容器概述\" class=\"headerlink\" title=\"4.1 容器概述\"></a>4.1 容器概述</h2><h3 id=\"案例分析\"><a href=\"#案例分析\" class=\"headerlink\" title=\"案例分析\"></a>案例分析</h3><p>现在需要统计某公司员工的工资情况，例如计算平均工资、找到最高工资等。假设该公司有50名员工，用前面所学的知识，程序首先需要声明50个变量来分别记住每位员工的工资，然后在进行操作，这样做会显得很麻烦，而且错误率也会很高。因此我们可以使用容器进行操作。将所有的数据全部存储到一个容器中，统一操作。</p>\n<h3 id=\"容器概念\"><a href=\"#容器概念\" class=\"headerlink\" title=\"容器概念\"></a>容器概念</h3><ul>\n<li><strong>容器：</strong>是将多个数据存储到一起，每个数据称为该容器的元素。</li>\n<li><strong>生活中的容器：</strong>水杯，衣柜，教室</li>\n</ul>\n<h2 id=\"4-2-数组的概念\"><a href=\"#4-2-数组的概念\" class=\"headerlink\" title=\"4.2 数组的概念\"></a>4.2 数组的概念</h2><ul>\n<li><strong>数组概念：</strong> 数组就是用于存储数据的长度固定的容器，保证多个数据的数据类型要一致。</li>\n</ul>\n<p>百度百科中对数组的定义：</p>\n<p>所谓<strong>数组</strong>(array)，就是相同数据类型的元素按一定顺序排列的集合，就是把有限个类型相同的变量用一个名字命名，以便统一管理他们，然后用编号区分他们，这个名字称为<strong>数组名</strong>，编号称为<strong>下标或索引</strong>(index)。组成数组的各个变量称为数组的<strong>元素</strong>(element)。数组中元素的个数称为<strong>数组的长度</strong>(length)。</p>\n<p><img src=\"imgs/1561452334825.png\" alt=\"1561452334825\"></p>\n<p>数组的特点：</p>\n<p>1、数组的长度一旦确定就不能修改</p>\n<p>2、创建数组时会在内存中开辟一整块连续的空间。</p>\n<p>3、存取元素的速度快，因为可以通过[下标]，直接定位到任意一个元素。</p>\n<h2 id=\"4-3-数组的声明与初始化\"><a href=\"#4-3-数组的声明与初始化\" class=\"headerlink\" title=\"4.3 数组的声明与初始化\"></a>4.3 数组的声明与初始化</h2><p>数组的声明：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\">元素的数据类型[] 二维数组的名称;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">元素的数据类型  二维数组名[];</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式一：静态初始化\"><a href=\"#方式一：静态初始化\" class=\"headerlink\" title=\"方式一：静态初始化\"></a>方式一：静态初始化</h3><ul>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型[] 数组名 = &#123;元素<span class=\"number\">1</span>,元素<span class=\"number\">2</span>,元素<span class=\"number\">3.</span>..&#125;;<span class=\"comment\">//必须在一个语句中完成，不能分开两个语句写</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>举例：</li>\n</ul>\n<p>定义存储1，2，3，4，5整数的数组容器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//错误</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式二：静态初始化\"><a href=\"#方式二：静态初始化\" class=\"headerlink\" title=\"方式二：静态初始化\"></a>方式二：静态初始化</h3><ul>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据类型[] 数组名 = <span class=\"keyword\">new</span> 数据类型[]&#123;元素<span class=\"number\">1</span>,元素<span class=\"number\">2</span>,元素<span class=\"number\">3.</span>..&#125;;</span><br><span class=\"line\">或</span><br><span class=\"line\">数据类型[] 数组名;</span><br><span class=\"line\">数组名 = <span class=\"keyword\">new</span> 数据类型[]&#123;元素<span class=\"number\">1</span>,元素<span class=\"number\">2</span>,元素<span class=\"number\">3.</span>..&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>举例：</li>\n</ul>\n<p>定义存储1，2，3，4，5整数的数组容器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;<span class=\"comment\">//错误的，后面有&#123;&#125;指定元素列表，就不需要在[长度]指定长度。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"方式三：动态初始化\"><a href=\"#方式三：动态初始化\" class=\"headerlink\" title=\"方式三：动态初始化\"></a>方式三：动态初始化</h3><ul>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组存储的元素的数据类型[] 数组名字 = <span class=\"keyword\">new</span> 数组存储的元素的数据类型[长度];</span><br><span class=\"line\"></span><br><span class=\"line\"> 或</span><br><span class=\"line\"></span><br><span class=\"line\">数组存储的数据类型[] 数组名字;</span><br><span class=\"line\">数组名字 = <span class=\"keyword\">new</span> 数组存储的数据类型[长度];</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>数组定义格式详解：<ul>\n<li>数组存储的元素的数据类型： 创建的数组容器可以存储什么数据类型的数据。</li>\n<li>元素的类型可以是任意的Java的数据类型。例如：int, String, Student等</li>\n<li>[] : 表示数组。</li>\n<li>数组名字：为定义的数组起个变量名，满足标识符规范，可以使用名字操作数组。</li>\n<li>new：关键字，创建数组使用的关键字。因为数组本身是引用数据类型，所以要用new创建数组对象。</li>\n<li>[长度]：数组的长度，表示数组容器中可以存储多少个元素。</li>\n<li><strong>注意：数组有定长特性，长度一旦指定，不可更改。</strong><ul>\n<li>和水杯道理相同，买了一个2升的水杯，总容量就是2升，不能多也不能少。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>举例：</li>\n</ul>\n<p>定义可以存储5个整数的数组容器，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[] arr;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>];</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>思考：用这种方式初始化的数组，元素有值吗？</p>\n</blockquote>\n<h2 id=\"4-4-数组元素的访问\"><a href=\"#4-4-数组元素的访问\" class=\"headerlink\" title=\"4.4 数组元素的访问\"></a>4.4 数组元素的访问</h2><ul>\n<li><strong>索引：</strong> 每一个存储到数组的元素，都会自动的拥有一个编号，从0开始，这个自动编号称为**数组索引(index)**，可以通过数组的索引访问到数组中的元素。</li>\n<li><strong>索引范围：</strong>[0, 数组的长度-1]</li>\n<li><strong>格式：</strong></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组名[索引]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>索引访问数组中的元素：</strong><ul>\n<li>数组名[索引]=数值，为数组中的元素赋值</li>\n<li>变量=数组名[索引]，获取出数组中的元素</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义存储int类型数组，赋值元素1，2，3，4，5</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">    <span class=\"comment\">//为0索引元素赋值为6</span></span><br><span class=\"line\">    arr[<span class=\"number\">0</span>] = <span class=\"number\">6</span>;</span><br><span class=\"line\">    <span class=\"comment\">//获取数组0索引上的元素</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">    System.out.println(i);</span><br><span class=\"line\">    <span class=\"comment\">//直接输出数组0索引元素</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-5-数组的遍历\"><a href=\"#4-5-数组的遍历\" class=\"headerlink\" title=\"4.5 数组的遍历\"></a>4.5 数组的遍历</h2><ul>\n<li><strong>数组的长度属性：</strong> 每个数组都具有长度，而且是固定的，Java中赋予了数组的一个属性，可以获取到数组的长度，语句为：<code>数组名.length</code> ，属性length的执行结果是数组的长度，int类型结果。由次可以推断出，数组的最大索引值为<code>数组名.length-1</code>。</li>\n<li><strong>数组遍历：</strong> 就是将数组中的每个元素分别获取出来，就是遍历。遍历也是数组操作中的基石。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">  \t<span class=\"comment\">//打印数组的属性，输出结果是5</span></span><br><span class=\"line\">  \tSystem.out.println(<span class=\"string\">&quot;数组的长度：&quot;</span> + arr.length);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//遍历输出数组中的元素</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;数组的元素有：&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">        System.out.println(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-6-数组元素的默认值\"><a href=\"#4-6-数组元素的默认值\" class=\"headerlink\" title=\"4.6 数组元素的默认值\"></a>4.6 数组元素的默认值</h2><p>当我们使用动态初始化创建数组时：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数组存储的元素的数据类型[] 数组名字 = <span class=\"keyword\">new</span> 数组存储的元素的数据类型[长度];</span><br></pre></td></tr></table></figure>\n\n<p>此时只确定了数组的长度，那么数组的元素是什么值呢？</p>\n<p>数组的元素有默认值：</p>\n<p><img src=\"imgs/1561509460135.png\" alt=\"1561509460135\"></p>\n<h2 id=\"4-7-数组内存图\"><a href=\"#4-7-数组内存图\" class=\"headerlink\" title=\"4.7 数组内存图\"></a>4.7 数组内存图</h2><h3 id=\"4-7-1-内存概述\"><a href=\"#4-7-1-内存概述\" class=\"headerlink\" title=\"4.7.1 内存概述\"></a>4.7.1 内存概述</h3><p>内存是计算机中重要的部件之一，它是与CPU进行沟通的桥梁。其作用是用于暂时存放CPU中的运算数据，以及与硬盘等外部存储器交换的数据。只要计算机在运行中，CPU就会把需要运算的数据调到内存中进行运算，当运算完成后CPU再将结果传送出来。我们编写的程序是存放在硬盘中的，在硬盘中的程序是不会运行的，必须放进内存中才能运行，运行完毕后会清空内存。</p>\n<p>Java虚拟机要运行程序，必须要对内存进行空间的分配和管理。</p>\n<h3 id=\"4-7-2-Java虚拟机的内存划分\"><a href=\"#4-7-2-Java虚拟机的内存划分\" class=\"headerlink\" title=\"4.7.2 Java虚拟机的内存划分\"></a>4.7.2 Java虚拟机的内存划分</h3><p>为了提高运算效率，就对空间进行了不同区域的划分，因为每一片区域都有特定的处理数据方式和内存管理方式。</p>\n<p><img src=\"imgs/1561465258546.png\" alt=\"1561465258546\"></p>\n<table>\n<thead>\n<tr>\n<th>区域名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>程序计数器</td>\n<td>程序计数器是CPU中的寄存器，它包含每一个线程下一条要执行的指令的地址</td>\n</tr>\n<tr>\n<td>本地方法栈</td>\n<td>当程序中调用了native的本地方法时，本地方法执行期间的内存区域</td>\n</tr>\n<tr>\n<td>方法区</td>\n<td>存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。</td>\n</tr>\n<tr>\n<td>堆内存</td>\n<td>存储对象（包括数组对象），new来创建的，都存储在堆内存。</td>\n</tr>\n<tr>\n<td>虚拟机栈</td>\n<td>用于存储正在执行的每个Java方法的局部变量表等。局部变量表存放了编译期可知长度的各种基本数据类型、对象引用，方法执行完，自动释放。</td>\n</tr>\n</tbody></table>\n<h3 id=\"4-7-3-数组在内存中的存储\"><a href=\"#4-7-3-数组在内存中的存储\" class=\"headerlink\" title=\"4.7.3 数组在内存中的存储\"></a>4.7.3 数组在内存中的存储</h3><h4 id=\"1、一个数组内存图\"><a href=\"#1、一个数组内存图\" class=\"headerlink\" title=\"1、一个数组内存图\"></a>1、一个数组内存图</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">  \tSystem.out.println(arr);<span class=\"comment\">//[I@5f150435</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E5%9B%BE1.jpg\"></p>\n<blockquote>\n<p>思考：打印arr为什么是[I@5f150435，它是数组的地址吗？</p>\n<p>答：它不是数组的地址。</p>\n<p>问？不是说arr中存储的是数组对象的首地址吗？</p>\n<p>答：arr中存储的是数组的首地址，但是因为数组是引用数据类型，打印arr时，会自动调用arr数组对象的toString()方法，默认该方法实现的是对象类型名@该对象的hashCode()值的十六进制值。</p>\n<p>问？对象的hashCode值是否就是对象内存地址？</p>\n<p>答：不一定，因为这个和不同品牌的JVM产品的具体实现有关。例如：Oracle的OpenJDK中给出了5种实现，其中有一种是直接返回对象的内存地址，但是OpenJDK默认没有选择这种方式。</p>\n</blockquote>\n<h4 id=\"2、数组下标为什么是0开始\"><a href=\"#2、数组下标为什么是0开始\" class=\"headerlink\" title=\"2、数组下标为什么是0开始\"></a>2、数组下标为什么是0开始</h4><p>因为第一个元素距离数组首地址间隔0个单元。</p>\n<h4 id=\"3、两个数组内存图\"><a href=\"#3、两个数组内存图\" class=\"headerlink\" title=\"3、两个数组内存图\"></a>3、两个数组内存图</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr2 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">    System.out.println(arr);</span><br><span class=\"line\">    System.out.println(arr2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E5%9B%BE2.jpg\"></p>\n<h4 id=\"4、两个变量指向一个数组\"><a href=\"#4、两个变量指向一个数组\" class=\"headerlink\" title=\"4、两个变量指向一个数组\"></a>4、两个变量指向一个数组</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 定义数组，存储3个元素</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"comment\">//数组索引进行赋值</span></span><br><span class=\"line\">    arr[<span class=\"number\">0</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">1</span>] = <span class=\"number\">6</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">2</span>] = <span class=\"number\">7</span>;</span><br><span class=\"line\">    <span class=\"comment\">//输出3个索引上的元素值</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">2</span>]);</span><br><span class=\"line\">    <span class=\"comment\">//定义数组变量arr2，将arr的地址赋值给arr2</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr2 = arr;</span><br><span class=\"line\">    arr2[<span class=\"number\">1</span>] = <span class=\"number\">9</span>;</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p> <img src=\"imgs/%E6%95%B0%E7%BB%84%E5%86%85%E5%AD%98%E5%9B%BE3.jpg\"></p>\n<h2 id=\"4-8-数组的练习题\"><a href=\"#4-8-数组的练习题\" class=\"headerlink\" title=\"4.8 数组的练习题\"></a>4.8 数组的练习题</h2><p>1、练习1：用一个数组存储26个小写英文字母，并遍历显示，显示要求如：a-&gt;A</p>\n<p>2、练习2：用一个数组存储本组学员的年龄，从键盘输入，并遍历显示</p>\n<p>3、练习3：用一个数组存储本组学员的姓名，从键盘输入，并遍历显示</p>\n<p>4、练习4：用数组存储一个星期的7个英文单词，然后从键盘输入星期的值[1-7]，输出对应的英文单词</p>\n<h2 id=\"4-9-数组的常见算法\"><a href=\"#4-9-数组的常见算法\" class=\"headerlink\" title=\"4.9 数组的常见算法\"></a>4.9 数组的常见算法</h2><h3 id=\"4-9-1-数组统计：求总和、均值、统计偶数个数等\"><a href=\"#4-9-1-数组统计：求总和、均值、统计偶数个数等\" class=\"headerlink\" title=\"4.9.1 数组统计：求总和、均值、统计偶数个数等\"></a>4.9.1 数组统计：求总和、均值、统计偶数个数等</h3><p>思路：遍历数组，挨个的累加，判断每一个元素</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//求总和、均值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;<span class=\"comment\">//因为0加上任何数都不影响结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    sum += arr[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">double</span> avg = (<span class=\"keyword\">double</span>)sum/arr.length;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码2：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//求总乘积</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> result = <span class=\"number\">1</span>;<span class=\"comment\">//因为1乘以任何数都不影响结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    result *= arr[i];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码3：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//统计偶数个数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> even = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i]%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        even++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-2-数组的顺序查找\"><a href=\"#4-9-2-数组的顺序查找\" class=\"headerlink\" title=\"4.9.2  数组的顺序查找\"></a>4.9.2  数组的顺序查找</h3><p>顺序查找：挨个查看</p>\n<p>要求：对数组元素的顺序没要求</p>\n<p>顺序查找示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查找value第一次在数组中出现的index</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> value = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[i] == value)&#123;</span><br><span class=\"line\">            index = i;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(index==-<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        System.out.println(value + <span class=\"string\">&quot;不存在&quot;</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        System.out.println(value + <span class=\"string\">&quot;的下标是&quot;</span> + index);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-3-数组找最值\"><a href=\"#4-9-3-数组找最值\" class=\"headerlink\" title=\"4.9.3 数组找最值\"></a>4.9.3 数组找最值</h3><p><img src=\"imgs/1574577970893.png\" alt=\"1574577970893\"></p>\n<p>思路：</p>\n<p>（1）先假设第一个元素最大/最小</p>\n<p>（2）然后用max/min与后面的元素一一比较</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-4-数组中找最值及其下标\"><a href=\"#4-9-4-数组中找最值及其下标\" class=\"headerlink\" title=\"4.9.4 数组中找最值及其下标\"></a>4.9.4 数组中找最值及其下标</h3><p>情况一：找最值及其第一次出现的下标</p>\n<p>思路：</p>\n<p>（1）先假设第一个元素最大/最小</p>\n<p>（2）用max/min变量表示最大/小值，用max/min与后面的元素一一比较</p>\n<p>（3）用index时刻记录目前比对的最大/小的下标</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">        index = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>或</p>\n<p>思路：</p>\n<p>（1）先假设第一个元素最大/最小</p>\n<p>（2）用maxIndex时刻记录目前比对的最大/小的下标，那么arr[maxIndex]就是目前的最大值</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> maxIndex = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; arr[maxIndex])&#123;</span><br><span class=\"line\">        maxIndex = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;最大值：&quot;</span> + arr[maxIndex]);</span><br></pre></td></tr></table></figure>\n\n<p>情况二：找最值及其所有最值的下标（即可能最大值重复）</p>\n<p>思路：</p>\n<p>（1）先找最大值</p>\n<p>①假设第一个元素最大</p>\n<p>②用max与后面的元素一一比较</p>\n<p>（2）遍历数组，看哪些元素和最大值是一样的</p>\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//找最大值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr[i] &gt; max)&#123;</span><br><span class=\"line\">        max = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//遍历数组，看哪些元素和最大值是一样的</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(max == arr[i])&#123;</span><br><span class=\"line\">        System.out.print(i+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"4-9-5-冒泡排序\"><a href=\"#4-9-5-冒泡排序\" class=\"headerlink\" title=\"4.9.5 冒泡排序\"></a>4.9.5 冒泡排序</h3><p>Java中的经典算法之冒泡排序（Bubble Sort）</p>\n<p>原理：比较两个相邻的元素，将值大的元素交换至右端。</p>\n<p>思路：依次比较相邻的两个数，将小数放到前面，大数放到后面。</p>\n<p>​    即第一趟，首先比较第1个和第2个元素，将小数放到前面，大数放到后面。</p>\n<p>​            然后比较第2个和第3个元素，将小数放到前面，大数放到后面。</p>\n<p>​            如此继续，直到比较最后两个数，将小数放到前面，大数放到后面。</p>\n<p>​    重复第一趟步骤，直至全部排序完成。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：冒泡：从小到大，从左到右两两比较</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">&#123;6,3,8,2,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第一轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，6&gt;3成立，就交换，&#123;3,6,8,2,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，6&gt;8不成立，不交换&#123;3,6,8,2,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第3次：arr[2]与arr[3]比较，8&gt;2成立，就交换，&#123;3,6,2,8,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第4次：arr[3]与arr[4]比较，8&gt;9不成立，不交换&#123;3,6,2,8,9,1&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第5次：arr[4]与arr[5]比较，9&gt;1成立，就交换，&#123;3,6,2,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第一轮结果：&#123;3,6,2,8,1,9&#125;   9已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">\t第二轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，3&gt;6不成立，不交换&#123;3,6,2,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，6&gt;2成立，就交换，&#123;3,2,6,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第3次：arr[2]与arr[3]比较，6&gt;8不成立，不交换&#123;3,2,6,8,1,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第4次：arr[3]与arr[4]比较，8&gt;1成立，就交换，&#123;3,2,6,1,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第二轮结果：&#123;3,2,6,1,8,9&#125;   8已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第三轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，3&gt;2成立，就交换，&#123;2,3,6,1,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，3&gt;6不成立，不交换&#123;2,3,6,1,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t第3次：arr[2]与arr[3]比较，6&gt;1成立，就交换，&#123;2,3,1,6,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第三轮结果：&#123;2,3,1,6,8,9&#125;   6已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第四轮：</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，2&gt;3不成立，不交换&#123;2,3,1,6,8,9&#125; </span></span><br><span class=\"line\"><span class=\"comment\">\t第2次：arr[1]与arr[2]比较，3&gt;1成立，就交换，&#123;2,1,3,6,8,9&#125; </span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第四轮结果：&#123;2,1,3,6,8,9&#125;    3已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第五轮</span></span><br><span class=\"line\"><span class=\"comment\">\t第1次：arr[0]与arr[1]比较，2&gt;1成立，就交换，&#123;1,2,3,6,8,9&#125;</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t第五轮结果：&#123;1,2,3,6,8,9&#125;   2已经到达正确位置，下一轮不用在参与</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t剩下1，肯定是最小的了，不用比较了</span></span><br><span class=\"line\"><span class=\"comment\">\t</span></span><br><span class=\"line\"><span class=\"comment\">\t6个元素，比较了5轮， n个元素需要n-1轮</span></span><br><span class=\"line\"><span class=\"comment\">\t每一轮比较很多次</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<p>示例代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">8</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">1</span>&#125;;  <span class=\"comment\">//arr.length = 6</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//i=1,2,3,4,5  一共5轮</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;<span class=\"comment\">//轮数</span></span><br><span class=\"line\">\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=1，第1轮，j=0,1,2,3,4   arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=2，第2轮，j=0,1,2,3     arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=3，第3轮，j=0,1,2       arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=4，第4轮，j=0,1         arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\ti=5，第5轮，j=0           arr[j]与arr[j+1]</span></span><br><span class=\"line\"><span class=\"comment\">\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t\tj=0, j&lt;=arr.length-1-i</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;=arr.length-<span class=\"number\">1</span>-i; j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(arr[j] &gt; arr[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">int</span> temp = arr[j];</span><br><span class=\"line\">\t\t\t\tarr[j] = arr[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\tarr[j+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//结果</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\tSystem.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>示例代码：从大到小，从右到左</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span>[] arr = &#123;<span class=\"string\">&#x27;h&#x27;</span>,<span class=\"string\">&#x27;e&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;j&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;v&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;arr.length; i++)&#123;<span class=\"comment\">//外循环的次数 = 轮数 = 数组的长度-1</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    第1轮，i=1，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[1]与arr[0]</span></span><br><span class=\"line\"><span class=\"comment\">    第2轮，i=2，从右到左两两比较，arr[8]与arr[7]，arr[7]与arr[6]....arr[2]与arr[1]</span></span><br><span class=\"line\"><span class=\"comment\">    ...</span></span><br><span class=\"line\"><span class=\"comment\">    第8轮，i=8，从右到左两两比较，arr[8]与arr[7]</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t   arr[j]与arr[j-1]</span></span><br><span class=\"line\"><span class=\"comment\">    找两个关键点：（1）j的起始值：8（2）找j的终止值，依次是1,2,3,。。。8，得出j&gt;=i</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">8</span>; j&gt;=i; j--)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//从大到小，后面的元素 &gt; 前面的元素，就交换</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[j]&gt;arr[j-<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = arr[j];</span><br><span class=\"line\">            arr[j] = arr[j-<span class=\"number\">1</span>];</span><br><span class=\"line\">            arr[j-<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;\t</span><br><span class=\"line\">\t\t</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-9-6-练习\"><a href=\"#4-9-6-练习\" class=\"headerlink\" title=\"4.9.6 练习\"></a>4.9.6 练习</h3><p>1、随机产生10个[0,100)之间整数，统计3的倍数的个数</p>\n<p>2、随机产生10个[0,150)之间整数，统计既是3又是5，但不是7的倍数的个数</p>\n<p>3、随机产生10个[0,100)之间整数，统计素数的个数</p>\n<p>4、已知本组学员有：String[] names = {“张三”,”李四”,”王五”,”赵六”,”钱七”};，从键盘输入一个学生姓名，查看他是否是本组学员</p>\n<p>5、声明两个数组，一个存储本组学员姓名，一个存储本组学员成绩，找出最高分同学的姓名</p>\n<h2 id=\"4-10-二维数组\"><a href=\"#4-10-二维数组\" class=\"headerlink\" title=\"4.10 二维数组\"></a>4.10 二维数组</h2><ul>\n<li><p>二维数组：本质上就是元素为一维数组的一个数组。</p>\n</li>\n<li><p>二维数组的标记：[][]</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr; <span class=\"comment\">//arr是一个二维数组，可以看成元素是int[]一维数组类型的一个数组</span></span><br></pre></td></tr></table></figure>\n\n<p>二维数组也可以看成一个二维表，行*列组成的二维表，只不过这个二维表，每一行的列数还可能不同。但是每一个单元格中的元素的数据类型是一致的，例如：都是int，都是String等</p>\n<p><img src=\"imgs/1561524724397.png\" alt=\"1561524724397\"></p>\n<h3 id=\"4-10-1-二维数组的声明与初始化\"><a href=\"#4-10-1-二维数组的声明与初始化\" class=\"headerlink\" title=\"4.10.1 二维数组的声明与初始化\"></a>4.10.1 二维数组的声明与初始化</h3><p>语法格式：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//推荐</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组的名称;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">元素的数据类型  二维数组名[][];</span><br><span class=\"line\"><span class=\"comment\">//不推荐</span></span><br><span class=\"line\">元素的数据类型[]  二维数组名[];</span><br></pre></td></tr></table></figure>\n\n<p>面试：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int[] x, y[];</span><br><span class=\"line\">//x是一维数组，y是二维数组</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1、静态初始化\"><a href=\"#1、静态初始化\" class=\"headerlink\" title=\"1、静态初始化\"></a>1、静态初始化</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">元素的数据类型[][] 二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[][]&#123;</span><br><span class=\"line\">\t\t\t&#123;元素<span class=\"number\">1</span>，元素<span class=\"number\">2</span>，元素<span class=\"number\">3</span> 。。。&#125;, </span><br><span class=\"line\">\t\t\t&#123;第二行的值列表&#125;,</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t&#123;第n行的值列表&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">元素的数据类型[][] 二维数组名;</span><br><span class=\"line\">二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[][]&#123;</span><br><span class=\"line\">\t\t\t&#123;元素<span class=\"number\">1</span>，元素<span class=\"number\">2</span>，元素<span class=\"number\">3</span> 。。。&#125;, </span><br><span class=\"line\">\t\t\t&#123;第二行的值列表&#125;,</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t&#123;第n行的值列表&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"comment\">//以下格式要求声明与静态初始化必须一起完成</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组的名称 = &#123;</span><br><span class=\"line\">\t\t\t&#123;元素<span class=\"number\">1</span>，元素<span class=\"number\">2</span>，元素<span class=\"number\">3</span> 。。。&#125;, </span><br><span class=\"line\">\t\t\t&#123;第二行的值列表&#125;,</span><br><span class=\"line\">\t\t\t...</span><br><span class=\"line\">\t\t\t&#123;第n行的值列表&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>如果是静态初始化，右边new 数据类型[][]中不能写数字，因为行数和列数，由{}的元素个数决定</strong></p>\n</blockquote>\n<p>举例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[][]&#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\">arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][<span class=\"number\">3</span>]&#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;<span class=\"comment\">//错误，静态初始化右边new 数据类型[]中不能写数字</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[][]&#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>&#125;,&#123;<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;<span class=\"comment\">//声明与初始化必须在一句完成</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Array2Demo1</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//定义数组</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;,&#123;<span class=\"number\">6</span>&#125;&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(arr);</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">2</span>]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//1</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">1</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//4</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">2</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//6</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//2</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">1</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//5</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//越界</span></span><br><span class=\"line\">\t\tSystem.out.println(arr[<span class=\"number\">2</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//错误</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、动态初始化（规则二维表：每一行的列数是相同的）\"><a href=\"#2、动态初始化（规则二维表：每一行的列数是相同的）\" class=\"headerlink\" title=\"2、动态初始化（规则二维表：每一行的列数是相同的）\"></a>2、动态初始化（规则二维表：每一行的列数是相同的）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//（1）确定行数和列数</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[m][n];</span><br><span class=\"line\">\tm:表示这个二维数组有多少个一维数组。或者说一共二维表有几行</span><br><span class=\"line\">\tn:表示每一个一维数组的元素有多少个。或者说每一行共有一个单元格</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//此时创建完数组，行数、列数确定，而且元素也都有默认值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//（2）再为元素赋新值</span></span><br><span class=\"line\">二维数组名[行下标][列下标] = 值;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义一个二维数组</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//定义了一个二维数组arr</span></span><br><span class=\"line\">    <span class=\"comment\">//这个二维数组有3个一维数组的元素</span></span><br><span class=\"line\">    <span class=\"comment\">//每一个一维数组有2个元素</span></span><br><span class=\"line\">    <span class=\"comment\">//输出二维数组名称</span></span><br><span class=\"line\">    System.out.println(arr); <span class=\"comment\">//地址值\t[[I@175078b</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//输出二维数组的第一个元素一维数组的名称</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>]); <span class=\"comment\">//地址值\t[I@42552c</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">1</span>]); <span class=\"comment\">//地址值\t[I@e5bbd6</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">2</span>]); <span class=\"comment\">//地址值\t[I@8ee016</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//输出二维数组的元素</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">&#125;\t </span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、动态初始化（不规则：每一行的列数可能不一样）\"><a href=\"#3、动态初始化（不规则：每一行的列数可能不一样）\" class=\"headerlink\" title=\"3、动态初始化（不规则：每一行的列数可能不一样）\"></a>3、动态初始化（不规则：每一行的列数可能不一样）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//（1）先确定总行数</span></span><br><span class=\"line\">元素的数据类型[][] 二维数组名 = <span class=\"keyword\">new</span> 元素的数据类型[总行数][];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//此时只是确定了总行数，每一行里面现在是null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//（2）再确定每一行的列数，创建每一行的一维数组</span></span><br><span class=\"line\">二维数组名[行下标] = <span class=\"keyword\">new</span> 元素的数据类型[该行的总列数];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//此时已经new完的行的元素就有默认值了，没有new的行还是null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//(3)再为元素赋值</span></span><br><span class=\"line\">二维数组名[行下标][列下标] = 值;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][];</span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(arr);\t<span class=\"comment\">//[[I@175078b</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(arr[<span class=\"number\">1</span>][<span class=\"number\">0</span>]);<span class=\"comment\">//NullPointerException</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>]); <span class=\"comment\">//null</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">1</span>]); <span class=\"comment\">//null</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">2</span>]); <span class=\"comment\">//null</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//动态的为每一个一维数组分配空间</span></span><br><span class=\"line\">\tarr[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">\tarr[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>];</span><br><span class=\"line\">\tarr[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>]); <span class=\"comment\">//[I@42552c</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">1</span>]); <span class=\"comment\">//[I@e5bbd6</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">2</span>]); <span class=\"comment\">//[I@8ee016</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">1</span>]); <span class=\"comment\">//0</span></span><br><span class=\"line\">\t<span class=\"comment\">//ArrayIndexOutOfBoundsException</span></span><br><span class=\"line\">\t<span class=\"comment\">//System.out.println(arr[0][2]); //错误</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tarr[<span class=\"number\">1</span>][<span class=\"number\">0</span>] = <span class=\"number\">100</span>;</span><br><span class=\"line\">\tarr[<span class=\"number\">1</span>][<span class=\"number\">2</span>] = <span class=\"number\">200</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-10-2-二维数组的相关名称及其表示方式\"><a href=\"#4-10-2-二维数组的相关名称及其表示方式\" class=\"headerlink\" title=\"4.10.2 二维数组的相关名称及其表示方式\"></a>4.10.2 二维数组的相关名称及其表示方式</h3><p>（1）二维数组的长度/行数： </p>\n<p>​    二维数组名.length</p>\n<p>（2）二维数组的某一行：</p>\n<p>​    二维数组名[行下标]</p>\n<p>​    行下标的范围：[0, 二维数组名.length-1]</p>\n<p>（3）某一行的列数：</p>\n<p>​    二维数组名[行下标].length</p>\n<p>​       因为二维数组的每一行是一个一维数组</p>\n<p>（4）某一个元素</p>\n<p>​    二维数组名[行下标][列下标]</p>\n<h3 id=\"4-10-3-二维数组的遍历\"><a href=\"#4-10-3-二维数组的遍历\" class=\"headerlink\" title=\"4.10.3  二维数组的遍历\"></a>4.10.3  二维数组的遍历</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;二维数组名.length; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;二维数组名[i].length; j++)&#123;</span><br><span class=\"line\">        System.out.print(二维数组名[i][j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-10-4-数组操作的常见异常\"><a href=\"#4-10-4-数组操作的常见异常\" class=\"headerlink\" title=\"4.10.4 数组操作的常见异常\"></a>4.10.4 数组操作的常见异常</h3><h4 id=\"1-数组越界异常\"><a href=\"#1-数组越界异常\" class=\"headerlink\" title=\"1 数组越界异常\"></a>1 数组越界异常</h4><p>观察一下代码，运行后会出现什么结果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">    System.out.println(arr[<span class=\"number\">3</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>创建数组，赋值3个元素，数组的索引就是0，1，2，没有3索引，因此我们不能访问数组中不存在的索引，程序运行后，将会抛出 <code>ArrayIndexOutOfBoundsException</code>  数组越界异常。在开发中，数组的越界异常是<strong>不能出现</strong>的，一旦出现了，就必须要修改我们编写的代码。</p>\n<p><img src=\"imgs/%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E5%BC%82%E5%B8%B8.jpg\"></p>\n<h4 id=\"2-数组空指针异常\"><a href=\"#2-数组空指针异常\" class=\"headerlink\" title=\"2 数组空指针异常\"></a>2 数组空指针异常</h4><p>观察一下代码，运行后会出现什么结果。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">3</span>][];</span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>]);<span class=\"comment\">//NullPointerException</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<p>因为此时数组的每一行还未分配具体存储元素的空间，此时arr[0]是null，此时访问arr[0][0]会抛出<code>NullPointerException</code> 空指针异常。</p>\n<p><img src=\"imgs/%E7%A9%BA%E6%8C%87%E9%92%88%E5%BC%82%E5%B8%B8.jpg\"></p>\n<p><strong>空指针异常在内存图中的表现</strong></p>\n<p><img src=\"imgs/1572338767825.png\" alt=\"1572338767825\"></p>\n<h3 id=\"4-10-5-二维数组练习\"><a href=\"#4-10-5-二维数组练习\" class=\"headerlink\" title=\"4.10.5 二维数组练习\"></a>4.10.5 二维数组练习</h3><h4 id=\"1、练习1\"><a href=\"#1、练习1\" class=\"headerlink\" title=\"1、练习1\"></a>1、练习1</h4><p>1、请使用二维数组存储如下数据，并遍历显示</p>\n<p> 1</p>\n<p> 2 2</p>\n<p> 3 3 3</p>\n<p> 4 4 4 4</p>\n<p> 5 5 5 5 5</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明一个二维数组，并且确定行数</span></span><br><span class=\"line\">\t<span class=\"comment\">//因为每一行的列数不同，这里无法直接确定列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][]  arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>][];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//2、确定每一行的列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[0] 的列数是1</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[1] 的列数是2</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[2] 的列数是3</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[3] 的列数是4</span></span><br><span class=\"line\"><span class=\"comment\">\t\tarr[4] 的列数是5</span></span><br><span class=\"line\"><span class=\"comment\">\t\t*/</span></span><br><span class=\"line\">\t\tarr[i] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//3、确定元素的值</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tarr[i][j] = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//4、遍历显示</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明一个二维数组，并且初始化</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span>[][] arr = &#123;</span><br><span class=\"line\">           &#123;<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>&#125;,</span><br><span class=\"line\">           &#123;<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">       &#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//2、遍历显示</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明一个二维数组，并且确定行数</span></span><br><span class=\"line\">\t<span class=\"comment\">//因为每一行的列数不同，这里无法直接确定列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][]  arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>][];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//2、确定每一行的列数</span></span><br><span class=\"line\">\t\tarr[i] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">//3、确定元素的值</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tarr[i][j] = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2、练习2\"><a href=\"#2、练习2\" class=\"headerlink\" title=\"2、练习2\"></a>2、练习2</h4><p>2、请使用二维数组存储如下数据，并遍历显示</p>\n<p> 1 1 1 1 1</p>\n<p> 2 2 2 2 2</p>\n<p> 3 3 3 3 3</p>\n<p> 4 4 4 4 4</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span>[][] arr = &#123;</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">\t\t\t&#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>&#125;</span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.print(arr[i][j]+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//1、声明二维数组，并确定行数和列数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">4</span>][<span class=\"number\">5</span>];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//2、确定元素的值</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">\t\t\tarr[i][j] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//3、遍历显示</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(arr[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、练习3\"><a href=\"#3、练习3\" class=\"headerlink\" title=\"3、练习3\"></a>3、练习3</h4><p>3、请使用二维数组存储如下数据，并遍历显示</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String[][] employees = &#123;</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;段誉&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;3000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;令狐冲&quot;</span>, <span class=\"string\">&quot;32&quot;</span>, <span class=\"string\">&quot;18000&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;3&quot;</span>, <span class=\"string\">&quot;任我行&quot;</span>, <span class=\"string\">&quot;23&quot;</span>, <span class=\"string\">&quot;7000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;4&quot;</span>, <span class=\"string\">&quot;张三丰&quot;</span>, <span class=\"string\">&quot;24&quot;</span>, <span class=\"string\">&quot;7300&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;5&quot;</span>, <span class=\"string\">&quot;周芷若&quot;</span>, <span class=\"string\">&quot;28&quot;</span>, <span class=\"string\">&quot;10000&quot;</span>, <span class=\"string\">&quot;5000&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;6&quot;</span>, <span class=\"string\">&quot;赵敏&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;6800&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;7&quot;</span>, <span class=\"string\">&quot;张无忌&quot;</span>, <span class=\"string\">&quot;29&quot;</span>, <span class=\"string\">&quot;10800&quot;</span>,<span class=\"string\">&quot;5200&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;韦小宝&quot;</span>, <span class=\"string\">&quot;30&quot;</span>, <span class=\"string\">&quot;19800&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2500&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;9&quot;</span>, <span class=\"string\">&quot;杨过&quot;</span>, <span class=\"string\">&quot;26&quot;</span>, <span class=\"string\">&quot;9800&quot;</span>, <span class=\"string\">&quot;5500&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;小龙女&quot;</span>, <span class=\"string\">&quot;21&quot;</span>, <span class=\"string\">&quot;6600&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;郭靖&quot;</span>, <span class=\"string\">&quot;25&quot;</span>, <span class=\"string\">&quot;7100&quot;</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;黄蓉&quot;</span>, <span class=\"string\">&quot;27&quot;</span>, <span class=\"string\">&quot;9600&quot;</span>, <span class=\"string\">&quot;4800&quot;</span>&#125;</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>其中”10”代表普通职员，”11”代表程序员，”12”代表设计师，”13”代表架构师</p>\n<p><img src=\"imgs/1561529559251.png\" alt=\"1561529559251\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\tString[][] employees = &#123;</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;1&quot;</span>, <span class=\"string\">&quot;段誉&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;3000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;2&quot;</span>, <span class=\"string\">&quot;令狐冲&quot;</span>, <span class=\"string\">&quot;32&quot;</span>, <span class=\"string\">&quot;18000&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;3&quot;</span>, <span class=\"string\">&quot;任我行&quot;</span>, <span class=\"string\">&quot;23&quot;</span>, <span class=\"string\">&quot;7000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;4&quot;</span>, <span class=\"string\">&quot;张三丰&quot;</span>, <span class=\"string\">&quot;24&quot;</span>, <span class=\"string\">&quot;7300&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;5&quot;</span>, <span class=\"string\">&quot;周芷若&quot;</span>, <span class=\"string\">&quot;28&quot;</span>, <span class=\"string\">&quot;10000&quot;</span>, <span class=\"string\">&quot;5000&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;6&quot;</span>, <span class=\"string\">&quot;赵敏&quot;</span>, <span class=\"string\">&quot;22&quot;</span>, <span class=\"string\">&quot;6800&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;7&quot;</span>, <span class=\"string\">&quot;张无忌&quot;</span>, <span class=\"string\">&quot;29&quot;</span>, <span class=\"string\">&quot;10800&quot;</span>,<span class=\"string\">&quot;5200&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;13&quot;</span>, <span class=\"string\">&quot;8&quot;</span>, <span class=\"string\">&quot;韦小宝&quot;</span>, <span class=\"string\">&quot;30&quot;</span>, <span class=\"string\">&quot;19800&quot;</span>, <span class=\"string\">&quot;15000&quot;</span>, <span class=\"string\">&quot;2500&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;9&quot;</span>, <span class=\"string\">&quot;杨过&quot;</span>, <span class=\"string\">&quot;26&quot;</span>, <span class=\"string\">&quot;9800&quot;</span>, <span class=\"string\">&quot;5500&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;10&quot;</span>, <span class=\"string\">&quot;小龙女&quot;</span>, <span class=\"string\">&quot;21&quot;</span>, <span class=\"string\">&quot;6600&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;11&quot;</span>, <span class=\"string\">&quot;郭靖&quot;</span>, <span class=\"string\">&quot;25&quot;</span>, <span class=\"string\">&quot;7100&quot;</span>&#125;,</span><br><span class=\"line\">\t        &#123;<span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;12&quot;</span>, <span class=\"string\">&quot;黄蓉&quot;</span>, <span class=\"string\">&quot;27&quot;</span>, <span class=\"string\">&quot;9600&quot;</span>, <span class=\"string\">&quot;4800&quot;</span>&#125;</span><br><span class=\"line\">\t    &#125;;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot;员工类型\\t编号\\t姓名\\t年龄\\t薪资\\t奖金\\t股票\\t&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; employees.length; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">switch</span>(employees[i][<span class=\"number\">0</span>])&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;10&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;普通职员&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;11&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;程序员&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;12&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;设计师&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"string\">&quot;13&quot;</span>:</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;架构师&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; employees[i].length; j++) &#123;</span><br><span class=\"line\">\t\t\tSystem.out.print(<span class=\"string\">&quot;\\t&quot;</span> + employees[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-10-6-二维数组的内存图分析\"><a href=\"#4-10-6-二维数组的内存图分析\" class=\"headerlink\" title=\"4.10.6 二维数组的内存图分析\"></a>4.10.6 二维数组的内存图分析</h3><h4 id=\"1、示例一\"><a href=\"#1、示例一\" class=\"headerlink\" title=\"1、示例一\"></a>1、示例一</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;</span><br><span class=\"line\">    &#123;<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/1562112672215.png\" alt=\"1562112672215\"></p>\n<h4 id=\"2、示例二\"><a href=\"#2、示例二\" class=\"headerlink\" title=\"2、示例二\"></a>2、示例二</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1、声明二维数组，并确定行数和列数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">4</span>][<span class=\"number\">5</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2、确定元素的值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">\t\tarr[i][j] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/1562113179785.png\" alt=\"1562113179785\"></p>\n<h4 id=\"3、示例三\"><a href=\"#3、示例三\" class=\"headerlink\" title=\"3、示例三\"></a>3、示例三</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1、声明一个二维数组，并且确定行数</span></span><br><span class=\"line\"><span class=\"comment\">//因为每一行的列数不同，这里无法直接确定列数</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>[][]  arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">5</span>][];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2、确定每一行的列数</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[0] 的列数是1</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[1] 的列数是2</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[2] 的列数是3</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[3] 的列数是4</span></span><br><span class=\"line\"><span class=\"comment\">\tarr[4] 的列数是5</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\tarr[i] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3、确定元素的值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>; j&lt;arr[i].length; j++)&#123;</span><br><span class=\"line\">\t\tarr[i][j] = i+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"imgs/1562113981079.png\" alt=\"1562113981079\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cku8257j20001q8v7hph936y3","category_id":"cku8257je0004q8v7avfnh9f0","_id":"cku8257jk0007q8v7bcnx1el4"},{"post_id":"cku8257kb000aq8v75ncd3c6n","category_id":"cku8257je0004q8v7avfnh9f0","_id":"cku8257kd000cq8v7a1nv2wed"}],"PostTag":[{"post_id":"cku8257j20001q8v7hph936y3","tag_id":"cku8257jg0005q8v72vzi0jm9","_id":"cku8257jk0008q8v72mqx7pcv"},{"post_id":"cku8257j20001q8v7hph936y3","tag_id":"cku8257ji0006q8v7fjagdmsc","_id":"cku8257jk0009q8v768z3h2p7"},{"post_id":"cku8257kb000aq8v75ncd3c6n","tag_id":"cku8257jg0005q8v72vzi0jm9","_id":"cku8257ke000dq8v72skd58vt"},{"post_id":"cku8257kb000aq8v75ncd3c6n","tag_id":"cku8257kd000bq8v7gnie5x9t","_id":"cku8257ke000eq8v7dmtuf501"}],"Tag":[{"name":"Java","_id":"cku8257jg0005q8v72vzi0jm9"},{"name":"课后练习","_id":"cku8257ji0006q8v7fjagdmsc"},{"name":"文档","_id":"cku8257kd000bq8v7gnie5x9t"}]}}
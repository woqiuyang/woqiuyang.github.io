{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/hexo-theme-butterfly-dev/source/img/1.png","path":"img/1.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/10.png","path":"img/10.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/2.png","path":"img/2.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/4.png","path":"img/4.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/3.png","path":"img/3.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/5.png","path":"img/5.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/6.png","path":"img/6.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/7.png","path":"img/7.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/8.png","path":"img/8.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/9.png","path":"img/9.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/img/logo2.png","path":"img/logo2.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-butterfly-dev/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/categories/index.md","hash":"a40d694c97b15f3f15f56b313446c87119a0b95b","modified":1660320809692},{"_id":"source/tags/index.md","hash":"780b28b644cc58cd10409a64339c5407aa5f70ce","modified":1660320809692},{"_id":"source/_posts/config/Idea忽略配置文件.md","hash":"786050d4eb363d87d45e1d7011f05e3c2908afb2","modified":1660320809688},{"_id":"source/_posts/code/1.md","hash":"fc179dac3b16a259a35b256e8221b466e5c56a7d","modified":1660320809688},{"_id":"source/_posts/config/Picgo配置.md","hash":"b43ef8cd44962bc8c6abea48d7083a441e5c3752","modified":1660374928697},{"_id":"source/_posts/config/maven.md","hash":"937d56f6042b7efcc04e3c10564699b2ec16facc","modified":1660320809688},{"_id":"source/_posts/project/1.mvvm原理.md","hash":"099c546af3ea30aee1b52ff8577a687d25be3232","modified":1660320809690},{"_id":"source/_posts/note/FastJson.md","hash":"c59f5157553bb8d99cbcb39b9a1dffafe069ddd2","modified":1660375212409},{"_id":"source/_posts/note/CompletableFuture.md","hash":"754a247277a2978f4e6a336d514255bda3aae59c","modified":1660320809689},{"_id":"source/_posts/note/MySql数据库单表查询.md","hash":"910ab249bb1028b646a88121e02f7036b7209fe2","modified":1660320809689},{"_id":"source/_posts/note/多线程.md","hash":"64dc4baf6116ee965269923ca2f501fa809a4404","modified":1660376991073},{"_id":"source/_posts/note/开发规范.md","hash":"839312937ed513ac58153ce151c9573645a95e36","modified":1660376995146},{"_id":"source/_posts/note/待学清单.md","hash":"237524347d2478be4161e78967a8fb3895b63493","modified":1660377012452},{"_id":"source/_posts/note/跨域请求.md","hash":"1b08893f5025ba51d9cfe4e8aad3c457e339cf3b","modified":1660377012444},{"_id":"source/_posts/work/开发常用网址.md","hash":"e57e64ecbe4aaada06f7edc2b5afbc050334d816","modified":1660377848554},{"_id":"source/_posts/pulgin/IDEA暂存文件.md","hash":"b37a0d0088eda00752cba6ffaf99f76391c5310c","modified":1660320809691},{"_id":"source/_posts/pulgin/GenerateAllSetter Postfix Completion.md","hash":"b2cec3b858715f2347ccba889f0c1075c470b25b","modified":1660320809691},{"_id":"source/_posts/task/绩效考核系统.md","hash":"168e7f81c5d5f8cc2e7bba664efc76a377d28618","modified":1660375253807},{"_id":"source/_posts/pulgin/MyBatisCodeHelper-Pro.md","hash":"f5e6e3ebb888f9aff44a3027f658185adf417ff3","modified":1660320809691},{"_id":"themes/hexo-theme-butterfly-dev/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1660320809693},{"_id":"themes/hexo-theme-butterfly-dev/README.md","hash":"2555c3e418157a0fda35d3deaf029f12e5a12f12","modified":1660320809693},{"_id":"themes/hexo-theme-butterfly-dev/README_CN.md","hash":"84fa5880f5358abe919eb295aad3cfd17b69b631","modified":1660320809694},{"_id":"themes/hexo-theme-butterfly-dev/_config.yml","hash":"3f772d2af2680da3a9252021b9de20a26dd63f8e","modified":1660320809694},{"_id":"themes/hexo-theme-butterfly-dev/package.json","hash":"ff4e6e90badea36f89e79a3c7a25e67dcdf36e32","modified":1660320809712},{"_id":"themes/hexo-theme-butterfly-dev/.github/stale.yml","hash":"7a131b8aa4936fbcedea3517299e1cdc1bcbcaab","modified":1660320809693},{"_id":"themes/hexo-theme-butterfly-dev/languages/en.yml","hash":"69ed4d7aa63a26afd539321784d27494fbebffe8","modified":1660320809694},{"_id":"themes/hexo-theme-butterfly-dev/languages/zh-CN.yml","hash":"813eb75fbf274b26e2a0c0c75f359f810ad5eeff","modified":1660320809695},{"_id":"themes/hexo-theme-butterfly-dev/languages/default.yml","hash":"54a412ace93549f02f8e44fcf3e1cacb161a64db","modified":1660320809694},{"_id":"themes/hexo-theme-butterfly-dev/languages/zh-TW.yml","hash":"c9675ad7721dd20c9f7731438181a891b43553e6","modified":1660320809695},{"_id":"themes/hexo-theme-butterfly-dev/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1660320809695},{"_id":"themes/hexo-theme-butterfly-dev/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1660320809695},{"_id":"themes/hexo-theme-butterfly-dev/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1660320809711},{"_id":"themes/hexo-theme-butterfly-dev/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1660320809711},{"_id":"themes/hexo-theme-butterfly-dev/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1660320809711},{"_id":"themes/hexo-theme-butterfly-dev/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1660320809712},{"_id":"themes/hexo-theme-butterfly-dev/.github/ISSUE_TEMPLATE/feature_request.md","hash":"205a69ba038cf76affcdc1f39d88a8cb8079fc12","modified":1660320809693},{"_id":"themes/hexo-theme-butterfly-dev/.github/ISSUE_TEMPLATE/bug_report.md","hash":"0b7979a908ebe8c350d73b6731f0be3e29d401c2","modified":1660320809692},{"_id":"themes/hexo-theme-butterfly-dev/.github/ISSUE_TEMPLATE/custom.md","hash":"b41123ce5f0ccfa9e06a68b9f3cb59ba040a049a","modified":1660320809693},{"_id":"themes/hexo-theme-butterfly-dev/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1660320809693},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/additional-js.pug","hash":"8459729db2978bebd7f3668f6dc00a5bb100e633","modified":1660320809696},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1660320809696},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head.pug","hash":"687461a9422d1eb4d4b5a619854c79e5acc30fd7","modified":1660320809696},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1660320809695},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/layout.pug","hash":"f2e1d8a05d2e409c4804f67a98f5f59f527d6627","modified":1660320809698},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1660320809700},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1660320809701},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/sidebar.pug","hash":"2cf68619af17ece9acea71aa2cb06737097890a5","modified":1660320809701},{"_id":"themes/hexo-theme-butterfly-dev/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1660320809712},{"_id":"themes/hexo-theme-butterfly-dev/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1660320809713},{"_id":"themes/hexo-theme-butterfly-dev/scripts/events/config.js","hash":"e959cd313fc20c62fe23f0a7cba3d350d6131d66","modified":1660320809712},{"_id":"themes/hexo-theme-butterfly-dev/scripts/events/init.js","hash":"b321a97420082101a4d41e6e571db1a166475e06","modified":1660320809712},{"_id":"themes/hexo-theme-butterfly-dev/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1660320809713},{"_id":"themes/hexo-theme-butterfly-dev/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1660320809713},{"_id":"themes/hexo-theme-butterfly-dev/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1660320809713},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1660320809714},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1660320809714},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1660320809715},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1660320809715},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1660320809715},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1660320809715},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1660320809716},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1660320809715},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1660320809715},{"_id":"themes/hexo-theme-butterfly-dev/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1660320809716},{"_id":"themes/hexo-theme-butterfly-dev/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1660320809713},{"_id":"themes/hexo-theme-butterfly-dev/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1660320809713},{"_id":"themes/hexo-theme-butterfly-dev/scripts/helpers/page.js","hash":"384de3c04809ec5fa996e8aa0628f770cd4bff3e","modified":1660320809714},{"_id":"themes/hexo-theme-butterfly-dev/scripts/helpers/inject_head_js.js","hash":"22a2c69b3e68b0e3f80decfd4a2b9c9cc213ff5c","modified":1660320809714},{"_id":"themes/hexo-theme-butterfly-dev/scripts/helpers/related_post.js","hash":"26dd1900e68a3e10a5cf3f3484a93139a0f1340e","modified":1660320809714},{"_id":"themes/hexo-theme-butterfly-dev/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1660320809728},{"_id":"themes/hexo-theme-butterfly-dev/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1660320809733},{"_id":"themes/hexo-theme-butterfly-dev/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1660320809732},{"_id":"themes/hexo-theme-butterfly-dev/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1660320809724},{"_id":"themes/hexo-theme-butterfly-dev/source/js/main.js","hash":"a2c1c55b5b8ec9a83cf6242ebc9ea9be95e1f0c1","modified":1660320809734},{"_id":"themes/hexo-theme-butterfly-dev/source/css/var.styl","hash":"584ef7b18d5e677eb2e62f9b139097d3b714a993","modified":1660320809724},{"_id":"themes/hexo-theme-butterfly-dev/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1660320809735},{"_id":"themes/hexo-theme-butterfly-dev/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1660320809735},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1660320809696},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1660320809696},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1660320809697},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/config.pug","hash":"b8e3e07b0e8f3cf25af9550c6361725a05045b92","modified":1660320809696},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1660320809697},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1660320809697},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1660320809697},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1660320809697},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1660320809697},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/header/index.pug","hash":"3a2797d2744607ba6cdb5a02853851957c0f7e29","modified":1660320809698},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1660320809698},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1660320809698},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1660320809698},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/header/post-info.pug","hash":"3b0b2053fe9f08cbc21b3baa53163adc2f76c19a","modified":1660320809698},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1660320809699},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1660320809699},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1660320809699},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/mixins/post-ui.pug","hash":"9c8e65939d048a579ea08d063c0f98550376f536","modified":1660320809699},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1660320809700},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1660320809699},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/page/flink.pug","hash":"e2eba0fcb8332cb333b2aff9c76664e40e2e1974","modified":1660320809700},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1660320809700},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/post/post-copyright.pug","hash":"6ec54b77e3a90e148e66e317e5bb6c89624fddca","modified":1660320809700},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1660320809700},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1660320809709},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1660320809709},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1660320809709},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_author.pug","hash":"935dde9cf4c1fef0214dbb9935ecb71805735be0","modified":1660320809709},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1660320809710},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1660320809710},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1660320809710},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1660320809710},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1660320809710},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1660320809710},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1660320809711},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1660320809711},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1660320809711},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/aplayer.pug","hash":"bee06b3f01fa1f0d8fa08c154234b452da425101","modified":1660320809701},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/effect.pug","hash":"4c3da5a89b4e6fd3ab527f5c6d27790359d57f71","modified":1660320809705},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/pangu.pug","hash":"d06dafe7faf3a2e328ef62f26166a51ffe7a5579","modified":1660320809707},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/pjax.pug","hash":"61a220bf134201bdf49430b578305191421c547c","modified":1660320809707},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/prismjs.pug","hash":"2448b243ded58aa1d5fc22fd115e6d06b636f9fd","modified":1660320809708},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/subtitle.pug","hash":"311d883dede2a6838bf24ba9e4b3f69e62d5b3f1","modified":1660320809709},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_global/function.styl","hash":"d35d156b06f4da25a048872f1cfc35ad49092515","modified":1660320809716},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1660320809716},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/aside.styl","hash":"b62d41e079e45146f0019694156049c5f1be040a","modified":1660320809718},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1660320809718},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1660320809718},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1660320809719},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/head.styl","hash":"f3aac52defb3497079a313e8c63ac2f7ee24dfbe","modified":1660320809719},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/loading.styl","hash":"844858ae87c7278996ce484c6b456db354c48764","modified":1660320809719},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1660320809719},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1660320809719},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/post.styl","hash":"35c7fa4e18cefe01b62e0caedccbdc0c26b3546c","modified":1660320809719},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/sidebar.styl","hash":"4258fa2e590aeea704660008aed7f0362fac72d4","modified":1660320809720},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1660320809720},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/third-party.styl","hash":"988a947f80c218d8c2279c9975f46d0c2a3d0b6e","modified":1660320809720},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1660320809720},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1660320809717},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1660320809718},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_search/index.styl","hash":"f9bee6cac49de1171076560acf6a6eec96647c56","modified":1660320809722},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_search/algolia.styl","hash":"f84268708a9ea3c417426bf194bdfea9f7374628","modified":1660320809722},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_search/local-search.styl","hash":"107b9e586b12d1fe7bb5b6e53fcc8e31516ab3ba","modified":1660320809722},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1660320809723},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1660320809723},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1660320809723},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1660320809723},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1660320809723},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1660320809723},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/note.styl","hash":"076cd87805207c9b5612ec9771f6994287f4c169","modified":1660320809723},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1660320809724},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1660320809724},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1660320809721},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1660320809721},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1660320809721},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1660320809721},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1660320809721},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_page/homepage.styl","hash":"c42b872df237726483d93d6124b8751d4f64cf86","modified":1660320809722},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1660320809722},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_mode/darkmode.styl","hash":"0bcd07ffbd2a86a1b24eaefabd7e278034b14ee2","modified":1660320809720},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1660320809720},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1660320809724},{"_id":"themes/hexo-theme-butterfly-dev/source/js/search/algolia.js","hash":"d684f2a60fe821d61761a01cf36fd2fb57c31c9c","modified":1660320809734},{"_id":"themes/hexo-theme-butterfly-dev/source/js/search/local-search.js","hash":"2086c6ad3c48ded263a36b230485ed0c15293f8e","modified":1660320809734},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1660320809701},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1660320809702},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/card-post-count/valine.pug","hash":"896dc0b7480151562c5717771e3000c5a7fc1b16","modified":1660320809702},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1660320809702},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/card-post-count/twikoo.pug","hash":"eb2d840fa42de3ec7a7fda0eaa30246d52f543e2","modified":1660320809702},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/card-post-count/waline.pug","hash":"f3db5c5e738e097a191dc0de59c61d3e1444f7c3","modified":1660320809702},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1660320809702},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1660320809702},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1660320809703},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1660320809703},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1660320809703},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1660320809703},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1660320809703},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/disqusjs.pug","hash":"9ddfac9ae7071ecd982ca3808dcfd4d2d6098f33","modified":1660320809703},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/facebook_comments.pug","hash":"e6d48579029c253b85f2abbba5997d6baf9a10ae","modified":1660320809704},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/giscus.pug","hash":"a780962b3a04cac4b296ce809ee7101e42cf3a37","modified":1660320809704},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/gitalk.pug","hash":"b22ed23c78fb372cbdc4cfd3f733beb2ebea5d74","modified":1660320809704},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/js.pug","hash":"810e8ca2669433f649329859922aabbb30d76178","modified":1660320809704},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/index.pug","hash":"414f876d28f8497d6d551363a89c5c69bf1533eb","modified":1660320809704},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1660320809704},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/twikoo.pug","hash":"8cd118d933cb8a9f9158523eaf71c14e9895cff9","modified":1660320809705},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/valine.pug","hash":"d1ac48307e4999be08c63c673e98fe3fcee5bfce","modified":1660320809705},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/utterances.pug","hash":"21098eba47237ec003228e7fa70a5fbb14d6c804","modified":1660320809705},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/comments/waline.pug","hash":"0f287b10408b4455d946a69677549fcfd302e8c0","modified":1660320809705},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1660320809705},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/math/katex.pug","hash":"266caf985dc0703ff81b871b8f8d206f57db6e79","modified":1660320809706},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/math/mathjax.pug","hash":"87e40f0c315407ab88571a2b3450d640f15c96bc","modified":1660320809706},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/math/mermaid.pug","hash":"6dd420ea858f3237d8a7353e8541df665dd6fdf1","modified":1660320809706},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1660320809706},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1660320809706},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/newest-comments/index.pug","hash":"16cf05cf9649322da57e9b8d316573bb65f8d8d8","modified":1660320809707},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/newest-comments/valine.pug","hash":"3b42d3b8468431655112705bff7530ce647f8c05","modified":1660320809707},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"444820bc7e4a9a033062bcd8cd71b10b49d1968a","modified":1660320809707},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/newest-comments/waline.pug","hash":"c9e6e14770317a3516e2e2f320654cd52b1bd73a","modified":1660320809707},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/search/algolia.pug","hash":"a5aa867697578660fe78a0d9b0f245d09b571110","modified":1660320809708},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1660320809708},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/search/local-search.pug","hash":"7ce18e4b22c41dcfd84835e89b47030fc5f4a394","modified":1660320809708},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1660320809708},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1660320809709},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/share/share-js.pug","hash":"7e9a7347dd8ca4c33c564fb62512743b6012bb2d","modified":1660320809709},{"_id":"themes/hexo-theme-butterfly-dev/layout/includes/third-party/share/addtoany.pug","hash":"fbac21a6c5924fb2f8d1190fd634105fdbc603d4","modified":1660320809708},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1660320809717},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1660320809717},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1660320809717},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1660320809718},{"_id":"themes/hexo-theme-butterfly-dev/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1660320809718},{"_id":"themes/hexo-theme-butterfly-dev/source/img/6.png","hash":"bd0d41c8694f1e3ec307fceb902f8e747b266e3a","modified":1660320809730},{"_id":"themes/hexo-theme-butterfly-dev/source/img/1.png","hash":"65142ce9ed015f50b730b50f1ba4790266369e82","modified":1660320809725},{"_id":"themes/hexo-theme-butterfly-dev/source/img/10.png","hash":"5c62a96328d4e275bb6ceb07a2c7c32d67ca8527","modified":1660320809726},{"_id":"themes/hexo-theme-butterfly-dev/source/img/2.png","hash":"93d8dc40cf2c4134be30e87c8dc67343723f694e","modified":1660320809727},{"_id":"themes/hexo-theme-butterfly-dev/source/img/4.png","hash":"7221511b18692fbc2d919bc04c6a2d37e0636328","modified":1660320809728},{"_id":"themes/hexo-theme-butterfly-dev/source/img/3.png","hash":"b83f92b53f6d7ee3d55b7a48f6e643b60a2d48cf","modified":1660320809727},{"_id":"themes/hexo-theme-butterfly-dev/source/img/5.png","hash":"239cd0a713f025ddbeb1b95e5b2c8f99b5de7db1","modified":1660320809729},{"_id":"themes/hexo-theme-butterfly-dev/source/img/7.png","hash":"eccc99bde3f55581fd576a70263a6de7ffc5d080","modified":1660320809730},{"_id":"themes/hexo-theme-butterfly-dev/source/img/8.png","hash":"bb78ed32ec38850880ffa20e4d0af492fc1bf5cb","modified":1660320809731},{"_id":"themes/hexo-theme-butterfly-dev/source/img/9.png","hash":"3a4aa98ab8a86363ca72a9741729b6bb933dd93d","modified":1660320809732},{"_id":"themes/hexo-theme-butterfly-dev/source/img/logo2.png","hash":"1baf7822069002df9a58d3ec666e1883cc45e5e6","modified":1660320809734},{"_id":"public/atom.xml","hash":"a9185136362b1ea06dff7bbe826efc9f981139f4","modified":1660377864169},{"_id":"public/content.json","hash":"d279386a1593b266ab2a5e47c38ff72d827e1d9f","modified":1660377864169},{"_id":"public/search.xml","hash":"4df30f609099a3fdb15414d1378d493fc7148e52","modified":1660377864169},{"_id":"public/404.html","hash":"aa948256bff8265f4a57964a64ace72587ef6988","modified":1660377864169},{"_id":"public/categories/index.html","hash":"84e5c1273e62aa3b4caf52f9e2be12dd8cd0470c","modified":1660377864169},{"_id":"public/tags/index.html","hash":"33a91924208f2626274c9774d441dd0fc613e9cb","modified":1660377864169},{"_id":"public/2022/06/28/pulgin/IDEA暂存文件/index.html","hash":"9125a8ff44a8d3fa0f3cf093c5f2883efaa4c3c8","modified":1660377864169},{"_id":"public/2022/06/20/note/待学清单/index.html","hash":"db904ab8278255957a9328f2e6a2f8d8eb19e0f3","modified":1660377864169},{"_id":"public/2022/06/14/pulgin/MyBatisCodeHelper-Pro/index.html","hash":"2c012719c0b2f858c0fa623a5fd1592853a75ed1","modified":1660377864169},{"_id":"public/2022/05/23/config/Picgo配置/index.html","hash":"294f220230fa9263c491df92c2c8e2c28a39bafd","modified":1660377864169},{"_id":"public/archives/2020/index.html","hash":"4b4afd432f8729a6595b95f75e5babe89d80b742","modified":1660377864169},{"_id":"public/archives/2020/05/index.html","hash":"f25c5e2559de84789a13a6497b4f0e0e1d0259fb","modified":1660377864169},{"_id":"public/archives/2022/page/2/index.html","hash":"b78ba021addd07aefe13d4809ed12e6716fa759d","modified":1660377864169},{"_id":"public/archives/2022/05/index.html","hash":"6c5b2c8cea33234eef48c7e1fe04c434f3a1a064","modified":1660377864169},{"_id":"public/archives/2022/08/index.html","hash":"0d59c76761af4e1cfcdde297c10c666c0fa090f6","modified":1660377864169},{"_id":"public/tags/code/index.html","hash":"acc984d92ff93126a04f7677f5095449c5289961","modified":1660377864169},{"_id":"public/tags/config/index.html","hash":"66c4d85d6aaa06365545127a6b822695e7a7336c","modified":1660377864169},{"_id":"public/tags/嘿嘿/index.html","hash":"2046d338273ca24911442be0365fa15024644821","modified":1660377864169},{"_id":"public/tags/vue/index.html","hash":"e486f1472d0a718593e8d7bb3e96e9c656ee4c4f","modified":1660377864169},{"_id":"public/tags/work/index.html","hash":"a5e5fbc8c332294fb1fb7dec1bbb4a144acc4365","modified":1660377864169},{"_id":"public/tags/暂存文件/index.html","hash":"5727e8028c89f32e34a9022e585d61e84622ca9e","modified":1660377864169},{"_id":"public/tags/IDEA插件/index.html","hash":"a027e6c770ba568afc9251d343f0773b480ff127","modified":1660377864169},{"_id":"public/2022/08/12/code/1/index.html","hash":"0fc96c5b0e414a67d9ed53cf1942d84111d37f0f","modified":1660377864169},{"_id":"public/2022/06/27/project/1.mvvm原理/index.html","hash":"da3f8fafa281797a7bf3b08ceb71fd2a8225190c","modified":1660377864169},{"_id":"public/2022/06/27/config/Idea忽略配置文件/index.html","hash":"2c19a8c23a20f72e1c31aef1ca1ed314382fde1f","modified":1660377864169},{"_id":"public/2022/06/21/task/绩效考核系统/index.html","hash":"07fc6a16bb10285e2486c1a1539044da456faccf","modified":1660377864169},{"_id":"public/2022/06/20/pulgin/GenerateAllSetter Postfix Completion/index.html","hash":"88f5bf139aac424f7ff35b3b1f4471cad30dea9a","modified":1660377864169},{"_id":"public/2022/06/20/note/MySql数据库单表查询/index.html","hash":"9415b16a6db1b2d0b00c79d73c4f262bf036512b","modified":1660377864169},{"_id":"public/2022/06/14/work/开发常用网址/index.html","hash":"98bb23f008b7c075840017045a6a0ed8b1279a43","modified":1660377864169},{"_id":"public/2022/06/10/config/maven/index.html","hash":"a2d363760ad03a293a9fb7ce287aa62b9f3e9459","modified":1660377864169},{"_id":"public/2020/05/27/note/CompletableFuture/index.html","hash":"e6a6e404b9580dda5d1726fdfb459716dd108cb9","modified":1660377864169},{"_id":"public/2020/05/26/note/多线程/index.html","hash":"0022a2c635c6fe62c029425bc9667557b8ec34bc","modified":1660377864169},{"_id":"public/2020/05/20/note/FastJson/index.html","hash":"f0b10b1b177a463c980ecc4317546eecd1eb0374","modified":1660377864169},{"_id":"public/2020/05/18/note/跨域请求/index.html","hash":"64d66077d771f9a555dfdd3d9930387aad7f320f","modified":1660377864169},{"_id":"public/2020/05/13/note/开发规范/index.html","hash":"be09739efbed06c4359e2fb5ad00d198ae16b2ef","modified":1660377864169},{"_id":"public/archives/index.html","hash":"e0bff96f48919b298fbd424c02a86c5395b2ea03","modified":1660377864169},{"_id":"public/archives/page/2/index.html","hash":"52c4ce038e6ee6e8737e19228b532b48671c45bf","modified":1660377864169},{"_id":"public/archives/2022/index.html","hash":"daf5893164e322322624ee747de41cdbe59041b4","modified":1660377864169},{"_id":"public/archives/2022/06/index.html","hash":"21dff7464b6b7cc733271dce1ee32fc8efea337b","modified":1660377864169},{"_id":"public/index.html","hash":"18510d7615310567891afa77304b9c4bc24b86ca","modified":1660377864169},{"_id":"public/page/2/index.html","hash":"43b953cfa5a4925f50fb9d22c97c5440c771527f","modified":1660377864169},{"_id":"public/page/3/index.html","hash":"c968a7bc9fd39ce5089647957f27e1a8c7f12866","modified":1660377864169},{"_id":"public/tags/note/index.html","hash":"9b0a55eb85fd9567b59c83fddd771033c118f025","modified":1660377864169},{"_id":"public/tags/插件/index.html","hash":"cdde25afcc7d66f58651ed062fc4efea330e1e72","modified":1660377864169},{"_id":"public/tags/task/index.html","hash":"11891dbd415116271081a1e23ce76528bedacfff","modified":1660377864169},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1660377864169},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1660377864169},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1660377864169},{"_id":"public/css/hbe.style.css","hash":"f80457bac5f4bc67ae41733ee1ffb65d7b6ba1e8","modified":1660377864169},{"_id":"public/lib/hbe.js","hash":"2a6e18b7c37578f582a0acdc1ebc54d1e846b1a7","modified":1660377864169},{"_id":"public/img/6.png","hash":"bd0d41c8694f1e3ec307fceb902f8e747b266e3a","modified":1660377864169},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1660377864169},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1660377864169},{"_id":"public/js/search/local-search.js","hash":"ec62117f38e095425f295b1170c222c7a1399425","modified":1660377864169},{"_id":"public/js/search/algolia.js","hash":"aaa5e44125dcf321866bc2355a73773b11db8c9c","modified":1660377864169},{"_id":"public/css/index.css","hash":"345f29eecd0d8f1a5da57d97462154b05a9a5dfe","modified":1660377864169},{"_id":"public/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1660377864169},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1660377864169},{"_id":"public/img/1.png","hash":"65142ce9ed015f50b730b50f1ba4790266369e82","modified":1660377864169},{"_id":"public/img/3.png","hash":"b83f92b53f6d7ee3d55b7a48f6e643b60a2d48cf","modified":1660377864169},{"_id":"public/img/2.png","hash":"93d8dc40cf2c4134be30e87c8dc67343723f694e","modified":1660377864169},{"_id":"public/img/4.png","hash":"7221511b18692fbc2d919bc04c6a2d37e0636328","modified":1660377864169},{"_id":"public/img/10.png","hash":"5c62a96328d4e275bb6ceb07a2c7c32d67ca8527","modified":1660377864169},{"_id":"public/img/5.png","hash":"239cd0a713f025ddbeb1b95e5b2c8f99b5de7db1","modified":1660377864169},{"_id":"public/img/7.png","hash":"eccc99bde3f55581fd576a70263a6de7ffc5d080","modified":1660377864169},{"_id":"public/img/8.png","hash":"bb78ed32ec38850880ffa20e4d0af492fc1bf5cb","modified":1660377864169},{"_id":"public/img/9.png","hash":"3a4aa98ab8a86363ca72a9741729b6bb933dd93d","modified":1660377864169},{"_id":"public/img/logo2.png","hash":"1baf7822069002df9a58d3ec666e1883cc45e5e6","modified":1660377864169}],"Category":[],"Data":[],"Page":[{"title":"分類","date":"2018-01-04T16:00:00.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分類\ndate: 2018-01-05 00:00:00\ntype: \"categories\"\n---","updated":"2022-08-12T16:13:29.692Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl6rm3zww0000o0ti3pfoe6gg","content":"","site":{"data":{}},"cover":"/img/1.png","excerpt":"","more":""},{"title":"標籤","date":"2018-01-04T16:00:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 標籤\ndate: 2018-01-05 00:00:00\ntype: \"tags\"\n---","updated":"2022-08-12T16:13:29.692Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl6rm3zx10002o0ti8jtf4fni","content":"","site":{"data":{}},"cover":"/img/2.png","excerpt":"","more":""}],"Post":[{"title":"1","date":"2022-08-12T06:31:02.000Z","cover":"/img/3.png","_content":"# 按天批量写入\n```java\n            Date d1= DateUtils.parseDate(dateBegin,\"yyyyMMdd\");\n            Date d2= DateUtils.parseDate(dateEnd,\"yyyyMMdd\");\n            if(d1.after(d2) ){\n                return new BaseResult(BaseMessage.FAILED.getCode(),\"开始时间不可大于结束时间\",\"\");\n            }\n            while(d2.after(d1)||d1.equals(d2)){\n                liquidateFundFlowService.refreshFundFLowBizInfo(d1);\n                d1=DateUtils.addDays(d1,1);\n            }\n```\n```java\n        tranDate = DateUtils.truncate(tranDate, Calendar.DATE);\n        Date tranDateEnd = DateUtils.addDays(tranDate,1);\n        Long maxId = null;\n        while (true){\n            PageHelper.offsetPage(0, 1000, false);\n            LiquidateBizFlowExample example = new LiquidateBizFlowExample();\n            LiquidateBizFlowExample.Criteria criteria = example.createCriteria()\n                    .andDeleteFlagEqualTo(DeleteFlag.ENABLE.getIndex())\n                    .andSysCtimeGreaterThan(tranDate)\n                    .andSysCtimeLessThan(tranDateEnd)\n                    .andOperateTypeEqualTo(LiquidateOperateType.FUND.getCode());\n            example.setOrderByClause(\"id\");\n            if (null != maxId){\n                criteria.andIdGreaterThan(maxId);\n            }\n            List<LiquidateBizFlow> liquidateBizFlows = liquidateBizFlowMapper.selectByExample(example);\n            if (CollectionUtils.isEmpty(liquidateBizFlows)){\n                break;\n            }\n            maxId = liquidateBizFlows.get(liquidateBizFlows.size() - 1).getId();\n```\n","source":"_posts/code/1.md","raw":"---\ntitle: 1\ndate: 2022-8-12 14:31:02\ncover: \ntags:\n- code\n---\n# 按天批量写入\n```java\n            Date d1= DateUtils.parseDate(dateBegin,\"yyyyMMdd\");\n            Date d2= DateUtils.parseDate(dateEnd,\"yyyyMMdd\");\n            if(d1.after(d2) ){\n                return new BaseResult(BaseMessage.FAILED.getCode(),\"开始时间不可大于结束时间\",\"\");\n            }\n            while(d2.after(d1)||d1.equals(d2)){\n                liquidateFundFlowService.refreshFundFLowBizInfo(d1);\n                d1=DateUtils.addDays(d1,1);\n            }\n```\n```java\n        tranDate = DateUtils.truncate(tranDate, Calendar.DATE);\n        Date tranDateEnd = DateUtils.addDays(tranDate,1);\n        Long maxId = null;\n        while (true){\n            PageHelper.offsetPage(0, 1000, false);\n            LiquidateBizFlowExample example = new LiquidateBizFlowExample();\n            LiquidateBizFlowExample.Criteria criteria = example.createCriteria()\n                    .andDeleteFlagEqualTo(DeleteFlag.ENABLE.getIndex())\n                    .andSysCtimeGreaterThan(tranDate)\n                    .andSysCtimeLessThan(tranDateEnd)\n                    .andOperateTypeEqualTo(LiquidateOperateType.FUND.getCode());\n            example.setOrderByClause(\"id\");\n            if (null != maxId){\n                criteria.andIdGreaterThan(maxId);\n            }\n            List<LiquidateBizFlow> liquidateBizFlows = liquidateBizFlowMapper.selectByExample(example);\n            if (CollectionUtils.isEmpty(liquidateBizFlows)){\n                break;\n            }\n            maxId = liquidateBizFlows.get(liquidateBizFlows.size() - 1).getId();\n```\n","slug":"code/1","published":1,"updated":"2022-08-12T16:13:29.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zwz0001o0ti99bv38h0","content":"<h1 id=\"按天批量写入\"><a href=\"#按天批量写入\" class=\"headerlink\" title=\"按天批量写入\"></a>按天批量写入</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Date d1= DateUtils.parseDate(dateBegin,<span class=\"string\">&quot;yyyyMMdd&quot;</span>);</span><br><span class=\"line\">Date d2= DateUtils.parseDate(dateEnd,<span class=\"string\">&quot;yyyyMMdd&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(d1.after(d2) )&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BaseResult(BaseMessage.FAILED.getCode(),<span class=\"string\">&quot;开始时间不可大于结束时间&quot;</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(d2.after(d1)||d1.equals(d2))&#123;</span><br><span class=\"line\">    liquidateFundFlowService.refreshFundFLowBizInfo(d1);</span><br><span class=\"line\">    d1=DateUtils.addDays(d1,<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tranDate = DateUtils.truncate(tranDate, Calendar.DATE);</span><br><span class=\"line\">Date tranDateEnd = DateUtils.addDays(tranDate,<span class=\"number\">1</span>);</span><br><span class=\"line\">Long maxId = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">    PageHelper.offsetPage(<span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">    LiquidateBizFlowExample example = <span class=\"keyword\">new</span> LiquidateBizFlowExample();</span><br><span class=\"line\">    LiquidateBizFlowExample.Criteria criteria = example.createCriteria()</span><br><span class=\"line\">            .andDeleteFlagEqualTo(DeleteFlag.ENABLE.getIndex())</span><br><span class=\"line\">            .andSysCtimeGreaterThan(tranDate)</span><br><span class=\"line\">            .andSysCtimeLessThan(tranDateEnd)</span><br><span class=\"line\">            .andOperateTypeEqualTo(LiquidateOperateType.FUND.getCode());</span><br><span class=\"line\">    example.setOrderByClause(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != maxId)&#123;</span><br><span class=\"line\">        criteria.andIdGreaterThan(maxId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    List&lt;LiquidateBizFlow&gt; liquidateBizFlows = liquidateBizFlowMapper.selectByExample(example);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (CollectionUtils.isEmpty(liquidateBizFlows))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    maxId = liquidateBizFlows.get(liquidateBizFlows.size() - <span class=\"number\">1</span>).getId();</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"按天批量写入\"><a href=\"#按天批量写入\" class=\"headerlink\" title=\"按天批量写入\"></a>按天批量写入</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Date d1= DateUtils.parseDate(dateBegin,<span class=\"string\">&quot;yyyyMMdd&quot;</span>);</span><br><span class=\"line\">Date d2= DateUtils.parseDate(dateEnd,<span class=\"string\">&quot;yyyyMMdd&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(d1.after(d2) )&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BaseResult(BaseMessage.FAILED.getCode(),<span class=\"string\">&quot;开始时间不可大于结束时间&quot;</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(d2.after(d1)||d1.equals(d2))&#123;</span><br><span class=\"line\">    liquidateFundFlowService.refreshFundFLowBizInfo(d1);</span><br><span class=\"line\">    d1=DateUtils.addDays(d1,<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tranDate = DateUtils.truncate(tranDate, Calendar.DATE);</span><br><span class=\"line\">Date tranDateEnd = DateUtils.addDays(tranDate,<span class=\"number\">1</span>);</span><br><span class=\"line\">Long maxId = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">    PageHelper.offsetPage(<span class=\"number\">0</span>, <span class=\"number\">1000</span>, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">    LiquidateBizFlowExample example = <span class=\"keyword\">new</span> LiquidateBizFlowExample();</span><br><span class=\"line\">    LiquidateBizFlowExample.Criteria criteria = example.createCriteria()</span><br><span class=\"line\">            .andDeleteFlagEqualTo(DeleteFlag.ENABLE.getIndex())</span><br><span class=\"line\">            .andSysCtimeGreaterThan(tranDate)</span><br><span class=\"line\">            .andSysCtimeLessThan(tranDateEnd)</span><br><span class=\"line\">            .andOperateTypeEqualTo(LiquidateOperateType.FUND.getCode());</span><br><span class=\"line\">    example.setOrderByClause(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != maxId)&#123;</span><br><span class=\"line\">        criteria.andIdGreaterThan(maxId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    List&lt;LiquidateBizFlow&gt; liquidateBizFlows = liquidateBizFlowMapper.selectByExample(example);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (CollectionUtils.isEmpty(liquidateBizFlows))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    maxId = liquidateBizFlows.get(liquidateBizFlows.size() - <span class=\"number\">1</span>).getId();</span><br></pre></td></tr></table></figure>\n"},{"title":"IDEA忽略配置文件","date":"2022-06-27T09:47:59.000Z","cover":"/img/6.png","_content":"\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175123.png)\n\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175318.png)\n\nMove to Another Changelist 将选中的文件转移到其他的 Change list 中。 Change list 是一个重要的概念，这里需要进行重点说明。很多时候，我们开发一个项目同时并发的任务可能有很多，每个任务涉及到的文件可能都是基于业务来讲的。 所以就会存在一个这样的情况：我改了 30 个文件，其中 15 个文件是属于订单问题，剩下 15 个是会员问题，那我希望提交代码的时候是根据业务区分这些文件的， 这样我填写 Commit Message 是好描述的，同时在文件多的情况下，我也好区分这些要提交的文件业务模块。 所以我一般会把属于订单的 15 个文件转移到其他的 Change list中，先把专注点集中在 15 个会员问题的文件，先提交会员问题的 Change list，然后在提交订单会员的 Change list。 我个人还有一种用法是把一些文件暂时不提交的文件转移到一个我指定的 Change list，等后面我觉得有必要提交了，再做提交操作，这样这些文件就不会干扰我当前修改的文件提交。 总结下 Change list 的功能就是为了让你更好地管理你的版本控制文件，让你的专注点得到更好的集中，从而提供效率。\n","source":"_posts/config/Idea忽略配置文件.md","raw":"---\ntitle: IDEA忽略配置文件\ndate: 2022-6-27 17:47:59\ncover: \ntags:\n- config\n---\n\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175123.png)\n\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175318.png)\n\nMove to Another Changelist 将选中的文件转移到其他的 Change list 中。 Change list 是一个重要的概念，这里需要进行重点说明。很多时候，我们开发一个项目同时并发的任务可能有很多，每个任务涉及到的文件可能都是基于业务来讲的。 所以就会存在一个这样的情况：我改了 30 个文件，其中 15 个文件是属于订单问题，剩下 15 个是会员问题，那我希望提交代码的时候是根据业务区分这些文件的， 这样我填写 Commit Message 是好描述的，同时在文件多的情况下，我也好区分这些要提交的文件业务模块。 所以我一般会把属于订单的 15 个文件转移到其他的 Change list中，先把专注点集中在 15 个会员问题的文件，先提交会员问题的 Change list，然后在提交订单会员的 Change list。 我个人还有一种用法是把一些文件暂时不提交的文件转移到一个我指定的 Change list，等后面我觉得有必要提交了，再做提交操作，这样这些文件就不会干扰我当前修改的文件提交。 总结下 Change list 的功能就是为了让你更好地管理你的版本控制文件，让你的专注点得到更好的集中，从而提供效率。\n","slug":"config/Idea忽略配置文件","published":1,"updated":"2022-08-12T16:13:29.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx20003o0tifvfqg4be","content":"<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175123.png\"></p>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175318.png\"></p>\n<p>Move to Another Changelist 将选中的文件转移到其他的 Change list 中。 Change list 是一个重要的概念，这里需要进行重点说明。很多时候，我们开发一个项目同时并发的任务可能有很多，每个任务涉及到的文件可能都是基于业务来讲的。 所以就会存在一个这样的情况：我改了 30 个文件，其中 15 个文件是属于订单问题，剩下 15 个是会员问题，那我希望提交代码的时候是根据业务区分这些文件的， 这样我填写 Commit Message 是好描述的，同时在文件多的情况下，我也好区分这些要提交的文件业务模块。 所以我一般会把属于订单的 15 个文件转移到其他的 Change list中，先把专注点集中在 15 个会员问题的文件，先提交会员问题的 Change list，然后在提交订单会员的 Change list。 我个人还有一种用法是把一些文件暂时不提交的文件转移到一个我指定的 Change list，等后面我觉得有必要提交了，再做提交操作，这样这些文件就不会干扰我当前修改的文件提交。 总结下 Change list 的功能就是为了让你更好地管理你的版本控制文件，让你的专注点得到更好的集中，从而提供效率。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175123.png\"></p>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627175318.png\"></p>\n<p>Move to Another Changelist 将选中的文件转移到其他的 Change list 中。 Change list 是一个重要的概念，这里需要进行重点说明。很多时候，我们开发一个项目同时并发的任务可能有很多，每个任务涉及到的文件可能都是基于业务来讲的。 所以就会存在一个这样的情况：我改了 30 个文件，其中 15 个文件是属于订单问题，剩下 15 个是会员问题，那我希望提交代码的时候是根据业务区分这些文件的， 这样我填写 Commit Message 是好描述的，同时在文件多的情况下，我也好区分这些要提交的文件业务模块。 所以我一般会把属于订单的 15 个文件转移到其他的 Change list中，先把专注点集中在 15 个会员问题的文件，先提交会员问题的 Change list，然后在提交订单会员的 Change list。 我个人还有一种用法是把一些文件暂时不提交的文件转移到一个我指定的 Change list，等后面我觉得有必要提交了，再做提交操作，这样这些文件就不会干扰我当前修改的文件提交。 总结下 Change list 的功能就是为了让你更好地管理你的版本控制文件，让你的专注点得到更好的集中，从而提供效率。</p>\n"},{"title":"PicGo配置","date":"2022-05-23T15:31:51.000Z","password":"qiuyang","cover":"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220523233510.png","_content":"\nAPPID\n`1258707945`\n\n存储空间\n`blog-1258707945`\n\n存储区域\n`ap-guangzhou`\n\n","source":"_posts/config/Picgo配置.md","raw":"---\ntitle: PicGo配置\ndate: 2022-5-23 23:31:51\npassword: qiuyang\ncover: https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220523233510.png\ntags:\n- 嘿嘿\n---\n\nAPPID\n`1258707945`\n\n存储空间\n`blog-1258707945`\n\n存储区域\n`ap-guangzhou`\n\n","slug":"config/Picgo配置","published":1,"updated":"2022-08-13T07:15:28.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx40005o0tidjqtd0ew","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\r\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"5a19ab359fe909d4ef13940464146117489b4cc36ab2a97a77a33961837f8bd4\">4a76fe182f6b350bda831c22429c2862b5e1541874adce7c818c4d6893e28cb7555e204924d177cc1230e1e1c6e09cfa49c55d607e216f12493e6d4322aeb37b8b7294788c329aad1f712c8e3ec957115c277f23f23d8747534727287d96cf020adc370994da141c814ea9c4038b837423de40ef10790cd1f8350e67d55fe00e40feb9015846c920986821a4bf780ca74f26da7f1e68c24ede262342923cf3728f0e9511b8f6dc191fcd46b0a9c46012</script>\r\n  <div class=\"hbe hbe-content\">\r\n    <div class=\"hbe hbe-input hbe-input-default\">\r\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\r\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\r\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\r\n      </label>\r\n    </div>\r\n  </div>\r\n</div>\r\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"Here's something encrypted, password is required to continue reading.","more":"Here's something encrypted, password is required to continue reading.","origin":"<p>APPID<br><code>1258707945</code></p>\n<p>存储空间<br><code>blog-1258707945</code></p>\n<p>存储区域<br><code>ap-guangzhou</code></p>\n","encrypt":true},{"title":"maven","date":"2022-06-10T02:34:00.000Z","cover":"/img/4.png","_content":"# 命令行跳过测试打包\n```shell\nmvn clean install -Dmaven.test.skip=true\n```\n\n# 明明有本地文件，idea却找不到包\n在idea中使用maven时常常出现配置好pom依赖后，怎么reimport都无法下载jar包。\n解决方法：在Maven窗口中打开mvn命令，输入更新不完整依赖命令：\n```shell\nmvn -U idea:idea\n```\n运行，就可以下载没有的jar包。\n\n# maven红色波浪线\n通过上面的命令jar包已经导入了成功也不能消除（reimport也不行，不过可以正常使用），可以先将带红色波浪线的依赖剪切掉，reimport一下，再将依赖粘贴回去，完美解决。\n\n\n# maven查找网站\nhttps://mvn.coderead.cn/\n","source":"_posts/config/maven.md","raw":"---\ntitle: maven\ndate: 2022-6-10 10:34:00\ncover: \ntags:\n- config\n---\n# 命令行跳过测试打包\n```shell\nmvn clean install -Dmaven.test.skip=true\n```\n\n# 明明有本地文件，idea却找不到包\n在idea中使用maven时常常出现配置好pom依赖后，怎么reimport都无法下载jar包。\n解决方法：在Maven窗口中打开mvn命令，输入更新不完整依赖命令：\n```shell\nmvn -U idea:idea\n```\n运行，就可以下载没有的jar包。\n\n# maven红色波浪线\n通过上面的命令jar包已经导入了成功也不能消除（reimport也不行，不过可以正常使用），可以先将带红色波浪线的依赖剪切掉，reimport一下，再将依赖粘贴回去，完美解决。\n\n\n# maven查找网站\nhttps://mvn.coderead.cn/\n","slug":"config/maven","published":1,"updated":"2022-08-12T16:13:29.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx50006o0ti0ku67bc0","content":"<h1 id=\"命令行跳过测试打包\"><a href=\"#命令行跳过测试打包\" class=\"headerlink\" title=\"命令行跳过测试打包\"></a>命令行跳过测试打包</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean install -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"明明有本地文件，idea却找不到包\"><a href=\"#明明有本地文件，idea却找不到包\" class=\"headerlink\" title=\"明明有本地文件，idea却找不到包\"></a>明明有本地文件，idea却找不到包</h1><p>在idea中使用maven时常常出现配置好pom依赖后，怎么reimport都无法下载jar包。<br>解决方法：在Maven窗口中打开mvn命令，输入更新不完整依赖命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn -U idea:idea</span><br></pre></td></tr></table></figure>\n<p>运行，就可以下载没有的jar包。</p>\n<h1 id=\"maven红色波浪线\"><a href=\"#maven红色波浪线\" class=\"headerlink\" title=\"maven红色波浪线\"></a>maven红色波浪线</h1><p>通过上面的命令jar包已经导入了成功也不能消除（reimport也不行，不过可以正常使用），可以先将带红色波浪线的依赖剪切掉，reimport一下，再将依赖粘贴回去，完美解决。</p>\n<h1 id=\"maven查找网站\"><a href=\"#maven查找网站\" class=\"headerlink\" title=\"maven查找网站\"></a>maven查找网站</h1><p><a href=\"https://mvn.coderead.cn/\">https://mvn.coderead.cn/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"命令行跳过测试打包\"><a href=\"#命令行跳过测试打包\" class=\"headerlink\" title=\"命令行跳过测试打包\"></a>命令行跳过测试打包</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean install -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"明明有本地文件，idea却找不到包\"><a href=\"#明明有本地文件，idea却找不到包\" class=\"headerlink\" title=\"明明有本地文件，idea却找不到包\"></a>明明有本地文件，idea却找不到包</h1><p>在idea中使用maven时常常出现配置好pom依赖后，怎么reimport都无法下载jar包。<br>解决方法：在Maven窗口中打开mvn命令，输入更新不完整依赖命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn -U idea:idea</span><br></pre></td></tr></table></figure>\n<p>运行，就可以下载没有的jar包。</p>\n<h1 id=\"maven红色波浪线\"><a href=\"#maven红色波浪线\" class=\"headerlink\" title=\"maven红色波浪线\"></a>maven红色波浪线</h1><p>通过上面的命令jar包已经导入了成功也不能消除（reimport也不行，不过可以正常使用），可以先将带红色波浪线的依赖剪切掉，reimport一下，再将依赖粘贴回去，完美解决。</p>\n<h1 id=\"maven查找网站\"><a href=\"#maven查找网站\" class=\"headerlink\" title=\"maven查找网站\"></a>maven查找网站</h1><p><a href=\"https://mvn.coderead.cn/\">https://mvn.coderead.cn/</a></p>\n"},{"title":"mvvm原理","date":"2022-06-27T15:13:09.000Z","cover":"/img/7.png","_content":"# mvvm\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627232342.png)\n> data就是M视图层\n> el就是V视图层\n> new Vue()得到的vm实例，提供了双向绑定的能力\n\n# 指令\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627234653.png)\n\n# v-bind\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000651.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000629.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000829.png)\n\n# v-on\n## jquery写法\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001535.png)\n## v-on加点击事件\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001928.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002000.png)\n## es6语法\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002119.png)\n## es6传参\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002533.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002928.png)\n## 简写\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628003240.png)\n# v-model\n## 数据单向绑定\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010416.png)\n## 双向绑定\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010725.png)","source":"_posts/project/1.mvvm原理.md","raw":"---\ntitle: mvvm原理\ndate: 2022-6-27 23:13:09\ncover: \ntags:\n- vue\n---\n# mvvm\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627232342.png)\n> data就是M视图层\n> el就是V视图层\n> new Vue()得到的vm实例，提供了双向绑定的能力\n\n# 指令\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627234653.png)\n\n# v-bind\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000651.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000629.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000829.png)\n\n# v-on\n## jquery写法\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001535.png)\n## v-on加点击事件\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001928.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002000.png)\n## es6语法\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002119.png)\n## es6传参\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002533.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002928.png)\n## 简写\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628003240.png)\n# v-model\n## 数据单向绑定\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010416.png)\n## 双向绑定\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010725.png)","slug":"project/1.mvvm原理","published":1,"updated":"2022-08-12T16:13:29.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx60007o0ti90j98xr1","content":"<h1 id=\"mvvm\"><a href=\"#mvvm\" class=\"headerlink\" title=\"mvvm\"></a>mvvm</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627232342.png\"></p>\n<blockquote>\n<p>data就是M视图层<br>el就是V视图层<br>new Vue()得到的vm实例，提供了双向绑定的能力</p>\n</blockquote>\n<h1 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627234653.png\"></p>\n<h1 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000651.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000629.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000829.png\"></p>\n<h1 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h1><h2 id=\"jquery写法\"><a href=\"#jquery写法\" class=\"headerlink\" title=\"jquery写法\"></a>jquery写法</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001535.png\"></p>\n<h2 id=\"v-on加点击事件\"><a href=\"#v-on加点击事件\" class=\"headerlink\" title=\"v-on加点击事件\"></a>v-on加点击事件</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001928.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002000.png\"></p>\n<h2 id=\"es6语法\"><a href=\"#es6语法\" class=\"headerlink\" title=\"es6语法\"></a>es6语法</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002119.png\"></p>\n<h2 id=\"es6传参\"><a href=\"#es6传参\" class=\"headerlink\" title=\"es6传参\"></a>es6传参</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002533.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002928.png\"></p>\n<h2 id=\"简写\"><a href=\"#简写\" class=\"headerlink\" title=\"简写\"></a>简写</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628003240.png\"></p>\n<h1 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h1><h2 id=\"数据单向绑定\"><a href=\"#数据单向绑定\" class=\"headerlink\" title=\"数据单向绑定\"></a>数据单向绑定</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010416.png\"></p>\n<h2 id=\"双向绑定\"><a href=\"#双向绑定\" class=\"headerlink\" title=\"双向绑定\"></a>双向绑定</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010725.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mvvm\"><a href=\"#mvvm\" class=\"headerlink\" title=\"mvvm\"></a>mvvm</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627232342.png\"></p>\n<blockquote>\n<p>data就是M视图层<br>el就是V视图层<br>new Vue()得到的vm实例，提供了双向绑定的能力</p>\n</blockquote>\n<h1 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220627234653.png\"></p>\n<h1 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000651.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000629.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628000829.png\"></p>\n<h1 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h1><h2 id=\"jquery写法\"><a href=\"#jquery写法\" class=\"headerlink\" title=\"jquery写法\"></a>jquery写法</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001535.png\"></p>\n<h2 id=\"v-on加点击事件\"><a href=\"#v-on加点击事件\" class=\"headerlink\" title=\"v-on加点击事件\"></a>v-on加点击事件</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628001928.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002000.png\"></p>\n<h2 id=\"es6语法\"><a href=\"#es6语法\" class=\"headerlink\" title=\"es6语法\"></a>es6语法</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002119.png\"></p>\n<h2 id=\"es6传参\"><a href=\"#es6传参\" class=\"headerlink\" title=\"es6传参\"></a>es6传参</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002533.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628002928.png\"></p>\n<h2 id=\"简写\"><a href=\"#简写\" class=\"headerlink\" title=\"简写\"></a>简写</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628003240.png\"></p>\n<h1 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h1><h2 id=\"数据单向绑定\"><a href=\"#数据单向绑定\" class=\"headerlink\" title=\"数据单向绑定\"></a>数据单向绑定</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010416.png\"></p>\n<h2 id=\"双向绑定\"><a href=\"#双向绑定\" class=\"headerlink\" title=\"双向绑定\"></a>双向绑定</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220628010725.png\"></p>\n"},{"title":"FastJson","date":"2020-05-20T15:28:06.000Z","cover":"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220523232857.png","_content":"# 什么是json\n**json是数据交换语言**\n# Json数据格式\n两种数据格式，对象与数组(List集合和Map集合不同)\n# TypeReference\n转换Map的过程中，不能设置泛型，没有泛型是不安全的，使用TypeReference，传入转后的Map集合\n结尾加上{},传入空的匿名内部类，因为TypeReference是protected修饰的构造方法，匿名内部类就是子类的内部对象\n```java\nMap<String,Student> map = JSON.parseObject(jsonString,new TypeReference<Map<String,Student>>(){});\n```\n# SerializerFeature \n进行序列化时，定制自己的需求的枚举\n\n## 设置空值为null\nfastJson序列化的时候，空值是不会序列化的\n```java\n Student student = new Student();\n        student.setId(\"1\");\n        student.setName(\"张三\");\n        student.setAge(null);\n        // 将student对象转换成Json字符串\n        String s = JSON.toJSONString(student, SerializerFeature.WriteMapNullValue);\n        System.out.println(s);\n```\n输出\n```json\n{\"age\":null,\"id\":\"1\",\"name\":\"张三\"}\n```\n## 设置空字段为双引\n```java\n        String s = JSON.toJSONString(student, SerializerFeature.WriteNullStringAsEmpty);\n```\n```json\n{\"age\":\"\",\"id\":\"1\",\"name\":\"张三\"}\n```\n## 设置空布尔为false\n```java\n        student.setIsStudent(null);\n        String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);\n\n```\n```json\n{\"age\":null,\"id\":\"1\",\"isStudent\":false,\"name\":\"张三\"}\n```\n\n## 格式化日期\n```java\nstudent.setBirthday(new Date());\nString s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);\n```\n```json\n{\"age\":null,\"birthday\":1653325416158,\"id\":\"1\",\"isStudent\":false,\"name\":\"张三\"}\n```\n添加格式化\n```java\n        String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse,SerializerFeature.WriteDateUseDateFormat);\n        System.out.println(s);\n```\n\n```json\n{\"age\":null,\"birthday\":\"2022-05-24 01:06:39\",\"id\":\"1\",\"isStudent\":false,\"name\":\"张三\"}\n```\n\n## 格式化输出\n```java\nString s = JSON.toJSONString(student, SerializerFeature.PrettyFormat,SerializerFeature.WriteDateUseDateFormat);\n        System.out.println(s);\n```\n```json\n{\n\t\"birthday\":\"2022-05-24 01:13:18\",\n\t\"id\":\"1\",\n\t\"name\":\"张三\"\n}\n```\n\n# JSONField\n## name\n```java\n    // name 指定序列化后的名字，\n@JSONField(name = \"studentName\")\nprivate String name;\n```\n```json\n{\n\t\"birthday\":\"2022-05-24 01:16:59\",\n\t\"id\":\"1\",\n\t\"studentName\":\"张三\"\n}\n```\n## ordinal\n```java\n    // 指定序列化后的顺序，值越小，越靠前\n    @JSONField(ordinal = 2)\n    private String age;\n```\n## format\n```java\n    @JSONField(format = \"YYYY-MM-dd\")\n    private Date birthday;\n```\n```json\n{\n\t\"birthday\":\"2022-22-24\",\n\t\"id\":\"1\",\n\t\"name\":\"张三\"\n}\n```\n## serialize\n该字段是否被序列化，默认true\n```java\n    @JSONField(serialize = false)\n    private String name;\n```\n```json\n{\n\t\"birthday\":\"2022-05-24\",\n\t\"id\":\"1\"\n}\n```\n## deserialize\n**在参与反序列化的过程中，这个字段不参与成为对象的一部分**\n```java\n    @JSONField(deserialize = false)\n    private String age;\n```\n\n\n\n\n\n\n","source":"_posts/note/FastJson.md","raw":"---\ntitle: FastJson\ndate: 2020-5-20 23:28:06\ncover: https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220523232857.png\ntags:\n- note\n---\n# 什么是json\n**json是数据交换语言**\n# Json数据格式\n两种数据格式，对象与数组(List集合和Map集合不同)\n# TypeReference\n转换Map的过程中，不能设置泛型，没有泛型是不安全的，使用TypeReference，传入转后的Map集合\n结尾加上{},传入空的匿名内部类，因为TypeReference是protected修饰的构造方法，匿名内部类就是子类的内部对象\n```java\nMap<String,Student> map = JSON.parseObject(jsonString,new TypeReference<Map<String,Student>>(){});\n```\n# SerializerFeature \n进行序列化时，定制自己的需求的枚举\n\n## 设置空值为null\nfastJson序列化的时候，空值是不会序列化的\n```java\n Student student = new Student();\n        student.setId(\"1\");\n        student.setName(\"张三\");\n        student.setAge(null);\n        // 将student对象转换成Json字符串\n        String s = JSON.toJSONString(student, SerializerFeature.WriteMapNullValue);\n        System.out.println(s);\n```\n输出\n```json\n{\"age\":null,\"id\":\"1\",\"name\":\"张三\"}\n```\n## 设置空字段为双引\n```java\n        String s = JSON.toJSONString(student, SerializerFeature.WriteNullStringAsEmpty);\n```\n```json\n{\"age\":\"\",\"id\":\"1\",\"name\":\"张三\"}\n```\n## 设置空布尔为false\n```java\n        student.setIsStudent(null);\n        String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);\n\n```\n```json\n{\"age\":null,\"id\":\"1\",\"isStudent\":false,\"name\":\"张三\"}\n```\n\n## 格式化日期\n```java\nstudent.setBirthday(new Date());\nString s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);\n```\n```json\n{\"age\":null,\"birthday\":1653325416158,\"id\":\"1\",\"isStudent\":false,\"name\":\"张三\"}\n```\n添加格式化\n```java\n        String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse,SerializerFeature.WriteDateUseDateFormat);\n        System.out.println(s);\n```\n\n```json\n{\"age\":null,\"birthday\":\"2022-05-24 01:06:39\",\"id\":\"1\",\"isStudent\":false,\"name\":\"张三\"}\n```\n\n## 格式化输出\n```java\nString s = JSON.toJSONString(student, SerializerFeature.PrettyFormat,SerializerFeature.WriteDateUseDateFormat);\n        System.out.println(s);\n```\n```json\n{\n\t\"birthday\":\"2022-05-24 01:13:18\",\n\t\"id\":\"1\",\n\t\"name\":\"张三\"\n}\n```\n\n# JSONField\n## name\n```java\n    // name 指定序列化后的名字，\n@JSONField(name = \"studentName\")\nprivate String name;\n```\n```json\n{\n\t\"birthday\":\"2022-05-24 01:16:59\",\n\t\"id\":\"1\",\n\t\"studentName\":\"张三\"\n}\n```\n## ordinal\n```java\n    // 指定序列化后的顺序，值越小，越靠前\n    @JSONField(ordinal = 2)\n    private String age;\n```\n## format\n```java\n    @JSONField(format = \"YYYY-MM-dd\")\n    private Date birthday;\n```\n```json\n{\n\t\"birthday\":\"2022-22-24\",\n\t\"id\":\"1\",\n\t\"name\":\"张三\"\n}\n```\n## serialize\n该字段是否被序列化，默认true\n```java\n    @JSONField(serialize = false)\n    private String name;\n```\n```json\n{\n\t\"birthday\":\"2022-05-24\",\n\t\"id\":\"1\"\n}\n```\n## deserialize\n**在参与反序列化的过程中，这个字段不参与成为对象的一部分**\n```java\n    @JSONField(deserialize = false)\n    private String age;\n```\n\n\n\n\n\n\n","slug":"note/FastJson","published":1,"updated":"2022-08-13T07:20:12.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx7000ao0ti4n169f3c","content":"<h1 id=\"什么是json\"><a href=\"#什么是json\" class=\"headerlink\" title=\"什么是json\"></a>什么是json</h1><p><strong>json是数据交换语言</strong></p>\n<h1 id=\"Json数据格式\"><a href=\"#Json数据格式\" class=\"headerlink\" title=\"Json数据格式\"></a>Json数据格式</h1><p>两种数据格式，对象与数组(List集合和Map集合不同)</p>\n<h1 id=\"TypeReference\"><a href=\"#TypeReference\" class=\"headerlink\" title=\"TypeReference\"></a>TypeReference</h1><p>转换Map的过程中，不能设置泛型，没有泛型是不安全的，使用TypeReference，传入转后的Map集合<br>结尾加上{},传入空的匿名内部类，因为TypeReference是protected修饰的构造方法，匿名内部类就是子类的内部对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String,Student&gt; map = JSON.parseObject(jsonString,<span class=\"keyword\">new</span> TypeReference&lt;Map&lt;String,Student&gt;&gt;()&#123;&#125;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"SerializerFeature\"><a href=\"#SerializerFeature\" class=\"headerlink\" title=\"SerializerFeature\"></a>SerializerFeature</h1><p>进行序列化时，定制自己的需求的枚举</p>\n<h2 id=\"设置空值为null\"><a href=\"#设置空值为null\" class=\"headerlink\" title=\"设置空值为null\"></a>设置空值为null</h2><p>fastJson序列化的时候，空值是不会序列化的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student student = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">       student.setId(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">       student.setName(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">       student.setAge(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">       <span class=\"comment\">// 将student对象转换成Json字符串</span></span><br><span class=\"line\">       String s = JSON.toJSONString(student, SerializerFeature.WriteMapNullValue);</span><br><span class=\"line\">       System.out.println(s);</span><br></pre></td></tr></table></figure>\n<p>输出</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置空字段为双引\"><a href=\"#设置空字段为双引\" class=\"headerlink\" title=\"设置空字段为双引\"></a>设置空字段为双引</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullStringAsEmpty);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"string\">&quot;&quot;</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置空布尔为false\"><a href=\"#设置空布尔为false\" class=\"headerlink\" title=\"设置空布尔为false\"></a>设置空布尔为false</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">student.setIsStudent(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;isStudent&quot;</span>:<span class=\"literal\">false</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"格式化日期\"><a href=\"#格式化日期\" class=\"headerlink\" title=\"格式化日期\"></a>格式化日期</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">student.setBirthday(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"number\">1653325416158</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;isStudent&quot;</span>:<span class=\"literal\">false</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>添加格式化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse,SerializerFeature.WriteDateUseDateFormat);</span><br><span class=\"line\">System.out.println(s);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24 01:06:39&quot;</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;isStudent&quot;</span>:<span class=\"literal\">false</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"格式化输出\"><a href=\"#格式化输出\" class=\"headerlink\" title=\"格式化输出\"></a>格式化输出</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.PrettyFormat,SerializerFeature.WriteDateUseDateFormat);</span><br><span class=\"line\">        System.out.println(s);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24 01:13:18&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JSONField\"><a href=\"#JSONField\" class=\"headerlink\" title=\"JSONField\"></a>JSONField</h1><h2 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">// name 指定序列化后的名字，</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(name = &quot;studentName&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String name;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24 01:16:59&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;studentName&quot;</span>:<span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ordinal\"><a href=\"#ordinal\" class=\"headerlink\" title=\"ordinal\"></a>ordinal</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 指定序列化后的顺序，值越小，越靠前</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(ordinal = 2)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String age;</span><br></pre></td></tr></table></figure>\n<h2 id=\"format\"><a href=\"#format\" class=\"headerlink\" title=\"format\"></a>format</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JSONField(format = &quot;YYYY-MM-dd&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Date birthday;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-22-24&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"serialize\"><a href=\"#serialize\" class=\"headerlink\" title=\"serialize\"></a>serialize</h2><p>该字段是否被序列化，默认true</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JSONField(serialize = false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String name;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"deserialize\"><a href=\"#deserialize\" class=\"headerlink\" title=\"deserialize\"></a>deserialize</h2><p><strong>在参与反序列化的过程中，这个字段不参与成为对象的一部分</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JSONField(deserialize = false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String age;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"什么是json\"><a href=\"#什么是json\" class=\"headerlink\" title=\"什么是json\"></a>什么是json</h1><p><strong>json是数据交换语言</strong></p>\n<h1 id=\"Json数据格式\"><a href=\"#Json数据格式\" class=\"headerlink\" title=\"Json数据格式\"></a>Json数据格式</h1><p>两种数据格式，对象与数组(List集合和Map集合不同)</p>\n<h1 id=\"TypeReference\"><a href=\"#TypeReference\" class=\"headerlink\" title=\"TypeReference\"></a>TypeReference</h1><p>转换Map的过程中，不能设置泛型，没有泛型是不安全的，使用TypeReference，传入转后的Map集合<br>结尾加上{},传入空的匿名内部类，因为TypeReference是protected修饰的构造方法，匿名内部类就是子类的内部对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String,Student&gt; map = JSON.parseObject(jsonString,<span class=\"keyword\">new</span> TypeReference&lt;Map&lt;String,Student&gt;&gt;()&#123;&#125;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"SerializerFeature\"><a href=\"#SerializerFeature\" class=\"headerlink\" title=\"SerializerFeature\"></a>SerializerFeature</h1><p>进行序列化时，定制自己的需求的枚举</p>\n<h2 id=\"设置空值为null\"><a href=\"#设置空值为null\" class=\"headerlink\" title=\"设置空值为null\"></a>设置空值为null</h2><p>fastJson序列化的时候，空值是不会序列化的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student student = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">       student.setId(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">       student.setName(<span class=\"string\">&quot;张三&quot;</span>);</span><br><span class=\"line\">       student.setAge(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">       <span class=\"comment\">// 将student对象转换成Json字符串</span></span><br><span class=\"line\">       String s = JSON.toJSONString(student, SerializerFeature.WriteMapNullValue);</span><br><span class=\"line\">       System.out.println(s);</span><br></pre></td></tr></table></figure>\n<p>输出</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置空字段为双引\"><a href=\"#设置空字段为双引\" class=\"headerlink\" title=\"设置空字段为双引\"></a>设置空字段为双引</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullStringAsEmpty);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"string\">&quot;&quot;</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置空布尔为false\"><a href=\"#设置空布尔为false\" class=\"headerlink\" title=\"设置空布尔为false\"></a>设置空布尔为false</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">student.setIsStudent(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;isStudent&quot;</span>:<span class=\"literal\">false</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"格式化日期\"><a href=\"#格式化日期\" class=\"headerlink\" title=\"格式化日期\"></a>格式化日期</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">student.setBirthday(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"number\">1653325416158</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;isStudent&quot;</span>:<span class=\"literal\">false</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>添加格式化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.WriteNullBooleanAsFalse,SerializerFeature.WriteDateUseDateFormat);</span><br><span class=\"line\">System.out.println(s);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"attr\">&quot;age&quot;</span>:<span class=\"literal\">null</span>,<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24 01:06:39&quot;</span>,<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"attr\">&quot;isStudent&quot;</span>:<span class=\"literal\">false</span>,<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"格式化输出\"><a href=\"#格式化输出\" class=\"headerlink\" title=\"格式化输出\"></a>格式化输出</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String s = JSON.toJSONString(student, SerializerFeature.PrettyFormat,SerializerFeature.WriteDateUseDateFormat);</span><br><span class=\"line\">        System.out.println(s);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24 01:13:18&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"JSONField\"><a href=\"#JSONField\" class=\"headerlink\" title=\"JSONField\"></a>JSONField</h1><h2 id=\"name\"><a href=\"#name\" class=\"headerlink\" title=\"name\"></a>name</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">// name 指定序列化后的名字，</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(name = &quot;studentName&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String name;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24 01:16:59&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;studentName&quot;</span>:<span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ordinal\"><a href=\"#ordinal\" class=\"headerlink\" title=\"ordinal\"></a>ordinal</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 指定序列化后的顺序，值越小，越靠前</span></span><br><span class=\"line\"><span class=\"meta\">@JSONField(ordinal = 2)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String age;</span><br></pre></td></tr></table></figure>\n<h2 id=\"format\"><a href=\"#format\" class=\"headerlink\" title=\"format\"></a>format</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JSONField(format = &quot;YYYY-MM-dd&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Date birthday;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-22-24&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"serialize\"><a href=\"#serialize\" class=\"headerlink\" title=\"serialize\"></a>serialize</h2><p>该字段是否被序列化，默认true</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JSONField(serialize = false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String name;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">&quot;birthday&quot;</span>:<span class=\"string\">&quot;2022-05-24&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">&quot;id&quot;</span>:<span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"deserialize\"><a href=\"#deserialize\" class=\"headerlink\" title=\"deserialize\"></a>deserialize</h2><p><strong>在参与反序列化的过程中，这个字段不参与成为对象的一部分</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JSONField(deserialize = false)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> String age;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n"},{"title":"MySql数据库单表查询","date":"2022-06-20T11:39:05.000Z","cover":"/img/9.png","_content":"很多高性能的应用都会对关联查询进行分解。简单地，可以对每个表进行一次单表查询，然后将结果在应用程序中进行关联。例如，下面这个查询：\n\n```java\nselect * from tag\n        join tag_post on tag_post.tag_id=tag.id\n        join post on tag_post.post_id=post.id\n        where tag.tag='mysql';\n```\n可以分解成下面这些查询来代替：\n\n```java\nSelect * from tag where tag='mysql';\nSelect * from tag_post where tag_id=1234;\nSelect * from post where id in(123,456,567,9989,8909);\n```\n\n事实上，用分解关联查询的方式重构查询具有如下优势：（高并发、高性能的应用中，一般建议使用单表查询）\n1. 让缓存的效率更高。许多应用程序可以方便地缓存单表查询对应的结果对象。另外对于 MySQL 的查询缓存来说，如果关联中的某个表发生了变化，那么就无法使用查询缓存了，而拆分后，如果某个表很少改变，那么基于该表的查询就可以重复利用查询缓存结果了。\n\n2. 将查询分解后，执行单个查询可以减少锁的竞争。\n\n3. 在应用层做关联，可以更容易对数据库进行拆分，更容易做到高性能和可扩展。\n\n4. 查询本身效率也可能会有所提升。\n\n5. 可以减少冗余记录的查询。\n\n6. 更进一步，这样做相当于在应用中实现了哈希关联，而不是使用 MySQL 的嵌套环关联，某些场景哈希关联的效率更高很多。\n\n7. 单表查询有利于后期数据量大了分库分表，如果联合查询的话，一旦分库，原来的 sql 都需要改动。\n\n8. 上次看到某个 CTO 技术分享，公司规定底层禁止用 join 联合查询。数据大的时候确实慢。\n\n9. 联合查询或许确实快，但是 mysql 的资源通常比程序代码的资源紧张的多。\n\n","source":"_posts/note/MySql数据库单表查询.md","raw":"---\ntitle: MySql数据库单表查询\ndate: 2022-6-20 19:39:05\ncover: \ntags:\n- note\n---\n很多高性能的应用都会对关联查询进行分解。简单地，可以对每个表进行一次单表查询，然后将结果在应用程序中进行关联。例如，下面这个查询：\n\n```java\nselect * from tag\n        join tag_post on tag_post.tag_id=tag.id\n        join post on tag_post.post_id=post.id\n        where tag.tag='mysql';\n```\n可以分解成下面这些查询来代替：\n\n```java\nSelect * from tag where tag='mysql';\nSelect * from tag_post where tag_id=1234;\nSelect * from post where id in(123,456,567,9989,8909);\n```\n\n事实上，用分解关联查询的方式重构查询具有如下优势：（高并发、高性能的应用中，一般建议使用单表查询）\n1. 让缓存的效率更高。许多应用程序可以方便地缓存单表查询对应的结果对象。另外对于 MySQL 的查询缓存来说，如果关联中的某个表发生了变化，那么就无法使用查询缓存了，而拆分后，如果某个表很少改变，那么基于该表的查询就可以重复利用查询缓存结果了。\n\n2. 将查询分解后，执行单个查询可以减少锁的竞争。\n\n3. 在应用层做关联，可以更容易对数据库进行拆分，更容易做到高性能和可扩展。\n\n4. 查询本身效率也可能会有所提升。\n\n5. 可以减少冗余记录的查询。\n\n6. 更进一步，这样做相当于在应用中实现了哈希关联，而不是使用 MySQL 的嵌套环关联，某些场景哈希关联的效率更高很多。\n\n7. 单表查询有利于后期数据量大了分库分表，如果联合查询的话，一旦分库，原来的 sql 都需要改动。\n\n8. 上次看到某个 CTO 技术分享，公司规定底层禁止用 join 联合查询。数据大的时候确实慢。\n\n9. 联合查询或许确实快，但是 mysql 的资源通常比程序代码的资源紧张的多。\n\n","slug":"note/MySql数据库单表查询","published":1,"updated":"2022-08-12T16:13:29.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx8000bo0ti51o5boet","content":"<p>很多高性能的应用都会对关联查询进行分解。简单地，可以对每个表进行一次单表查询，然后将结果在应用程序中进行关联。例如，下面这个查询：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tag</span><br><span class=\"line\">        join tag_post on tag_post.tag_id=tag.id</span><br><span class=\"line\">        join post on tag_post.post_id=post.id</span><br><span class=\"line\">        where tag.tag=<span class=\"string\">&#x27;mysql&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>可以分解成下面这些查询来代替：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Select * from tag where tag=<span class=\"string\">&#x27;mysql&#x27;</span>;</span><br><span class=\"line\">Select * from tag_post where tag_id=<span class=\"number\">1234</span>;</span><br><span class=\"line\">Select * <span class=\"function\">from post where id <span class=\"title\">in</span><span class=\"params\">(<span class=\"number\">123</span>,<span class=\"number\">456</span>,<span class=\"number\">567</span>,<span class=\"number\">9989</span>,<span class=\"number\">8909</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>事实上，用分解关联查询的方式重构查询具有如下优势：（高并发、高性能的应用中，一般建议使用单表查询）</p>\n<ol>\n<li><p>让缓存的效率更高。许多应用程序可以方便地缓存单表查询对应的结果对象。另外对于 MySQL 的查询缓存来说，如果关联中的某个表发生了变化，那么就无法使用查询缓存了，而拆分后，如果某个表很少改变，那么基于该表的查询就可以重复利用查询缓存结果了。</p>\n</li>\n<li><p>将查询分解后，执行单个查询可以减少锁的竞争。</p>\n</li>\n<li><p>在应用层做关联，可以更容易对数据库进行拆分，更容易做到高性能和可扩展。</p>\n</li>\n<li><p>查询本身效率也可能会有所提升。</p>\n</li>\n<li><p>可以减少冗余记录的查询。</p>\n</li>\n<li><p>更进一步，这样做相当于在应用中实现了哈希关联，而不是使用 MySQL 的嵌套环关联，某些场景哈希关联的效率更高很多。</p>\n</li>\n<li><p>单表查询有利于后期数据量大了分库分表，如果联合查询的话，一旦分库，原来的 sql 都需要改动。</p>\n</li>\n<li><p>上次看到某个 CTO 技术分享，公司规定底层禁止用 join 联合查询。数据大的时候确实慢。</p>\n</li>\n<li><p>联合查询或许确实快，但是 mysql 的资源通常比程序代码的资源紧张的多。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>很多高性能的应用都会对关联查询进行分解。简单地，可以对每个表进行一次单表查询，然后将结果在应用程序中进行关联。例如，下面这个查询：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from tag</span><br><span class=\"line\">        join tag_post on tag_post.tag_id=tag.id</span><br><span class=\"line\">        join post on tag_post.post_id=post.id</span><br><span class=\"line\">        where tag.tag=<span class=\"string\">&#x27;mysql&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>可以分解成下面这些查询来代替：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Select * from tag where tag=<span class=\"string\">&#x27;mysql&#x27;</span>;</span><br><span class=\"line\">Select * from tag_post where tag_id=<span class=\"number\">1234</span>;</span><br><span class=\"line\">Select * <span class=\"function\">from post where id <span class=\"title\">in</span><span class=\"params\">(<span class=\"number\">123</span>,<span class=\"number\">456</span>,<span class=\"number\">567</span>,<span class=\"number\">9989</span>,<span class=\"number\">8909</span>)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>事实上，用分解关联查询的方式重构查询具有如下优势：（高并发、高性能的应用中，一般建议使用单表查询）</p>\n<ol>\n<li><p>让缓存的效率更高。许多应用程序可以方便地缓存单表查询对应的结果对象。另外对于 MySQL 的查询缓存来说，如果关联中的某个表发生了变化，那么就无法使用查询缓存了，而拆分后，如果某个表很少改变，那么基于该表的查询就可以重复利用查询缓存结果了。</p>\n</li>\n<li><p>将查询分解后，执行单个查询可以减少锁的竞争。</p>\n</li>\n<li><p>在应用层做关联，可以更容易对数据库进行拆分，更容易做到高性能和可扩展。</p>\n</li>\n<li><p>查询本身效率也可能会有所提升。</p>\n</li>\n<li><p>可以减少冗余记录的查询。</p>\n</li>\n<li><p>更进一步，这样做相当于在应用中实现了哈希关联，而不是使用 MySQL 的嵌套环关联，某些场景哈希关联的效率更高很多。</p>\n</li>\n<li><p>单表查询有利于后期数据量大了分库分表，如果联合查询的话，一旦分库，原来的 sql 都需要改动。</p>\n</li>\n<li><p>上次看到某个 CTO 技术分享，公司规定底层禁止用 join 联合查询。数据大的时候确实慢。</p>\n</li>\n<li><p>联合查询或许确实快，但是 mysql 的资源通常比程序代码的资源紧张的多。</p>\n</li>\n</ol>\n"},{"title":"CompletableFuture常用记录","date":"2020-05-26T16:52:44.000Z","cover":"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527005307.png","_content":"\n# 工具类\n```java\npublic class SmallTool {\n\n    public static void  sleepMillis(Integer millis){\n        try {\n            Thread.sleep(millis);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void printTimeAndThread(String  tag){\n        String result = new StringJoiner(\"\\t|\\t\")\n                .add(String.valueOf(System.currentTimeMillis()))\n                .add(String.valueOf(Thread.currentThread().getId()))\n                .add(Thread.currentThread().getName())\n                .add(tag)\n                .toString();\n        System.out.println(result);\n    }\n}\n\n```\n# 例子一\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我进了饭堂\");\n        SmallTool.printTimeAndThread(\"我点了滑鸡饭\");\n        // supplyAsync是java的函数式编程接口，叫提供者者，\n        // 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"厨师炒菜\");\n            SmallTool.sleepMillis(200);\n            SmallTool.printTimeAndThread(\"厨师打饭\");\n            SmallTool.sleepMillis(100);\n            return \"滑鸡 + 饭 好了\";\n        });\n        SmallTool.printTimeAndThread(\"我在打王者\");\n        // join等待任务执行结束，返回任务结果\n        SmallTool.printTimeAndThread(String.format(\"%s,小白开吃\",stringCompletableFuture.join()));\n    }\n\n```\n输出结果\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527011927.png)\n# 例子二\n一般来说，打饭这件事情是服务员干的\n```java\n\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我进了饭堂\");\n        SmallTool.printTimeAndThread(\"我点了滑鸡饭\");\n        // supplyAsync是java的函数式编程接口，叫提供者者，\n        // 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"厨师炒菜\");\n            SmallTool.sleepMillis(200);\n            return \"滑鸡\";\n            // thenCompose要求我们传入一个Function接口，传入参数T，经过转换后返回R\n            // 将前面任务的结果返回给下一个任务\n        }).thenCompose(s -> CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"服务员打饭\");\n            SmallTool.sleepMillis(100);\n            return s+\"米饭\";\n        }));\n        SmallTool.printTimeAndThread(\"我在打王者\");\n        // join等待任务执行结束，返回任务结果\n        SmallTool.printTimeAndThread(String.format(\"%s,小白开吃\",stringCompletableFuture.join()));\n    }\n```\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527012705.png)\n# 例子三\n服务员还没做饭，要求厨师炒菜的时候，服务员同时蒸饭,要求炒菜和蒸饭同时返回，才能执行炒菜\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我进了饭堂\");\n        SmallTool.printTimeAndThread(\"我点了滑鸡饭\");\n        // supplyAsync是java的函数式编程接口，叫提供者者，\n        // 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"厨师炒菜\");\n            SmallTool.sleepMillis(200);\n            return \"滑鸡\";\n        }).thenCombine(CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"服务员蒸饭\");\n            SmallTool.sleepMillis(300);\n            return \"米饭\";\n        }),(s, s2) -> {\n            SmallTool.printTimeAndThread(\"服务员打饭\");\n            SmallTool.sleepMillis(100);\n            return String.format(\"%s+%s 好了\",s,s2);\n        });\n        SmallTool.printTimeAndThread(\"我在打王者\");\n        // join等待任务执行结束，返回任务结果\n        SmallTool.printTimeAndThread(String.format(\"%s,小白开吃\",stringCompletableFuture.join()));\n    }\n}\n```\n# 三个例子的基本模型\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527013220.png)\n\n# 例子四\n**我吃完了，准备结账，要求开发票，服务员收款后，要求另一个人开发票，开发票的同时，接到电话，拿到发票，回家养猪**\n使用thenCompose也能执行\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我吃完了\");\n        SmallTool.printTimeAndThread(\"结账，并且要求开发票\");\n\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"服务员收款 500元\");\n            SmallTool.sleepMillis(100);\n            return \"500\";\n        }).thenApplyAsync(s -> {\n            SmallTool.printTimeAndThread(String.format(\"服务员开发票中 面额 %s元\", s));\n            SmallTool.sleepMillis(200);\n            return String.format(\"%s元发票\", s);\n        });\n        SmallTool.printTimeAndThread(\"我接到电话\");\n        SmallTool.printTimeAndThread(String.format(\"我拿到%s,准备回家\",stringCompletableFuture.join()));\n    }\n\n```\n# 例子五\n我等车，等100路或200路公交都能到家，谁先来上谁\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"来到公交站\");\n        SmallTool.printTimeAndThread(\"等待100或200路公交\");\n\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待100路公交车\");\n            SmallTool.sleepMillis(100);\n            return \"100路来了\";\n        }).applyToEither(CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待200路公交\");\n            SmallTool.sleepMillis(200);\n            return \"200路来了\";\n        }),s -> s);\n        SmallTool.printTimeAndThread(String.format(\"%s,我上车了\",stringCompletableFuture.join()));\n    }\n```\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527015316.png)\n# 例子六\n**我坐在车上,司机撞树上了，只能打车回家了**\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"来到公交站\");\n        SmallTool.printTimeAndThread(\"等待100或200路公交\");\n\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待100路公交车\");\n            SmallTool.sleepMillis(100);\n            return \"100路来了\";\n        }).applyToEither(CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待200路公交\");\n            SmallTool.sleepMillis(200);\n            return \"200路来了\";\n        }),s -> {\n            SmallTool.printTimeAndThread(s);\n            if (s.startsWith(\"100\")){\n                throw new RuntimeException(\"撞树上了\");\n            }\n            return s;\n        }).exceptionally(throwable -> {\n            SmallTool.printTimeAndThread(throwable.getMessage());\n            SmallTool.printTimeAndThread(\"打出租车回家\");\n            return \"出租车到了\";\n        });\n        SmallTool.printTimeAndThread(String.format(\"%s,我上车了\",stringCompletableFuture.join()));\n    }\n\n```\n# 例子七\n**如果100路没来之前，就撞树上了，那么应该坐上200路公交**\n","source":"_posts/note/CompletableFuture.md","raw":"---\ntitle: CompletableFuture常用记录\ndate: 2020-5-27 00:52:44\ncover: https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527005307.png\ntags:\n- note\n---\n\n# 工具类\n```java\npublic class SmallTool {\n\n    public static void  sleepMillis(Integer millis){\n        try {\n            Thread.sleep(millis);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void printTimeAndThread(String  tag){\n        String result = new StringJoiner(\"\\t|\\t\")\n                .add(String.valueOf(System.currentTimeMillis()))\n                .add(String.valueOf(Thread.currentThread().getId()))\n                .add(Thread.currentThread().getName())\n                .add(tag)\n                .toString();\n        System.out.println(result);\n    }\n}\n\n```\n# 例子一\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我进了饭堂\");\n        SmallTool.printTimeAndThread(\"我点了滑鸡饭\");\n        // supplyAsync是java的函数式编程接口，叫提供者者，\n        // 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"厨师炒菜\");\n            SmallTool.sleepMillis(200);\n            SmallTool.printTimeAndThread(\"厨师打饭\");\n            SmallTool.sleepMillis(100);\n            return \"滑鸡 + 饭 好了\";\n        });\n        SmallTool.printTimeAndThread(\"我在打王者\");\n        // join等待任务执行结束，返回任务结果\n        SmallTool.printTimeAndThread(String.format(\"%s,小白开吃\",stringCompletableFuture.join()));\n    }\n\n```\n输出结果\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527011927.png)\n# 例子二\n一般来说，打饭这件事情是服务员干的\n```java\n\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我进了饭堂\");\n        SmallTool.printTimeAndThread(\"我点了滑鸡饭\");\n        // supplyAsync是java的函数式编程接口，叫提供者者，\n        // 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"厨师炒菜\");\n            SmallTool.sleepMillis(200);\n            return \"滑鸡\";\n            // thenCompose要求我们传入一个Function接口，传入参数T，经过转换后返回R\n            // 将前面任务的结果返回给下一个任务\n        }).thenCompose(s -> CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"服务员打饭\");\n            SmallTool.sleepMillis(100);\n            return s+\"米饭\";\n        }));\n        SmallTool.printTimeAndThread(\"我在打王者\");\n        // join等待任务执行结束，返回任务结果\n        SmallTool.printTimeAndThread(String.format(\"%s,小白开吃\",stringCompletableFuture.join()));\n    }\n```\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527012705.png)\n# 例子三\n服务员还没做饭，要求厨师炒菜的时候，服务员同时蒸饭,要求炒菜和蒸饭同时返回，才能执行炒菜\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我进了饭堂\");\n        SmallTool.printTimeAndThread(\"我点了滑鸡饭\");\n        // supplyAsync是java的函数式编程接口，叫提供者者，\n        // 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"厨师炒菜\");\n            SmallTool.sleepMillis(200);\n            return \"滑鸡\";\n        }).thenCombine(CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"服务员蒸饭\");\n            SmallTool.sleepMillis(300);\n            return \"米饭\";\n        }),(s, s2) -> {\n            SmallTool.printTimeAndThread(\"服务员打饭\");\n            SmallTool.sleepMillis(100);\n            return String.format(\"%s+%s 好了\",s,s2);\n        });\n        SmallTool.printTimeAndThread(\"我在打王者\");\n        // join等待任务执行结束，返回任务结果\n        SmallTool.printTimeAndThread(String.format(\"%s,小白开吃\",stringCompletableFuture.join()));\n    }\n}\n```\n# 三个例子的基本模型\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527013220.png)\n\n# 例子四\n**我吃完了，准备结账，要求开发票，服务员收款后，要求另一个人开发票，开发票的同时，接到电话，拿到发票，回家养猪**\n使用thenCompose也能执行\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"我吃完了\");\n        SmallTool.printTimeAndThread(\"结账，并且要求开发票\");\n\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"服务员收款 500元\");\n            SmallTool.sleepMillis(100);\n            return \"500\";\n        }).thenApplyAsync(s -> {\n            SmallTool.printTimeAndThread(String.format(\"服务员开发票中 面额 %s元\", s));\n            SmallTool.sleepMillis(200);\n            return String.format(\"%s元发票\", s);\n        });\n        SmallTool.printTimeAndThread(\"我接到电话\");\n        SmallTool.printTimeAndThread(String.format(\"我拿到%s,准备回家\",stringCompletableFuture.join()));\n    }\n\n```\n# 例子五\n我等车，等100路或200路公交都能到家，谁先来上谁\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"来到公交站\");\n        SmallTool.printTimeAndThread(\"等待100或200路公交\");\n\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待100路公交车\");\n            SmallTool.sleepMillis(100);\n            return \"100路来了\";\n        }).applyToEither(CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待200路公交\");\n            SmallTool.sleepMillis(200);\n            return \"200路来了\";\n        }),s -> s);\n        SmallTool.printTimeAndThread(String.format(\"%s,我上车了\",stringCompletableFuture.join()));\n    }\n```\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527015316.png)\n# 例子六\n**我坐在车上,司机撞树上了，只能打车回家了**\n```java\n    public static void main(String[] args) {\n        SmallTool.printTimeAndThread(\"来到公交站\");\n        SmallTool.printTimeAndThread(\"等待100或200路公交\");\n\n        CompletableFuture<String> stringCompletableFuture = CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待100路公交车\");\n            SmallTool.sleepMillis(100);\n            return \"100路来了\";\n        }).applyToEither(CompletableFuture.supplyAsync(() -> {\n            SmallTool.printTimeAndThread(\"等待200路公交\");\n            SmallTool.sleepMillis(200);\n            return \"200路来了\";\n        }),s -> {\n            SmallTool.printTimeAndThread(s);\n            if (s.startsWith(\"100\")){\n                throw new RuntimeException(\"撞树上了\");\n            }\n            return s;\n        }).exceptionally(throwable -> {\n            SmallTool.printTimeAndThread(throwable.getMessage());\n            SmallTool.printTimeAndThread(\"打出租车回家\");\n            return \"出租车到了\";\n        });\n        SmallTool.printTimeAndThread(String.format(\"%s,我上车了\",stringCompletableFuture.join()));\n    }\n\n```\n# 例子七\n**如果100路没来之前，就撞树上了，那么应该坐上200路公交**\n","slug":"note/CompletableFuture","published":1,"updated":"2022-08-12T16:13:29.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx9000do0ti21awg4s0","content":"<h1 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmallTool</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span>  <span class=\"title\">sleepMillis</span><span class=\"params\">(Integer millis)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(millis);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printTimeAndThread</span><span class=\"params\">(String  tag)</span></span>&#123;</span><br><span class=\"line\">        String result = <span class=\"keyword\">new</span> StringJoiner(<span class=\"string\">&quot;\\t|\\t&quot;</span>)</span><br><span class=\"line\">                .add(String.valueOf(System.currentTimeMillis()))</span><br><span class=\"line\">                .add(String.valueOf(Thread.currentThread().getId()))</span><br><span class=\"line\">                .add(Thread.currentThread().getName())</span><br><span class=\"line\">                .add(tag)</span><br><span class=\"line\">                .toString();</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"例子一\"><a href=\"#例子一\" class=\"headerlink\" title=\"例子一\"></a>例子一</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我进了饭堂&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我点了滑鸡饭&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// supplyAsync是java的函数式编程接口，叫提供者者，</span></span><br><span class=\"line\">    <span class=\"comment\">// 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String</span></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师炒菜&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师打饭&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;滑鸡 + 饭 好了&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我在打王者&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// join等待任务执行结束，返回任务结果</span></span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,小白开吃&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>输出结果<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527011927.png\"></p>\n<h1 id=\"例子二\"><a href=\"#例子二\" class=\"headerlink\" title=\"例子二\"></a>例子二</h1><p>一般来说，打饭这件事情是服务员干的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我进了饭堂&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我点了滑鸡饭&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// supplyAsync是java的函数式编程接口，叫提供者者，</span></span><br><span class=\"line\">    <span class=\"comment\">// 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String</span></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师炒菜&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;滑鸡&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">// thenCompose要求我们传入一个Function接口，传入参数T，经过转换后返回R</span></span><br><span class=\"line\">        <span class=\"comment\">// 将前面任务的结果返回给下一个任务</span></span><br><span class=\"line\">    &#125;).thenCompose(s -&gt; CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员打饭&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s+<span class=\"string\">&quot;米饭&quot;</span>;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我在打王者&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// join等待任务执行结束，返回任务结果</span></span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,小白开吃&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527012705.png\"></p>\n<h1 id=\"例子三\"><a href=\"#例子三\" class=\"headerlink\" title=\"例子三\"></a>例子三</h1><p>服务员还没做饭，要求厨师炒菜的时候，服务员同时蒸饭,要求炒菜和蒸饭同时返回，才能执行炒菜</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;我进了饭堂&quot;</span>);</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;我点了滑鸡饭&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// supplyAsync是java的函数式编程接口，叫提供者者，</span></span><br><span class=\"line\">        <span class=\"comment\">// 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String</span></span><br><span class=\"line\">        CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">            SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师炒菜&quot;</span>);</span><br><span class=\"line\">            SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;滑鸡&quot;</span>;</span><br><span class=\"line\">        &#125;).thenCombine(CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">            SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员蒸饭&quot;</span>);</span><br><span class=\"line\">            SmallTool.sleepMillis(<span class=\"number\">300</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;米饭&quot;</span>;</span><br><span class=\"line\">        &#125;),(s, s2) -&gt; &#123;</span><br><span class=\"line\">            SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员打饭&quot;</span>);</span><br><span class=\"line\">            SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;%s+%s 好了&quot;</span>,s,s2);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;我在打王者&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// join等待任务执行结束，返回任务结果</span></span><br><span class=\"line\">        SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,小白开吃&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"三个例子的基本模型\"><a href=\"#三个例子的基本模型\" class=\"headerlink\" title=\"三个例子的基本模型\"></a>三个例子的基本模型</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527013220.png\"></p>\n<h1 id=\"例子四\"><a href=\"#例子四\" class=\"headerlink\" title=\"例子四\"></a>例子四</h1><p><strong>我吃完了，准备结账，要求开发票，服务员收款后，要求另一个人开发票，开发票的同时，接到电话，拿到发票，回家养猪</strong><br>使用thenCompose也能执行</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我吃完了&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;结账，并且要求开发票&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员收款 500元&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;500&quot;</span>;</span><br><span class=\"line\">    &#125;).thenApplyAsync(s -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;服务员开发票中 面额 %s元&quot;</span>, s));</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;%s元发票&quot;</span>, s);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我接到电话&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;我拿到%s,准备回家&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"例子五\"><a href=\"#例子五\" class=\"headerlink\" title=\"例子五\"></a>例子五</h1><p>我等车，等100路或200路公交都能到家，谁先来上谁</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;来到公交站&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100或200路公交&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100路公交车&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;100路来了&quot;</span>;</span><br><span class=\"line\">    &#125;).applyToEither(CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待200路公交&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;200路来了&quot;</span>;</span><br><span class=\"line\">    &#125;),s -&gt; s);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,我上车了&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527015316.png\"></p>\n<h1 id=\"例子六\"><a href=\"#例子六\" class=\"headerlink\" title=\"例子六\"></a>例子六</h1><p><strong>我坐在车上,司机撞树上了，只能打车回家了</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;来到公交站&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100或200路公交&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100路公交车&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;100路来了&quot;</span>;</span><br><span class=\"line\">    &#125;).applyToEither(CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待200路公交&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;200路来了&quot;</span>;</span><br><span class=\"line\">    &#125;),s -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(s);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.startsWith(<span class=\"string\">&quot;100&quot;</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;撞树上了&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    &#125;).exceptionally(throwable -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(throwable.getMessage());</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;打出租车回家&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;出租车到了&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,我上车了&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"例子七\"><a href=\"#例子七\" class=\"headerlink\" title=\"例子七\"></a>例子七</h1><p><strong>如果100路没来之前，就撞树上了，那么应该坐上200路公交</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SmallTool</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span>  <span class=\"title\">sleepMillis</span><span class=\"params\">(Integer millis)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Thread.sleep(millis);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">printTimeAndThread</span><span class=\"params\">(String  tag)</span></span>&#123;</span><br><span class=\"line\">        String result = <span class=\"keyword\">new</span> StringJoiner(<span class=\"string\">&quot;\\t|\\t&quot;</span>)</span><br><span class=\"line\">                .add(String.valueOf(System.currentTimeMillis()))</span><br><span class=\"line\">                .add(String.valueOf(Thread.currentThread().getId()))</span><br><span class=\"line\">                .add(Thread.currentThread().getName())</span><br><span class=\"line\">                .add(tag)</span><br><span class=\"line\">                .toString();</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"例子一\"><a href=\"#例子一\" class=\"headerlink\" title=\"例子一\"></a>例子一</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我进了饭堂&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我点了滑鸡饭&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// supplyAsync是java的函数式编程接口，叫提供者者，</span></span><br><span class=\"line\">    <span class=\"comment\">// 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String</span></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师炒菜&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师打饭&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;滑鸡 + 饭 好了&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我在打王者&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// join等待任务执行结束，返回任务结果</span></span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,小白开吃&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>输出结果<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527011927.png\"></p>\n<h1 id=\"例子二\"><a href=\"#例子二\" class=\"headerlink\" title=\"例子二\"></a>例子二</h1><p>一般来说，打饭这件事情是服务员干的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我进了饭堂&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我点了滑鸡饭&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// supplyAsync是java的函数式编程接口，叫提供者者，</span></span><br><span class=\"line\">    <span class=\"comment\">// 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String</span></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师炒菜&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;滑鸡&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">// thenCompose要求我们传入一个Function接口，传入参数T，经过转换后返回R</span></span><br><span class=\"line\">        <span class=\"comment\">// 将前面任务的结果返回给下一个任务</span></span><br><span class=\"line\">    &#125;).thenCompose(s -&gt; CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员打饭&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s+<span class=\"string\">&quot;米饭&quot;</span>;</span><br><span class=\"line\">    &#125;));</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我在打王者&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// join等待任务执行结束，返回任务结果</span></span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,小白开吃&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527012705.png\"></p>\n<h1 id=\"例子三\"><a href=\"#例子三\" class=\"headerlink\" title=\"例子三\"></a>例子三</h1><p>服务员还没做饭，要求厨师炒菜的时候，服务员同时蒸饭,要求炒菜和蒸饭同时返回，才能执行炒菜</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;我进了饭堂&quot;</span>);</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;我点了滑鸡饭&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// supplyAsync是java的函数式编程接口，叫提供者者，</span></span><br><span class=\"line\">        <span class=\"comment\">// 没有入参，只有一个返回值,因为我们返回了字符串，所以CompletableFuture的泛型是String</span></span><br><span class=\"line\">        CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">            SmallTool.printTimeAndThread(<span class=\"string\">&quot;厨师炒菜&quot;</span>);</span><br><span class=\"line\">            SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;滑鸡&quot;</span>;</span><br><span class=\"line\">        &#125;).thenCombine(CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">            SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员蒸饭&quot;</span>);</span><br><span class=\"line\">            SmallTool.sleepMillis(<span class=\"number\">300</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;米饭&quot;</span>;</span><br><span class=\"line\">        &#125;),(s, s2) -&gt; &#123;</span><br><span class=\"line\">            SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员打饭&quot;</span>);</span><br><span class=\"line\">            SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;%s+%s 好了&quot;</span>,s,s2);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;我在打王者&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// join等待任务执行结束，返回任务结果</span></span><br><span class=\"line\">        SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,小白开吃&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"三个例子的基本模型\"><a href=\"#三个例子的基本模型\" class=\"headerlink\" title=\"三个例子的基本模型\"></a>三个例子的基本模型</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527013220.png\"></p>\n<h1 id=\"例子四\"><a href=\"#例子四\" class=\"headerlink\" title=\"例子四\"></a>例子四</h1><p><strong>我吃完了，准备结账，要求开发票，服务员收款后，要求另一个人开发票，开发票的同时，接到电话，拿到发票，回家养猪</strong><br>使用thenCompose也能执行</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我吃完了&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;结账，并且要求开发票&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;服务员收款 500元&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;500&quot;</span>;</span><br><span class=\"line\">    &#125;).thenApplyAsync(s -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;服务员开发票中 面额 %s元&quot;</span>, s));</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> String.format(<span class=\"string\">&quot;%s元发票&quot;</span>, s);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;我接到电话&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;我拿到%s,准备回家&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"例子五\"><a href=\"#例子五\" class=\"headerlink\" title=\"例子五\"></a>例子五</h1><p>我等车，等100路或200路公交都能到家，谁先来上谁</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;来到公交站&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100或200路公交&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100路公交车&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;100路来了&quot;</span>;</span><br><span class=\"line\">    &#125;).applyToEither(CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待200路公交&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;200路来了&quot;</span>;</span><br><span class=\"line\">    &#125;),s -&gt; s);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,我上车了&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527015316.png\"></p>\n<h1 id=\"例子六\"><a href=\"#例子六\" class=\"headerlink\" title=\"例子六\"></a>例子六</h1><p><strong>我坐在车上,司机撞树上了，只能打车回家了</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;来到公交站&quot;</span>);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100或200路公交&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    CompletableFuture&lt;String&gt; stringCompletableFuture = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待100路公交车&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">100</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;100路来了&quot;</span>;</span><br><span class=\"line\">    &#125;).applyToEither(CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;等待200路公交&quot;</span>);</span><br><span class=\"line\">        SmallTool.sleepMillis(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;200路来了&quot;</span>;</span><br><span class=\"line\">    &#125;),s -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(s);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.startsWith(<span class=\"string\">&quot;100&quot;</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;撞树上了&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    &#125;).exceptionally(throwable -&gt; &#123;</span><br><span class=\"line\">        SmallTool.printTimeAndThread(throwable.getMessage());</span><br><span class=\"line\">        SmallTool.printTimeAndThread(<span class=\"string\">&quot;打出租车回家&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;出租车到了&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    SmallTool.printTimeAndThread(String.format(<span class=\"string\">&quot;%s,我上车了&quot;</span>,stringCompletableFuture.join()));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"例子七\"><a href=\"#例子七\" class=\"headerlink\" title=\"例子七\"></a>例子七</h1><p><strong>如果100路没来之前，就撞树上了，那么应该坐上200路公交</strong></p>\n"},{"title":"常见多线程使用记录","date":"2020-05-26T14:55:20.000Z","cover":"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526225609.png","_content":"# 起始\n一个高并发系统，最优秀的响应时间在200ms之内\n在调用两个service串行调用的情况下，响应已经到了400ms\n\n# Callable\n想要获取一个有返回值的线程，使用Callable\n\n无法通过new Thread的方式创建Callable\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231027.png)\n\n## 使用FutureTask\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231313.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231609.png)\n## 使用get方式获取\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526233057.png)\n响应时间-200ms\n## 问题\ntomcat处理线程默认是200个，如果没有get到返回值，会导致阻塞\n解决方案，使用Servlet3.0异步请求\n# Servlet3.0\n异步直接返回Callable,return callable会回调\nTomcat主线程接近0ms，子线程耗时300ms\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234543.png)\n## 原理\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234920.png)\n## 问题\n多线程调用多个接口，造成大量的并发\n解决方案\n使用批量接口，定时任务，或者CompletableFuture\n# 定时任务加批量接口\n将请求装到队列中，每隔10ms批量调用，包装成list返回，通过分布式id，分发给对应的客户端\n## CountDownLatch\n模拟1w个并发\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527001708.png)\n\n## 定时线程池\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002334.png)\n\n## 阻塞队列\n包装请求，放入唯一id，请求内容，CompletableFuture\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002454.png)\n\n## 封装数据\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002728.png)\n## 定时任务\n 如果队列为空，直接return\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527003927.png)\n 接口的参数包装\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004024.png)\n 调用批量接口\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004254.png)\n## 测试单个调用的性能差距\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004551.png)\n","source":"_posts/note/多线程.md","raw":"---\ntitle: 常见多线程使用记录\ndate: 2020-5-26 22:55:20\ncover: https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526225609.png\ntags:\n- note\n---\n# 起始\n一个高并发系统，最优秀的响应时间在200ms之内\n在调用两个service串行调用的情况下，响应已经到了400ms\n\n# Callable\n想要获取一个有返回值的线程，使用Callable\n\n无法通过new Thread的方式创建Callable\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231027.png)\n\n## 使用FutureTask\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231313.png)\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231609.png)\n## 使用get方式获取\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526233057.png)\n响应时间-200ms\n## 问题\ntomcat处理线程默认是200个，如果没有get到返回值，会导致阻塞\n解决方案，使用Servlet3.0异步请求\n# Servlet3.0\n异步直接返回Callable,return callable会回调\nTomcat主线程接近0ms，子线程耗时300ms\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234543.png)\n## 原理\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234920.png)\n## 问题\n多线程调用多个接口，造成大量的并发\n解决方案\n使用批量接口，定时任务，或者CompletableFuture\n# 定时任务加批量接口\n将请求装到队列中，每隔10ms批量调用，包装成list返回，通过分布式id，分发给对应的客户端\n## CountDownLatch\n模拟1w个并发\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527001708.png)\n\n## 定时线程池\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002334.png)\n\n## 阻塞队列\n包装请求，放入唯一id，请求内容，CompletableFuture\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002454.png)\n\n## 封装数据\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002728.png)\n## 定时任务\n 如果队列为空，直接return\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527003927.png)\n 接口的参数包装\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004024.png)\n 调用批量接口\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004254.png)\n## 测试单个调用的性能差距\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004551.png)\n","slug":"note/多线程","published":1,"updated":"2022-08-13T07:49:51.073Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zx9000fo0ti77v4e7y4","content":"<h1 id=\"起始\"><a href=\"#起始\" class=\"headerlink\" title=\"起始\"></a>起始</h1><p>一个高并发系统，最优秀的响应时间在200ms之内<br>在调用两个service串行调用的情况下，响应已经到了400ms</p>\n<h1 id=\"Callable\"><a href=\"#Callable\" class=\"headerlink\" title=\"Callable\"></a>Callable</h1><p>想要获取一个有返回值的线程，使用Callable</p>\n<p>无法通过new Thread的方式创建Callable<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231027.png\"></p>\n<h2 id=\"使用FutureTask\"><a href=\"#使用FutureTask\" class=\"headerlink\" title=\"使用FutureTask\"></a>使用FutureTask</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231313.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231609.png\"></p>\n<h2 id=\"使用get方式获取\"><a href=\"#使用get方式获取\" class=\"headerlink\" title=\"使用get方式获取\"></a>使用get方式获取</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526233057.png\"><br>响应时间-200ms</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>tomcat处理线程默认是200个，如果没有get到返回值，会导致阻塞<br>解决方案，使用Servlet3.0异步请求</p>\n<h1 id=\"Servlet3-0\"><a href=\"#Servlet3-0\" class=\"headerlink\" title=\"Servlet3.0\"></a>Servlet3.0</h1><p>异步直接返回Callable,return callable会回调<br>Tomcat主线程接近0ms，子线程耗时300ms<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234543.png\"></p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234920.png\"></p>\n<h2 id=\"问题-1\"><a href=\"#问题-1\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>多线程调用多个接口，造成大量的并发<br>解决方案<br>使用批量接口，定时任务，或者CompletableFuture</p>\n<h1 id=\"定时任务加批量接口\"><a href=\"#定时任务加批量接口\" class=\"headerlink\" title=\"定时任务加批量接口\"></a>定时任务加批量接口</h1><p>将请求装到队列中，每隔10ms批量调用，包装成list返回，通过分布式id，分发给对应的客户端</p>\n<h2 id=\"CountDownLatch\"><a href=\"#CountDownLatch\" class=\"headerlink\" title=\"CountDownLatch\"></a>CountDownLatch</h2><p>模拟1w个并发<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527001708.png\"></p>\n<h2 id=\"定时线程池\"><a href=\"#定时线程池\" class=\"headerlink\" title=\"定时线程池\"></a>定时线程池</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002334.png\"></p>\n<h2 id=\"阻塞队列\"><a href=\"#阻塞队列\" class=\"headerlink\" title=\"阻塞队列\"></a>阻塞队列</h2><p>包装请求，放入唯一id，请求内容，CompletableFuture<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002454.png\"></p>\n<h2 id=\"封装数据\"><a href=\"#封装数据\" class=\"headerlink\" title=\"封装数据\"></a>封装数据</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002728.png\"></p>\n<h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"定时任务\"></a>定时任务</h2><p> 如果队列为空，直接return<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527003927.png\"><br> 接口的参数包装<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004024.png\"><br> 调用批量接口<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004254.png\"></p>\n<h2 id=\"测试单个调用的性能差距\"><a href=\"#测试单个调用的性能差距\" class=\"headerlink\" title=\"测试单个调用的性能差距\"></a>测试单个调用的性能差距</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004551.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"起始\"><a href=\"#起始\" class=\"headerlink\" title=\"起始\"></a>起始</h1><p>一个高并发系统，最优秀的响应时间在200ms之内<br>在调用两个service串行调用的情况下，响应已经到了400ms</p>\n<h1 id=\"Callable\"><a href=\"#Callable\" class=\"headerlink\" title=\"Callable\"></a>Callable</h1><p>想要获取一个有返回值的线程，使用Callable</p>\n<p>无法通过new Thread的方式创建Callable<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231027.png\"></p>\n<h2 id=\"使用FutureTask\"><a href=\"#使用FutureTask\" class=\"headerlink\" title=\"使用FutureTask\"></a>使用FutureTask</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231313.png\"><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526231609.png\"></p>\n<h2 id=\"使用get方式获取\"><a href=\"#使用get方式获取\" class=\"headerlink\" title=\"使用get方式获取\"></a>使用get方式获取</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526233057.png\"><br>响应时间-200ms</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>tomcat处理线程默认是200个，如果没有get到返回值，会导致阻塞<br>解决方案，使用Servlet3.0异步请求</p>\n<h1 id=\"Servlet3-0\"><a href=\"#Servlet3-0\" class=\"headerlink\" title=\"Servlet3.0\"></a>Servlet3.0</h1><p>异步直接返回Callable,return callable会回调<br>Tomcat主线程接近0ms，子线程耗时300ms<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234543.png\"></p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220526234920.png\"></p>\n<h2 id=\"问题-1\"><a href=\"#问题-1\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>多线程调用多个接口，造成大量的并发<br>解决方案<br>使用批量接口，定时任务，或者CompletableFuture</p>\n<h1 id=\"定时任务加批量接口\"><a href=\"#定时任务加批量接口\" class=\"headerlink\" title=\"定时任务加批量接口\"></a>定时任务加批量接口</h1><p>将请求装到队列中，每隔10ms批量调用，包装成list返回，通过分布式id，分发给对应的客户端</p>\n<h2 id=\"CountDownLatch\"><a href=\"#CountDownLatch\" class=\"headerlink\" title=\"CountDownLatch\"></a>CountDownLatch</h2><p>模拟1w个并发<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527001708.png\"></p>\n<h2 id=\"定时线程池\"><a href=\"#定时线程池\" class=\"headerlink\" title=\"定时线程池\"></a>定时线程池</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002334.png\"></p>\n<h2 id=\"阻塞队列\"><a href=\"#阻塞队列\" class=\"headerlink\" title=\"阻塞队列\"></a>阻塞队列</h2><p>包装请求，放入唯一id，请求内容，CompletableFuture<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002454.png\"></p>\n<h2 id=\"封装数据\"><a href=\"#封装数据\" class=\"headerlink\" title=\"封装数据\"></a>封装数据</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527002728.png\"></p>\n<h2 id=\"定时任务\"><a href=\"#定时任务\" class=\"headerlink\" title=\"定时任务\"></a>定时任务</h2><p> 如果队列为空，直接return<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527003927.png\"><br> 接口的参数包装<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004024.png\"><br> 调用批量接口<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004254.png\"></p>\n<h2 id=\"测试单个调用的性能差距\"><a href=\"#测试单个调用的性能差距\" class=\"headerlink\" title=\"测试单个调用的性能差距\"></a>测试单个调用的性能差距</h2><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220527004551.png\"></p>\n"},{"title":"阿里巴巴开发规范.md","date":"2020-05-13T03:13:39.000Z","cover":"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513111454.png","_content":"\n>boolean不要以is开头，不然get方法就会出问题。\n\n>包名统一用单数形式。\n\n>使用完整的单词表达。\n\n>禁止出现魔法值，任何直接出现在代码中的字符串都是魔法值\n\n>使用long类型，必需使用大L,避免i1不分\n\n>equals容易出现空指针异常\n正确写法\n＂sbdl＂.equals=object\n推荐使用jdk7工具类\nequals(a，b)\n\n>Integer使用static生成-128到127的之间所以的数字，所以128=128等于false\n所以所有的包装类都要用equals比较\n\n>任何货币金额，都以最小金额单位且整形来存储\n\n>浮点型数据，基本类型不能用==，包装类型不能用equals，1.0=1.00为false，因为精度不同，应该使用compareTo\n\n>禁止在bigDicmal中传入double，应该使用valueOf,实现原理是toString\n\n>所有的对象pojo都使用包装类型，不然有默认值\n所有的局部变量都使用基本类型\n\n>pojo类必须写toString方法，如果有继承，要super.toString\n\n>日期格式化，new SImpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")\n大写M 月份\n小写M 分钟\n24小时是大写H\n12小时是小写的h\n\n>获取当前毫秒数，System.currentTimeMillis()，底层使用的native方法\n精确计时使用Instant类，精确到纳秒\n\n>不要在程序中写死一年的天数，应该使用LocalDate.now().lengthOfYear()获取今年天数\n\n>只要重写了equals，就要重写hashCode方法,Set和Map的key依据hashCode判断,\nString重写的hashCode和equals方法，所以可以将String对象作为key来使用\n\n>判断集合是否为空，调用isEmpty1方法,因为不是遍历实现的size==0\n\n>使用stream流中的Collectors的toMap时，一定要使用含有参数类型BinaryOperator，参数值为mergeFunction的方法，否则出现相同的key，会抛出IllegalStateException\nCollectors.toMap(key,value,(v1,v2)->v1)\n> toMap时，value也不能为空，所以在转换之前要做filter过滤\n> list.stream().filter(t->StringUtils.isNotBlank(t.getName)).collect(Collectors.toMap(t.getId,t.getName,(v1,v2)->v1))\n\n>ArrayList的subList不可用强转ArrayList,因为subList返回的内部类是SubList是ArrayList的视图，对于subList的操作都会返回到原ArrayList上\n\n>使用Map中的keySet/values/entrySet返回集合对象时，不可用对其添加元素操作，否则抛出UnsupportedOperationException\n\n>在subList场景中，对父类集合的增加和删除，均会导致子列表的遍历，增加，删除产生ConcurrentModificationException\n\n>集合转换数据的时候，list.toArray要指定参数，list.toArray(new String[0]),不然返回的object对象再转换，会出现转换异常，toArray的带参方法，length=0时，动态创建和size相同的数组\n\n>使用ArrayList.addAll底层实现还是toArray,所以使用之前要判断参数是否为空\n\n>不要在foreach中进行元素的add/remove操作。remove元素请使用Iterator，如果是并发操作请对Iterator对象加锁\n\n>获取单例对象要保证线程安全\n\n>创建线程或线程池，请指定有意义的线程名字，使用自定义线程工厂实现ThreadFactory，\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513160147.png)\n\n>线程资源必须通过线程池提供，通过ThreadPoolExecutor方法创建，\n\n>SimpleDateFormat是线程不安全的类，不要定义为static变量,在jkd8应用中，使用Instant代替Date,LocalDateTime代替Calendar,使用DateTimeFormatter代替SimpleDateFormat\n\n>必须回收自定义的ThreadLocal变量，在线程池场景下，会造成内存泄漏，建议使用\n```java\naThreadLocal.set(userInfo)\n        try{\n            \n        }finally(){\n        aThreadLocal.remove()\n        }\n```\n\n>高并发中，能锁区块就不要锁整个方法，能用对象锁就不要用类锁\n\n>对多个资源，数据库表，对象同时加锁时，注意保持一致的加锁顺序，否则可能会造成死锁\n\n>使用阻塞等待获取锁的过程中，必须在try代码块之外，并且加锁方法与try之间没有任何可能抛出的异常，避免加锁成功后，在finally无法解锁\n```java\nnew Lock();\n        lock.lock();\n        try{\n\n        }finally{\n        lock.unlock()\n        }\n```\n\n>在尝试机制获取锁中，进入业务代码块之前，必须先判断当前线程是否持有锁，锁的释放规则与锁的阻塞等待方法相同\n```java\nLock lock=new aLock();\n        boolean isLocked=lock.tryLock();\n        if(isLocked){\n        try{\n        doSomething();\n        }finally{\n        lock.unlock();\n        }\n        }\n```\n\n>并发修改时，更新同一条记录，避免更新丢失，需要加锁，要么在应用层面加锁，要么在缓存加锁，要么在数据库使用乐观锁version,访问冲突概率小于20%，使用乐观锁，否则使用悲观锁。\n> 乐观锁的重试次数不得小于3次。\n\n>多线程并行处理定时任务时，Timer运行多个TimeTask时，只要其中一个没有捕获抛出异常，其他任务便会自动停止运行，使用ScheduledExecutorService则没有这个问题。\n\n**反**\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163237.png)\n\n**正**\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163142.png)\n>资金相关的信息，使用悲观锁，乐观锁在获取锁的同时完成了更新操作，检验逻辑容易出现漏洞，另外乐观锁对锁冲突的解决策略有较复杂的要求，处理不当容易造成系统压力，\n> 悲观锁原则：一锁，二判，三更新，四释放\n\n>在switch块中，每一个case都要通过continue/break/return来控制\n> 必须包含一个default放在语句最后，即使他什么代码也没有\n\n> 在switch块之前判断param是否为null，不然default方法也不会执行，抛出空指针异常\n\n> 三目运算符 1:2中，注意1:2的类型对齐时，可能会抛出空指针问题\n> 自动拆箱的触发场景\n> 1和2的值只要有一个是原始类型\n> 1和2的值类型不一致，会强制拆箱升级\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513164033.png)\n\n>高并发场景中，避免使用\"等于\"判断作为中断或退出条件，建议使用大于或小于\n> 比如：判断剩余商品数量等于0，终止发放商品，但是并发处理导致奖品数量瞬间变成了负数\n\n>Api规范\n> 协议:生产环境必须使用HTTPS\n> 路径:使用名词，推荐使用复数，请求方法已经表达了动作的含义,不能使用大写url，使用下环线分割，禁止携带表示请求内容的后缀，比如.json,.xml\n> 请求方法：Get:取出资源 POST:新建资源 PUT:更新资源 DELETE: 删除资源\n> 请求内容: url参数必须无敏感信息或加密,body里带的参数必须设置Content-Type\n> 响应体:响应体body可以防止多种数据类型，由Content-Type头来确定\n\n>前后端数据列表的接口返回，如果为空，返回空数组或空集合，避免前端很多琐碎的null判断\n\n>需要使用长整数一律用String，使用Long类型，js会自动转换成number类型(双浮点),会出现精度丢失,比如订单号，不要用long类型\n\n>http请求通过url传参，不能超过2048字节\n\n>http请求通过body传参，必须控制长度，nginx默认1mb，tomcat默认2mb\n\n>在分页场景中，输入的参数小于1则显示第一页，参数大于总页数则返回最后一页\n\n>正则表达式利用预编译功能，加快匹配速度，指不要在方法体内定义规则 \n> 错误写法：Pattern pattern = Pattern.compile(\"规则)\n\n>避免使用Apache Beanutils，可以使用Spring的BeanUtils(都是浅拷贝)\n\n>获取随机值，直接使用Random对象的nextInt和nextLong方法\n\n>可以通过预检查规避的RuntimeException不应该通过catch处理\n正例：if(a != null)\n反例：try{(a.getA)} catch(NullPointException e)\n\n>不要在finally块中使用return，try块中的return执行完成后，并不会马上返回，而是继续执行finally块，再返回\n\n>rpc调用，或者二方包调用时，捕获异常必须使用Throwable类进行拦截,在catch块中判断具体接受的异常\n\n>不可用直接使用日志系统(log4j,Logback)的api，而应该使用slf4j,JCL面门框架的Api,有利于各个类的日志统一处理\n\n>所有日志至少保存15天，对于当天日志，以应用名.log保存，保存在home/admin/应用名/logs/ 目录下,\n>过往日志格式为:logName.log.保存日期 日期格式 yyyy-MM-dd\n\n>根据国家法律规定，网络运行状态，网络安全事件，个人敏感信息等操作日志，保存不少于六个月，并且网络多机备份\n\n>扩展日志命令方式appName_logType_logName.log\n\n>日志输出时，使用占位符拼接,内部实现的是StringBuilder\n> logger.debug(\"id = {} and symbol = {}\",id,symbol);\n\n>对于trace/debug/info级别的日志输出,必须先判断开关\n```java\nif(logger.isDebugEnable()){\n    logger.debug(\"id = {}\",id)\n        }\n```\n\n>禁止使用System.out或System.err输出日志或者使用e.printStackTrace打印异常堆栈\n\n>打印日志，直接调用toString方法，不要通过JSONObject.toJsonString，不然会调用get方法\n\n>单元测试必须遵守AIR，自动化，独立性，可重复\n\n>单元测试之间不能先后调用,单元测试是可以重复执行的\n\n>用户个人页面必须权限校验\n\n>用户敏感数据，必须进行数据脱敏例如 显示 130****4320,防止泄漏\n\n>用户请求传入的任何参数必须做有效性验证\n>page size 过大导致内存溢出\n>恶意的order by 导致数据库慢查询 \n> 缓存击穿\n> SSRF，既伪造一个服务端请求，攻击者利用系统的某些接口，通过这个接口向目标系统发情攻击\n> 任意重定向 \n> SQL注入，Shell注入，反序列化注入\n> 正则输入源串拒接服务ReDoS\n\n>禁止向HTML页面输出未经安全过滤或者正确转义的用户数据\n\n>表单，AJAX必须执行CSRF安全验证\n> 跨站请求伪造是一类常见的编程漏洞，对于存在csrf的网站，攻击者可以实现通过构造好的url，只有受害者用户一访问，后台便可以在用户不知情的情况下修改用户数据\n> 可以理解为攻击者盗用了你的身份，然后以你的名义发起恶意请求，这个请求对于服务器来说完全合法\n\n>url外部重定向传入的地址，必须执行白名单过滤\n\n>表示是或者否，必须使用is_xxx命名，类型是unsigned tinyint\n\n>任何字段如果为非负数，必须是unsigned\n\n>表名，字段名都必须使用小写，数据库修改字段的代价很大，MySQL在Windows下是不区分大小写的，但是在Linux下区分大小写，所有不允许有大小写\n\n>表明使用用复数形式\n\n>主键索引名为pk_字段名，唯一索引为uk_字段名,普通索引为idx_字段名\n\n>小数类型一律用decimal,禁止使用float和double\n如果您要遵守公认会计原则(GAAP)规则，则货币栏必须至少包含4位小数，以确保舍入值不超过$0.01。 在这种情况下，应该定义具有4位小数的列，如下所示：\namount DECIMAL(19,4),第一个参数是最大位数，第二个参数是小数位数\n> 如果存储范围超过decimal的范围，建议将数据拆成证书和小数分开存储\n\n>如果存储的字符串长度几乎相等，使用char定长字符串类型\n\n>varchar是可变长字符串，不预先分配内存空间，长度不要超过5000，如果长度大于这个值，使用text类型，单独出来一张表，用主键来对应，避免影响其他字段的索引值\n\n>表必备三字段，id，create_time,update_time\n> id为主键，类型为bigint unsigned，单表时自增，步长为1，\n> create_time,update_time类型均为datetime类型,\n\n>业务上具有唯一特性的字段，即使是组合字段，也必须建立唯一索引\n> 唯一索引不会影响insert速度，但是提高查找速度是明显的，\n> 另外，即时在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必有脏数据产生\n\n>超过三个表禁止join，需要join的字段，数据类型必须保持一致，\n> 多表关联查询时,被关联的字段要有索引\n> 即时双表join,也要注意表索引\n\n>在varchar字段建立索引时，必须指定索引长度，没必要全字段建立索引，根据实际的文本区分度决定索引长度\n\n>页面搜索，严禁左模糊和全模糊，如果需要请走搜索引擎，索引文件根据最左匹配原则，如果左边的值未确定，那么无法使用此索引\n\n>count(*)会统计为列值为null的行,count(列名)不会\n\n>count(distinct 字段)计算该列除null之外的不重复行\n\n>null和任何值比较都是null，而不是true或false\n\n>如果某一列的值全为空，使用IFNULL(count(列名))或者IFNULL(SUM(列名)),避免空指针\n> 使用ISNULL判断是否为NULL，ISNULL(列名)\n\n>若分页查询，count为0,应该直接返回，避免执行后面的分页语句\n\n>不得使用外键和级联\n\n>禁止使用存储过程，存储过程难以调试和扩展，更没有移植性\n\n>数据订正，要先select，避免出现误删除\n\n>对于数据库中多个表的查询，都需要在列名前加表的别名\n\n>在表查询中，一律不使用*\n\n>不要使用resultCLass当返回参数，即使所有的属性名与数据库字段对应，也需要定义resultMap，方便配置映射关系，使字段与DO类解耦\n\n>不允许直接拿HashMap和HashTable作为查询结果输出\n> 某同学为了避免写一个resultMap,直接使用HashMap接受数据库返回结果，结果出现本地把bigint转换成long值，而由于线上数据库版本不一样，解析成BigInteger，出现问题\n\n>\n","source":"_posts/note/开发规范.md","raw":"---\ntitle: 阿里巴巴开发规范.md\ndate: 2020-5-13 11:13:39\ncover: https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513111454.png\ntags:\n- note\n---\n\n>boolean不要以is开头，不然get方法就会出问题。\n\n>包名统一用单数形式。\n\n>使用完整的单词表达。\n\n>禁止出现魔法值，任何直接出现在代码中的字符串都是魔法值\n\n>使用long类型，必需使用大L,避免i1不分\n\n>equals容易出现空指针异常\n正确写法\n＂sbdl＂.equals=object\n推荐使用jdk7工具类\nequals(a，b)\n\n>Integer使用static生成-128到127的之间所以的数字，所以128=128等于false\n所以所有的包装类都要用equals比较\n\n>任何货币金额，都以最小金额单位且整形来存储\n\n>浮点型数据，基本类型不能用==，包装类型不能用equals，1.0=1.00为false，因为精度不同，应该使用compareTo\n\n>禁止在bigDicmal中传入double，应该使用valueOf,实现原理是toString\n\n>所有的对象pojo都使用包装类型，不然有默认值\n所有的局部变量都使用基本类型\n\n>pojo类必须写toString方法，如果有继承，要super.toString\n\n>日期格式化，new SImpleDateFormat(\"yyyy-MM-dd HH:mm:ss\")\n大写M 月份\n小写M 分钟\n24小时是大写H\n12小时是小写的h\n\n>获取当前毫秒数，System.currentTimeMillis()，底层使用的native方法\n精确计时使用Instant类，精确到纳秒\n\n>不要在程序中写死一年的天数，应该使用LocalDate.now().lengthOfYear()获取今年天数\n\n>只要重写了equals，就要重写hashCode方法,Set和Map的key依据hashCode判断,\nString重写的hashCode和equals方法，所以可以将String对象作为key来使用\n\n>判断集合是否为空，调用isEmpty1方法,因为不是遍历实现的size==0\n\n>使用stream流中的Collectors的toMap时，一定要使用含有参数类型BinaryOperator，参数值为mergeFunction的方法，否则出现相同的key，会抛出IllegalStateException\nCollectors.toMap(key,value,(v1,v2)->v1)\n> toMap时，value也不能为空，所以在转换之前要做filter过滤\n> list.stream().filter(t->StringUtils.isNotBlank(t.getName)).collect(Collectors.toMap(t.getId,t.getName,(v1,v2)->v1))\n\n>ArrayList的subList不可用强转ArrayList,因为subList返回的内部类是SubList是ArrayList的视图，对于subList的操作都会返回到原ArrayList上\n\n>使用Map中的keySet/values/entrySet返回集合对象时，不可用对其添加元素操作，否则抛出UnsupportedOperationException\n\n>在subList场景中，对父类集合的增加和删除，均会导致子列表的遍历，增加，删除产生ConcurrentModificationException\n\n>集合转换数据的时候，list.toArray要指定参数，list.toArray(new String[0]),不然返回的object对象再转换，会出现转换异常，toArray的带参方法，length=0时，动态创建和size相同的数组\n\n>使用ArrayList.addAll底层实现还是toArray,所以使用之前要判断参数是否为空\n\n>不要在foreach中进行元素的add/remove操作。remove元素请使用Iterator，如果是并发操作请对Iterator对象加锁\n\n>获取单例对象要保证线程安全\n\n>创建线程或线程池，请指定有意义的线程名字，使用自定义线程工厂实现ThreadFactory，\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513160147.png)\n\n>线程资源必须通过线程池提供，通过ThreadPoolExecutor方法创建，\n\n>SimpleDateFormat是线程不安全的类，不要定义为static变量,在jkd8应用中，使用Instant代替Date,LocalDateTime代替Calendar,使用DateTimeFormatter代替SimpleDateFormat\n\n>必须回收自定义的ThreadLocal变量，在线程池场景下，会造成内存泄漏，建议使用\n```java\naThreadLocal.set(userInfo)\n        try{\n            \n        }finally(){\n        aThreadLocal.remove()\n        }\n```\n\n>高并发中，能锁区块就不要锁整个方法，能用对象锁就不要用类锁\n\n>对多个资源，数据库表，对象同时加锁时，注意保持一致的加锁顺序，否则可能会造成死锁\n\n>使用阻塞等待获取锁的过程中，必须在try代码块之外，并且加锁方法与try之间没有任何可能抛出的异常，避免加锁成功后，在finally无法解锁\n```java\nnew Lock();\n        lock.lock();\n        try{\n\n        }finally{\n        lock.unlock()\n        }\n```\n\n>在尝试机制获取锁中，进入业务代码块之前，必须先判断当前线程是否持有锁，锁的释放规则与锁的阻塞等待方法相同\n```java\nLock lock=new aLock();\n        boolean isLocked=lock.tryLock();\n        if(isLocked){\n        try{\n        doSomething();\n        }finally{\n        lock.unlock();\n        }\n        }\n```\n\n>并发修改时，更新同一条记录，避免更新丢失，需要加锁，要么在应用层面加锁，要么在缓存加锁，要么在数据库使用乐观锁version,访问冲突概率小于20%，使用乐观锁，否则使用悲观锁。\n> 乐观锁的重试次数不得小于3次。\n\n>多线程并行处理定时任务时，Timer运行多个TimeTask时，只要其中一个没有捕获抛出异常，其他任务便会自动停止运行，使用ScheduledExecutorService则没有这个问题。\n\n**反**\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163237.png)\n\n**正**\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163142.png)\n>资金相关的信息，使用悲观锁，乐观锁在获取锁的同时完成了更新操作，检验逻辑容易出现漏洞，另外乐观锁对锁冲突的解决策略有较复杂的要求，处理不当容易造成系统压力，\n> 悲观锁原则：一锁，二判，三更新，四释放\n\n>在switch块中，每一个case都要通过continue/break/return来控制\n> 必须包含一个default放在语句最后，即使他什么代码也没有\n\n> 在switch块之前判断param是否为null，不然default方法也不会执行，抛出空指针异常\n\n> 三目运算符 1:2中，注意1:2的类型对齐时，可能会抛出空指针问题\n> 自动拆箱的触发场景\n> 1和2的值只要有一个是原始类型\n> 1和2的值类型不一致，会强制拆箱升级\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513164033.png)\n\n>高并发场景中，避免使用\"等于\"判断作为中断或退出条件，建议使用大于或小于\n> 比如：判断剩余商品数量等于0，终止发放商品，但是并发处理导致奖品数量瞬间变成了负数\n\n>Api规范\n> 协议:生产环境必须使用HTTPS\n> 路径:使用名词，推荐使用复数，请求方法已经表达了动作的含义,不能使用大写url，使用下环线分割，禁止携带表示请求内容的后缀，比如.json,.xml\n> 请求方法：Get:取出资源 POST:新建资源 PUT:更新资源 DELETE: 删除资源\n> 请求内容: url参数必须无敏感信息或加密,body里带的参数必须设置Content-Type\n> 响应体:响应体body可以防止多种数据类型，由Content-Type头来确定\n\n>前后端数据列表的接口返回，如果为空，返回空数组或空集合，避免前端很多琐碎的null判断\n\n>需要使用长整数一律用String，使用Long类型，js会自动转换成number类型(双浮点),会出现精度丢失,比如订单号，不要用long类型\n\n>http请求通过url传参，不能超过2048字节\n\n>http请求通过body传参，必须控制长度，nginx默认1mb，tomcat默认2mb\n\n>在分页场景中，输入的参数小于1则显示第一页，参数大于总页数则返回最后一页\n\n>正则表达式利用预编译功能，加快匹配速度，指不要在方法体内定义规则 \n> 错误写法：Pattern pattern = Pattern.compile(\"规则)\n\n>避免使用Apache Beanutils，可以使用Spring的BeanUtils(都是浅拷贝)\n\n>获取随机值，直接使用Random对象的nextInt和nextLong方法\n\n>可以通过预检查规避的RuntimeException不应该通过catch处理\n正例：if(a != null)\n反例：try{(a.getA)} catch(NullPointException e)\n\n>不要在finally块中使用return，try块中的return执行完成后，并不会马上返回，而是继续执行finally块，再返回\n\n>rpc调用，或者二方包调用时，捕获异常必须使用Throwable类进行拦截,在catch块中判断具体接受的异常\n\n>不可用直接使用日志系统(log4j,Logback)的api，而应该使用slf4j,JCL面门框架的Api,有利于各个类的日志统一处理\n\n>所有日志至少保存15天，对于当天日志，以应用名.log保存，保存在home/admin/应用名/logs/ 目录下,\n>过往日志格式为:logName.log.保存日期 日期格式 yyyy-MM-dd\n\n>根据国家法律规定，网络运行状态，网络安全事件，个人敏感信息等操作日志，保存不少于六个月，并且网络多机备份\n\n>扩展日志命令方式appName_logType_logName.log\n\n>日志输出时，使用占位符拼接,内部实现的是StringBuilder\n> logger.debug(\"id = {} and symbol = {}\",id,symbol);\n\n>对于trace/debug/info级别的日志输出,必须先判断开关\n```java\nif(logger.isDebugEnable()){\n    logger.debug(\"id = {}\",id)\n        }\n```\n\n>禁止使用System.out或System.err输出日志或者使用e.printStackTrace打印异常堆栈\n\n>打印日志，直接调用toString方法，不要通过JSONObject.toJsonString，不然会调用get方法\n\n>单元测试必须遵守AIR，自动化，独立性，可重复\n\n>单元测试之间不能先后调用,单元测试是可以重复执行的\n\n>用户个人页面必须权限校验\n\n>用户敏感数据，必须进行数据脱敏例如 显示 130****4320,防止泄漏\n\n>用户请求传入的任何参数必须做有效性验证\n>page size 过大导致内存溢出\n>恶意的order by 导致数据库慢查询 \n> 缓存击穿\n> SSRF，既伪造一个服务端请求，攻击者利用系统的某些接口，通过这个接口向目标系统发情攻击\n> 任意重定向 \n> SQL注入，Shell注入，反序列化注入\n> 正则输入源串拒接服务ReDoS\n\n>禁止向HTML页面输出未经安全过滤或者正确转义的用户数据\n\n>表单，AJAX必须执行CSRF安全验证\n> 跨站请求伪造是一类常见的编程漏洞，对于存在csrf的网站，攻击者可以实现通过构造好的url，只有受害者用户一访问，后台便可以在用户不知情的情况下修改用户数据\n> 可以理解为攻击者盗用了你的身份，然后以你的名义发起恶意请求，这个请求对于服务器来说完全合法\n\n>url外部重定向传入的地址，必须执行白名单过滤\n\n>表示是或者否，必须使用is_xxx命名，类型是unsigned tinyint\n\n>任何字段如果为非负数，必须是unsigned\n\n>表名，字段名都必须使用小写，数据库修改字段的代价很大，MySQL在Windows下是不区分大小写的，但是在Linux下区分大小写，所有不允许有大小写\n\n>表明使用用复数形式\n\n>主键索引名为pk_字段名，唯一索引为uk_字段名,普通索引为idx_字段名\n\n>小数类型一律用decimal,禁止使用float和double\n如果您要遵守公认会计原则(GAAP)规则，则货币栏必须至少包含4位小数，以确保舍入值不超过$0.01。 在这种情况下，应该定义具有4位小数的列，如下所示：\namount DECIMAL(19,4),第一个参数是最大位数，第二个参数是小数位数\n> 如果存储范围超过decimal的范围，建议将数据拆成证书和小数分开存储\n\n>如果存储的字符串长度几乎相等，使用char定长字符串类型\n\n>varchar是可变长字符串，不预先分配内存空间，长度不要超过5000，如果长度大于这个值，使用text类型，单独出来一张表，用主键来对应，避免影响其他字段的索引值\n\n>表必备三字段，id，create_time,update_time\n> id为主键，类型为bigint unsigned，单表时自增，步长为1，\n> create_time,update_time类型均为datetime类型,\n\n>业务上具有唯一特性的字段，即使是组合字段，也必须建立唯一索引\n> 唯一索引不会影响insert速度，但是提高查找速度是明显的，\n> 另外，即时在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必有脏数据产生\n\n>超过三个表禁止join，需要join的字段，数据类型必须保持一致，\n> 多表关联查询时,被关联的字段要有索引\n> 即时双表join,也要注意表索引\n\n>在varchar字段建立索引时，必须指定索引长度，没必要全字段建立索引，根据实际的文本区分度决定索引长度\n\n>页面搜索，严禁左模糊和全模糊，如果需要请走搜索引擎，索引文件根据最左匹配原则，如果左边的值未确定，那么无法使用此索引\n\n>count(*)会统计为列值为null的行,count(列名)不会\n\n>count(distinct 字段)计算该列除null之外的不重复行\n\n>null和任何值比较都是null，而不是true或false\n\n>如果某一列的值全为空，使用IFNULL(count(列名))或者IFNULL(SUM(列名)),避免空指针\n> 使用ISNULL判断是否为NULL，ISNULL(列名)\n\n>若分页查询，count为0,应该直接返回，避免执行后面的分页语句\n\n>不得使用外键和级联\n\n>禁止使用存储过程，存储过程难以调试和扩展，更没有移植性\n\n>数据订正，要先select，避免出现误删除\n\n>对于数据库中多个表的查询，都需要在列名前加表的别名\n\n>在表查询中，一律不使用*\n\n>不要使用resultCLass当返回参数，即使所有的属性名与数据库字段对应，也需要定义resultMap，方便配置映射关系，使字段与DO类解耦\n\n>不允许直接拿HashMap和HashTable作为查询结果输出\n> 某同学为了避免写一个resultMap,直接使用HashMap接受数据库返回结果，结果出现本地把bigint转换成long值，而由于线上数据库版本不一样，解析成BigInteger，出现问题\n\n>\n","slug":"note/开发规范","published":1,"updated":"2022-08-13T07:49:55.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxb000ho0ti8r7q1tvi","content":"<blockquote>\n<p>boolean不要以is开头，不然get方法就会出问题。</p>\n</blockquote>\n<blockquote>\n<p>包名统一用单数形式。</p>\n</blockquote>\n<blockquote>\n<p>使用完整的单词表达。</p>\n</blockquote>\n<blockquote>\n<p>禁止出现魔法值，任何直接出现在代码中的字符串都是魔法值</p>\n</blockquote>\n<blockquote>\n<p>使用long类型，必需使用大L,避免i1不分</p>\n</blockquote>\n<blockquote>\n<p>equals容易出现空指针异常<br>正确写法<br>＂sbdl＂.equals=object<br>推荐使用jdk7工具类<br>equals(a，b)</p>\n</blockquote>\n<blockquote>\n<p>Integer使用static生成-128到127的之间所以的数字，所以128=128等于false<br>所以所有的包装类都要用equals比较</p>\n</blockquote>\n<blockquote>\n<p>任何货币金额，都以最小金额单位且整形来存储</p>\n</blockquote>\n<blockquote>\n<p>浮点型数据，基本类型不能用==，包装类型不能用equals，1.0=1.00为false，因为精度不同，应该使用compareTo</p>\n</blockquote>\n<blockquote>\n<p>禁止在bigDicmal中传入double，应该使用valueOf,实现原理是toString</p>\n</blockquote>\n<blockquote>\n<p>所有的对象pojo都使用包装类型，不然有默认值<br>所有的局部变量都使用基本类型</p>\n</blockquote>\n<blockquote>\n<p>pojo类必须写toString方法，如果有继承，要super.toString</p>\n</blockquote>\n<blockquote>\n<p>日期格式化，new SImpleDateFormat(“yyyy-MM-dd HH:mm:ss”)<br>大写M 月份<br>小写M 分钟<br>24小时是大写H<br>12小时是小写的h</p>\n</blockquote>\n<blockquote>\n<p>获取当前毫秒数，System.currentTimeMillis()，底层使用的native方法<br>精确计时使用Instant类，精确到纳秒</p>\n</blockquote>\n<blockquote>\n<p>不要在程序中写死一年的天数，应该使用LocalDate.now().lengthOfYear()获取今年天数</p>\n</blockquote>\n<blockquote>\n<p>只要重写了equals，就要重写hashCode方法,Set和Map的key依据hashCode判断,<br>String重写的hashCode和equals方法，所以可以将String对象作为key来使用</p>\n</blockquote>\n<blockquote>\n<p>判断集合是否为空，调用isEmpty1方法,因为不是遍历实现的size==0</p>\n</blockquote>\n<blockquote>\n<p>使用stream流中的Collectors的toMap时，一定要使用含有参数类型BinaryOperator，参数值为mergeFunction的方法，否则出现相同的key，会抛出IllegalStateException<br>Collectors.toMap(key,value,(v1,v2)-&gt;v1)<br>toMap时，value也不能为空，所以在转换之前要做filter过滤<br>list.stream().filter(t-&gt;StringUtils.isNotBlank(t.getName)).collect(Collectors.toMap(t.getId,t.getName,(v1,v2)-&gt;v1))</p>\n</blockquote>\n<blockquote>\n<p>ArrayList的subList不可用强转ArrayList,因为subList返回的内部类是SubList是ArrayList的视图，对于subList的操作都会返回到原ArrayList上</p>\n</blockquote>\n<blockquote>\n<p>使用Map中的keySet/values/entrySet返回集合对象时，不可用对其添加元素操作，否则抛出UnsupportedOperationException</p>\n</blockquote>\n<blockquote>\n<p>在subList场景中，对父类集合的增加和删除，均会导致子列表的遍历，增加，删除产生ConcurrentModificationException</p>\n</blockquote>\n<blockquote>\n<p>集合转换数据的时候，list.toArray要指定参数，list.toArray(new String[0]),不然返回的object对象再转换，会出现转换异常，toArray的带参方法，length=0时，动态创建和size相同的数组</p>\n</blockquote>\n<blockquote>\n<p>使用ArrayList.addAll底层实现还是toArray,所以使用之前要判断参数是否为空</p>\n</blockquote>\n<blockquote>\n<p>不要在foreach中进行元素的add/remove操作。remove元素请使用Iterator，如果是并发操作请对Iterator对象加锁</p>\n</blockquote>\n<blockquote>\n<p>获取单例对象要保证线程安全</p>\n</blockquote>\n<blockquote>\n<p>创建线程或线程池，请指定有意义的线程名字，使用自定义线程工厂实现ThreadFactory，<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513160147.png\"></p>\n</blockquote>\n<blockquote>\n<p>线程资源必须通过线程池提供，通过ThreadPoolExecutor方法创建，</p>\n</blockquote>\n<blockquote>\n<p>SimpleDateFormat是线程不安全的类，不要定义为static变量,在jkd8应用中，使用Instant代替Date,LocalDateTime代替Calendar,使用DateTimeFormatter代替SimpleDateFormat</p>\n</blockquote>\n<blockquote>\n<p>必须回收自定义的ThreadLocal变量，在线程池场景下，会造成内存泄漏，建议使用</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aThreadLocal.set(userInfo)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>()&#123;</span><br><span class=\"line\">        aThreadLocal.remove()</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>高并发中，能锁区块就不要锁整个方法，能用对象锁就不要用类锁</p>\n</blockquote>\n<blockquote>\n<p>对多个资源，数据库表，对象同时加锁时，注意保持一致的加锁顺序，否则可能会造成死锁</p>\n</blockquote>\n<blockquote>\n<p>使用阻塞等待获取锁的过程中，必须在try代码块之外，并且加锁方法与try之间没有任何可能抛出的异常，避免加锁成功后，在finally无法解锁</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Lock();</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">        lock.unlock()</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在尝试机制获取锁中，进入业务代码块之前，必须先判断当前线程是否持有锁，锁的释放规则与锁的阻塞等待方法相同</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lock lock=<span class=\"keyword\">new</span> aLock();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isLocked=lock.tryLock();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isLocked)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        doSomething();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">        lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>并发修改时，更新同一条记录，避免更新丢失，需要加锁，要么在应用层面加锁，要么在缓存加锁，要么在数据库使用乐观锁version,访问冲突概率小于20%，使用乐观锁，否则使用悲观锁。<br>乐观锁的重试次数不得小于3次。</p>\n</blockquote>\n<blockquote>\n<p>多线程并行处理定时任务时，Timer运行多个TimeTask时，只要其中一个没有捕获抛出异常，其他任务便会自动停止运行，使用ScheduledExecutorService则没有这个问题。</p>\n</blockquote>\n<p><strong>反</strong><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163237.png\"></p>\n<p><strong>正</strong><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163142.png\"></p>\n<blockquote>\n<p>资金相关的信息，使用悲观锁，乐观锁在获取锁的同时完成了更新操作，检验逻辑容易出现漏洞，另外乐观锁对锁冲突的解决策略有较复杂的要求，处理不当容易造成系统压力，<br>悲观锁原则：一锁，二判，三更新，四释放</p>\n</blockquote>\n<blockquote>\n<p>在switch块中，每一个case都要通过continue/break/return来控制<br>必须包含一个default放在语句最后，即使他什么代码也没有</p>\n</blockquote>\n<blockquote>\n<p>在switch块之前判断param是否为null，不然default方法也不会执行，抛出空指针异常</p>\n</blockquote>\n<blockquote>\n<p>三目运算符 1:2中，注意1:2的类型对齐时，可能会抛出空指针问题<br>自动拆箱的触发场景<br>1和2的值只要有一个是原始类型<br>1和2的值类型不一致，会强制拆箱升级<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513164033.png\"></p>\n</blockquote>\n<blockquote>\n<p>高并发场景中，避免使用”等于”判断作为中断或退出条件，建议使用大于或小于<br>比如：判断剩余商品数量等于0，终止发放商品，但是并发处理导致奖品数量瞬间变成了负数</p>\n</blockquote>\n<blockquote>\n<p>Api规范<br>协议:生产环境必须使用HTTPS<br>路径:使用名词，推荐使用复数，请求方法已经表达了动作的含义,不能使用大写url，使用下环线分割，禁止携带表示请求内容的后缀，比如.json,.xml<br>请求方法：Get:取出资源 POST:新建资源 PUT:更新资源 DELETE: 删除资源<br>请求内容: url参数必须无敏感信息或加密,body里带的参数必须设置Content-Type<br>响应体:响应体body可以防止多种数据类型，由Content-Type头来确定</p>\n</blockquote>\n<blockquote>\n<p>前后端数据列表的接口返回，如果为空，返回空数组或空集合，避免前端很多琐碎的null判断</p>\n</blockquote>\n<blockquote>\n<p>需要使用长整数一律用String，使用Long类型，js会自动转换成number类型(双浮点),会出现精度丢失,比如订单号，不要用long类型</p>\n</blockquote>\n<blockquote>\n<p>http请求通过url传参，不能超过2048字节</p>\n</blockquote>\n<blockquote>\n<p>http请求通过body传参，必须控制长度，nginx默认1mb，tomcat默认2mb</p>\n</blockquote>\n<blockquote>\n<p>在分页场景中，输入的参数小于1则显示第一页，参数大于总页数则返回最后一页</p>\n</blockquote>\n<blockquote>\n<p>正则表达式利用预编译功能，加快匹配速度，指不要在方法体内定义规则<br>错误写法：Pattern pattern = Pattern.compile(“规则)</p>\n</blockquote>\n<blockquote>\n<p>避免使用Apache Beanutils，可以使用Spring的BeanUtils(都是浅拷贝)</p>\n</blockquote>\n<blockquote>\n<p>获取随机值，直接使用Random对象的nextInt和nextLong方法</p>\n</blockquote>\n<blockquote>\n<p>可以通过预检查规避的RuntimeException不应该通过catch处理<br>正例：if(a != null)<br>反例：try{(a.getA)} catch(NullPointException e)</p>\n</blockquote>\n<blockquote>\n<p>不要在finally块中使用return，try块中的return执行完成后，并不会马上返回，而是继续执行finally块，再返回</p>\n</blockquote>\n<blockquote>\n<p>rpc调用，或者二方包调用时，捕获异常必须使用Throwable类进行拦截,在catch块中判断具体接受的异常</p>\n</blockquote>\n<blockquote>\n<p>不可用直接使用日志系统(log4j,Logback)的api，而应该使用slf4j,JCL面门框架的Api,有利于各个类的日志统一处理</p>\n</blockquote>\n<blockquote>\n<p>所有日志至少保存15天，对于当天日志，以应用名.log保存，保存在home/admin/应用名/logs/ 目录下,<br>过往日志格式为:logName.log.保存日期 日期格式 yyyy-MM-dd</p>\n</blockquote>\n<blockquote>\n<p>根据国家法律规定，网络运行状态，网络安全事件，个人敏感信息等操作日志，保存不少于六个月，并且网络多机备份</p>\n</blockquote>\n<blockquote>\n<p>扩展日志命令方式appName_logType_logName.log</p>\n</blockquote>\n<blockquote>\n<p>日志输出时，使用占位符拼接,内部实现的是StringBuilder<br>logger.debug(“id = {} and symbol = {}”,id,symbol);</p>\n</blockquote>\n<blockquote>\n<p>对于trace/debug/info级别的日志输出,必须先判断开关</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(logger.isDebugEnable())&#123;</span><br><span class=\"line\">    logger.debug(<span class=\"string\">&quot;id = &#123;&#125;&quot;</span>,id)</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>禁止使用System.out或System.err输出日志或者使用e.printStackTrace打印异常堆栈</p>\n</blockquote>\n<blockquote>\n<p>打印日志，直接调用toString方法，不要通过JSONObject.toJsonString，不然会调用get方法</p>\n</blockquote>\n<blockquote>\n<p>单元测试必须遵守AIR，自动化，独立性，可重复</p>\n</blockquote>\n<blockquote>\n<p>单元测试之间不能先后调用,单元测试是可以重复执行的</p>\n</blockquote>\n<blockquote>\n<p>用户个人页面必须权限校验</p>\n</blockquote>\n<blockquote>\n<p>用户敏感数据，必须进行数据脱敏例如 显示 130****4320,防止泄漏</p>\n</blockquote>\n<blockquote>\n<p>用户请求传入的任何参数必须做有效性验证<br>page size 过大导致内存溢出<br>恶意的order by 导致数据库慢查询<br>缓存击穿<br>SSRF，既伪造一个服务端请求，攻击者利用系统的某些接口，通过这个接口向目标系统发情攻击<br>任意重定向<br>SQL注入，Shell注入，反序列化注入<br>正则输入源串拒接服务ReDoS</p>\n</blockquote>\n<blockquote>\n<p>禁止向HTML页面输出未经安全过滤或者正确转义的用户数据</p>\n</blockquote>\n<blockquote>\n<p>表单，AJAX必须执行CSRF安全验证<br>跨站请求伪造是一类常见的编程漏洞，对于存在csrf的网站，攻击者可以实现通过构造好的url，只有受害者用户一访问，后台便可以在用户不知情的情况下修改用户数据<br>可以理解为攻击者盗用了你的身份，然后以你的名义发起恶意请求，这个请求对于服务器来说完全合法</p>\n</blockquote>\n<blockquote>\n<p>url外部重定向传入的地址，必须执行白名单过滤</p>\n</blockquote>\n<blockquote>\n<p>表示是或者否，必须使用is_xxx命名，类型是unsigned tinyint</p>\n</blockquote>\n<blockquote>\n<p>任何字段如果为非负数，必须是unsigned</p>\n</blockquote>\n<blockquote>\n<p>表名，字段名都必须使用小写，数据库修改字段的代价很大，MySQL在Windows下是不区分大小写的，但是在Linux下区分大小写，所有不允许有大小写</p>\n</blockquote>\n<blockquote>\n<p>表明使用用复数形式</p>\n</blockquote>\n<blockquote>\n<p>主键索引名为pk_字段名，唯一索引为uk_字段名,普通索引为idx_字段名</p>\n</blockquote>\n<blockquote>\n<p>小数类型一律用decimal,禁止使用float和double<br>如果您要遵守公认会计原则(GAAP)规则，则货币栏必须至少包含4位小数，以确保舍入值不超过$0.01。 在这种情况下，应该定义具有4位小数的列，如下所示：<br>amount DECIMAL(19,4),第一个参数是最大位数，第二个参数是小数位数<br>如果存储范围超过decimal的范围，建议将数据拆成证书和小数分开存储</p>\n</blockquote>\n<blockquote>\n<p>如果存储的字符串长度几乎相等，使用char定长字符串类型</p>\n</blockquote>\n<blockquote>\n<p>varchar是可变长字符串，不预先分配内存空间，长度不要超过5000，如果长度大于这个值，使用text类型，单独出来一张表，用主键来对应，避免影响其他字段的索引值</p>\n</blockquote>\n<blockquote>\n<p>表必备三字段，id，create_time,update_time<br>id为主键，类型为bigint unsigned，单表时自增，步长为1，<br>create_time,update_time类型均为datetime类型,</p>\n</blockquote>\n<blockquote>\n<p>业务上具有唯一特性的字段，即使是组合字段，也必须建立唯一索引<br>唯一索引不会影响insert速度，但是提高查找速度是明显的，<br>另外，即时在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必有脏数据产生</p>\n</blockquote>\n<blockquote>\n<p>超过三个表禁止join，需要join的字段，数据类型必须保持一致，<br>多表关联查询时,被关联的字段要有索引<br>即时双表join,也要注意表索引</p>\n</blockquote>\n<blockquote>\n<p>在varchar字段建立索引时，必须指定索引长度，没必要全字段建立索引，根据实际的文本区分度决定索引长度</p>\n</blockquote>\n<blockquote>\n<p>页面搜索，严禁左模糊和全模糊，如果需要请走搜索引擎，索引文件根据最左匹配原则，如果左边的值未确定，那么无法使用此索引</p>\n</blockquote>\n<blockquote>\n<p>count(*)会统计为列值为null的行,count(列名)不会</p>\n</blockquote>\n<blockquote>\n<p>count(distinct 字段)计算该列除null之外的不重复行</p>\n</blockquote>\n<blockquote>\n<p>null和任何值比较都是null，而不是true或false</p>\n</blockquote>\n<blockquote>\n<p>如果某一列的值全为空，使用IFNULL(count(列名))或者IFNULL(SUM(列名)),避免空指针<br>使用ISNULL判断是否为NULL，ISNULL(列名)</p>\n</blockquote>\n<blockquote>\n<p>若分页查询，count为0,应该直接返回，避免执行后面的分页语句</p>\n</blockquote>\n<blockquote>\n<p>不得使用外键和级联</p>\n</blockquote>\n<blockquote>\n<p>禁止使用存储过程，存储过程难以调试和扩展，更没有移植性</p>\n</blockquote>\n<blockquote>\n<p>数据订正，要先select，避免出现误删除</p>\n</blockquote>\n<blockquote>\n<p>对于数据库中多个表的查询，都需要在列名前加表的别名</p>\n</blockquote>\n<blockquote>\n<p>在表查询中，一律不使用*</p>\n</blockquote>\n<blockquote>\n<p>不要使用resultCLass当返回参数，即使所有的属性名与数据库字段对应，也需要定义resultMap，方便配置映射关系，使字段与DO类解耦</p>\n</blockquote>\n<blockquote>\n<p>不允许直接拿HashMap和HashTable作为查询结果输出<br>某同学为了避免写一个resultMap,直接使用HashMap接受数据库返回结果，结果出现本地把bigint转换成long值，而由于线上数据库版本不一样，解析成BigInteger，出现问题</p>\n</blockquote>\n<blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>boolean不要以is开头，不然get方法就会出问题。</p>\n</blockquote>\n<blockquote>\n<p>包名统一用单数形式。</p>\n</blockquote>\n<blockquote>\n<p>使用完整的单词表达。</p>\n</blockquote>\n<blockquote>\n<p>禁止出现魔法值，任何直接出现在代码中的字符串都是魔法值</p>\n</blockquote>\n<blockquote>\n<p>使用long类型，必需使用大L,避免i1不分</p>\n</blockquote>\n<blockquote>\n<p>equals容易出现空指针异常<br>正确写法<br>＂sbdl＂.equals=object<br>推荐使用jdk7工具类<br>equals(a，b)</p>\n</blockquote>\n<blockquote>\n<p>Integer使用static生成-128到127的之间所以的数字，所以128=128等于false<br>所以所有的包装类都要用equals比较</p>\n</blockquote>\n<blockquote>\n<p>任何货币金额，都以最小金额单位且整形来存储</p>\n</blockquote>\n<blockquote>\n<p>浮点型数据，基本类型不能用==，包装类型不能用equals，1.0=1.00为false，因为精度不同，应该使用compareTo</p>\n</blockquote>\n<blockquote>\n<p>禁止在bigDicmal中传入double，应该使用valueOf,实现原理是toString</p>\n</blockquote>\n<blockquote>\n<p>所有的对象pojo都使用包装类型，不然有默认值<br>所有的局部变量都使用基本类型</p>\n</blockquote>\n<blockquote>\n<p>pojo类必须写toString方法，如果有继承，要super.toString</p>\n</blockquote>\n<blockquote>\n<p>日期格式化，new SImpleDateFormat(“yyyy-MM-dd HH:mm:ss”)<br>大写M 月份<br>小写M 分钟<br>24小时是大写H<br>12小时是小写的h</p>\n</blockquote>\n<blockquote>\n<p>获取当前毫秒数，System.currentTimeMillis()，底层使用的native方法<br>精确计时使用Instant类，精确到纳秒</p>\n</blockquote>\n<blockquote>\n<p>不要在程序中写死一年的天数，应该使用LocalDate.now().lengthOfYear()获取今年天数</p>\n</blockquote>\n<blockquote>\n<p>只要重写了equals，就要重写hashCode方法,Set和Map的key依据hashCode判断,<br>String重写的hashCode和equals方法，所以可以将String对象作为key来使用</p>\n</blockquote>\n<blockquote>\n<p>判断集合是否为空，调用isEmpty1方法,因为不是遍历实现的size==0</p>\n</blockquote>\n<blockquote>\n<p>使用stream流中的Collectors的toMap时，一定要使用含有参数类型BinaryOperator，参数值为mergeFunction的方法，否则出现相同的key，会抛出IllegalStateException<br>Collectors.toMap(key,value,(v1,v2)-&gt;v1)<br>toMap时，value也不能为空，所以在转换之前要做filter过滤<br>list.stream().filter(t-&gt;StringUtils.isNotBlank(t.getName)).collect(Collectors.toMap(t.getId,t.getName,(v1,v2)-&gt;v1))</p>\n</blockquote>\n<blockquote>\n<p>ArrayList的subList不可用强转ArrayList,因为subList返回的内部类是SubList是ArrayList的视图，对于subList的操作都会返回到原ArrayList上</p>\n</blockquote>\n<blockquote>\n<p>使用Map中的keySet/values/entrySet返回集合对象时，不可用对其添加元素操作，否则抛出UnsupportedOperationException</p>\n</blockquote>\n<blockquote>\n<p>在subList场景中，对父类集合的增加和删除，均会导致子列表的遍历，增加，删除产生ConcurrentModificationException</p>\n</blockquote>\n<blockquote>\n<p>集合转换数据的时候，list.toArray要指定参数，list.toArray(new String[0]),不然返回的object对象再转换，会出现转换异常，toArray的带参方法，length=0时，动态创建和size相同的数组</p>\n</blockquote>\n<blockquote>\n<p>使用ArrayList.addAll底层实现还是toArray,所以使用之前要判断参数是否为空</p>\n</blockquote>\n<blockquote>\n<p>不要在foreach中进行元素的add/remove操作。remove元素请使用Iterator，如果是并发操作请对Iterator对象加锁</p>\n</blockquote>\n<blockquote>\n<p>获取单例对象要保证线程安全</p>\n</blockquote>\n<blockquote>\n<p>创建线程或线程池，请指定有意义的线程名字，使用自定义线程工厂实现ThreadFactory，<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513160147.png\"></p>\n</blockquote>\n<blockquote>\n<p>线程资源必须通过线程池提供，通过ThreadPoolExecutor方法创建，</p>\n</blockquote>\n<blockquote>\n<p>SimpleDateFormat是线程不安全的类，不要定义为static变量,在jkd8应用中，使用Instant代替Date,LocalDateTime代替Calendar,使用DateTimeFormatter代替SimpleDateFormat</p>\n</blockquote>\n<blockquote>\n<p>必须回收自定义的ThreadLocal变量，在线程池场景下，会造成内存泄漏，建议使用</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aThreadLocal.set(userInfo)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>()&#123;</span><br><span class=\"line\">        aThreadLocal.remove()</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>高并发中，能锁区块就不要锁整个方法，能用对象锁就不要用类锁</p>\n</blockquote>\n<blockquote>\n<p>对多个资源，数据库表，对象同时加锁时，注意保持一致的加锁顺序，否则可能会造成死锁</p>\n</blockquote>\n<blockquote>\n<p>使用阻塞等待获取锁的过程中，必须在try代码块之外，并且加锁方法与try之间没有任何可能抛出的异常，避免加锁成功后，在finally无法解锁</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Lock();</span><br><span class=\"line\">        lock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">        lock.unlock()</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在尝试机制获取锁中，进入业务代码块之前，必须先判断当前线程是否持有锁，锁的释放规则与锁的阻塞等待方法相同</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lock lock=<span class=\"keyword\">new</span> aLock();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isLocked=lock.tryLock();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isLocked)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        doSomething();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">        lock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>并发修改时，更新同一条记录，避免更新丢失，需要加锁，要么在应用层面加锁，要么在缓存加锁，要么在数据库使用乐观锁version,访问冲突概率小于20%，使用乐观锁，否则使用悲观锁。<br>乐观锁的重试次数不得小于3次。</p>\n</blockquote>\n<blockquote>\n<p>多线程并行处理定时任务时，Timer运行多个TimeTask时，只要其中一个没有捕获抛出异常，其他任务便会自动停止运行，使用ScheduledExecutorService则没有这个问题。</p>\n</blockquote>\n<p><strong>反</strong><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163237.png\"></p>\n<p><strong>正</strong><br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513163142.png\"></p>\n<blockquote>\n<p>资金相关的信息，使用悲观锁，乐观锁在获取锁的同时完成了更新操作，检验逻辑容易出现漏洞，另外乐观锁对锁冲突的解决策略有较复杂的要求，处理不当容易造成系统压力，<br>悲观锁原则：一锁，二判，三更新，四释放</p>\n</blockquote>\n<blockquote>\n<p>在switch块中，每一个case都要通过continue/break/return来控制<br>必须包含一个default放在语句最后，即使他什么代码也没有</p>\n</blockquote>\n<blockquote>\n<p>在switch块之前判断param是否为null，不然default方法也不会执行，抛出空指针异常</p>\n</blockquote>\n<blockquote>\n<p>三目运算符 1:2中，注意1:2的类型对齐时，可能会抛出空指针问题<br>自动拆箱的触发场景<br>1和2的值只要有一个是原始类型<br>1和2的值类型不一致，会强制拆箱升级<br><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com/img/20220513164033.png\"></p>\n</blockquote>\n<blockquote>\n<p>高并发场景中，避免使用”等于”判断作为中断或退出条件，建议使用大于或小于<br>比如：判断剩余商品数量等于0，终止发放商品，但是并发处理导致奖品数量瞬间变成了负数</p>\n</blockquote>\n<blockquote>\n<p>Api规范<br>协议:生产环境必须使用HTTPS<br>路径:使用名词，推荐使用复数，请求方法已经表达了动作的含义,不能使用大写url，使用下环线分割，禁止携带表示请求内容的后缀，比如.json,.xml<br>请求方法：Get:取出资源 POST:新建资源 PUT:更新资源 DELETE: 删除资源<br>请求内容: url参数必须无敏感信息或加密,body里带的参数必须设置Content-Type<br>响应体:响应体body可以防止多种数据类型，由Content-Type头来确定</p>\n</blockquote>\n<blockquote>\n<p>前后端数据列表的接口返回，如果为空，返回空数组或空集合，避免前端很多琐碎的null判断</p>\n</blockquote>\n<blockquote>\n<p>需要使用长整数一律用String，使用Long类型，js会自动转换成number类型(双浮点),会出现精度丢失,比如订单号，不要用long类型</p>\n</blockquote>\n<blockquote>\n<p>http请求通过url传参，不能超过2048字节</p>\n</blockquote>\n<blockquote>\n<p>http请求通过body传参，必须控制长度，nginx默认1mb，tomcat默认2mb</p>\n</blockquote>\n<blockquote>\n<p>在分页场景中，输入的参数小于1则显示第一页，参数大于总页数则返回最后一页</p>\n</blockquote>\n<blockquote>\n<p>正则表达式利用预编译功能，加快匹配速度，指不要在方法体内定义规则<br>错误写法：Pattern pattern = Pattern.compile(“规则)</p>\n</blockquote>\n<blockquote>\n<p>避免使用Apache Beanutils，可以使用Spring的BeanUtils(都是浅拷贝)</p>\n</blockquote>\n<blockquote>\n<p>获取随机值，直接使用Random对象的nextInt和nextLong方法</p>\n</blockquote>\n<blockquote>\n<p>可以通过预检查规避的RuntimeException不应该通过catch处理<br>正例：if(a != null)<br>反例：try{(a.getA)} catch(NullPointException e)</p>\n</blockquote>\n<blockquote>\n<p>不要在finally块中使用return，try块中的return执行完成后，并不会马上返回，而是继续执行finally块，再返回</p>\n</blockquote>\n<blockquote>\n<p>rpc调用，或者二方包调用时，捕获异常必须使用Throwable类进行拦截,在catch块中判断具体接受的异常</p>\n</blockquote>\n<blockquote>\n<p>不可用直接使用日志系统(log4j,Logback)的api，而应该使用slf4j,JCL面门框架的Api,有利于各个类的日志统一处理</p>\n</blockquote>\n<blockquote>\n<p>所有日志至少保存15天，对于当天日志，以应用名.log保存，保存在home/admin/应用名/logs/ 目录下,<br>过往日志格式为:logName.log.保存日期 日期格式 yyyy-MM-dd</p>\n</blockquote>\n<blockquote>\n<p>根据国家法律规定，网络运行状态，网络安全事件，个人敏感信息等操作日志，保存不少于六个月，并且网络多机备份</p>\n</blockquote>\n<blockquote>\n<p>扩展日志命令方式appName_logType_logName.log</p>\n</blockquote>\n<blockquote>\n<p>日志输出时，使用占位符拼接,内部实现的是StringBuilder<br>logger.debug(“id = {} and symbol = {}”,id,symbol);</p>\n</blockquote>\n<blockquote>\n<p>对于trace/debug/info级别的日志输出,必须先判断开关</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(logger.isDebugEnable())&#123;</span><br><span class=\"line\">    logger.debug(<span class=\"string\">&quot;id = &#123;&#125;&quot;</span>,id)</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>禁止使用System.out或System.err输出日志或者使用e.printStackTrace打印异常堆栈</p>\n</blockquote>\n<blockquote>\n<p>打印日志，直接调用toString方法，不要通过JSONObject.toJsonString，不然会调用get方法</p>\n</blockquote>\n<blockquote>\n<p>单元测试必须遵守AIR，自动化，独立性，可重复</p>\n</blockquote>\n<blockquote>\n<p>单元测试之间不能先后调用,单元测试是可以重复执行的</p>\n</blockquote>\n<blockquote>\n<p>用户个人页面必须权限校验</p>\n</blockquote>\n<blockquote>\n<p>用户敏感数据，必须进行数据脱敏例如 显示 130****4320,防止泄漏</p>\n</blockquote>\n<blockquote>\n<p>用户请求传入的任何参数必须做有效性验证<br>page size 过大导致内存溢出<br>恶意的order by 导致数据库慢查询<br>缓存击穿<br>SSRF，既伪造一个服务端请求，攻击者利用系统的某些接口，通过这个接口向目标系统发情攻击<br>任意重定向<br>SQL注入，Shell注入，反序列化注入<br>正则输入源串拒接服务ReDoS</p>\n</blockquote>\n<blockquote>\n<p>禁止向HTML页面输出未经安全过滤或者正确转义的用户数据</p>\n</blockquote>\n<blockquote>\n<p>表单，AJAX必须执行CSRF安全验证<br>跨站请求伪造是一类常见的编程漏洞，对于存在csrf的网站，攻击者可以实现通过构造好的url，只有受害者用户一访问，后台便可以在用户不知情的情况下修改用户数据<br>可以理解为攻击者盗用了你的身份，然后以你的名义发起恶意请求，这个请求对于服务器来说完全合法</p>\n</blockquote>\n<blockquote>\n<p>url外部重定向传入的地址，必须执行白名单过滤</p>\n</blockquote>\n<blockquote>\n<p>表示是或者否，必须使用is_xxx命名，类型是unsigned tinyint</p>\n</blockquote>\n<blockquote>\n<p>任何字段如果为非负数，必须是unsigned</p>\n</blockquote>\n<blockquote>\n<p>表名，字段名都必须使用小写，数据库修改字段的代价很大，MySQL在Windows下是不区分大小写的，但是在Linux下区分大小写，所有不允许有大小写</p>\n</blockquote>\n<blockquote>\n<p>表明使用用复数形式</p>\n</blockquote>\n<blockquote>\n<p>主键索引名为pk_字段名，唯一索引为uk_字段名,普通索引为idx_字段名</p>\n</blockquote>\n<blockquote>\n<p>小数类型一律用decimal,禁止使用float和double<br>如果您要遵守公认会计原则(GAAP)规则，则货币栏必须至少包含4位小数，以确保舍入值不超过$0.01。 在这种情况下，应该定义具有4位小数的列，如下所示：<br>amount DECIMAL(19,4),第一个参数是最大位数，第二个参数是小数位数<br>如果存储范围超过decimal的范围，建议将数据拆成证书和小数分开存储</p>\n</blockquote>\n<blockquote>\n<p>如果存储的字符串长度几乎相等，使用char定长字符串类型</p>\n</blockquote>\n<blockquote>\n<p>varchar是可变长字符串，不预先分配内存空间，长度不要超过5000，如果长度大于这个值，使用text类型，单独出来一张表，用主键来对应，避免影响其他字段的索引值</p>\n</blockquote>\n<blockquote>\n<p>表必备三字段，id，create_time,update_time<br>id为主键，类型为bigint unsigned，单表时自增，步长为1，<br>create_time,update_time类型均为datetime类型,</p>\n</blockquote>\n<blockquote>\n<p>业务上具有唯一特性的字段，即使是组合字段，也必须建立唯一索引<br>唯一索引不会影响insert速度，但是提高查找速度是明显的，<br>另外，即时在应用层做了非常完善的校验控制，只要没有唯一索引，根据墨菲定律，必有脏数据产生</p>\n</blockquote>\n<blockquote>\n<p>超过三个表禁止join，需要join的字段，数据类型必须保持一致，<br>多表关联查询时,被关联的字段要有索引<br>即时双表join,也要注意表索引</p>\n</blockquote>\n<blockquote>\n<p>在varchar字段建立索引时，必须指定索引长度，没必要全字段建立索引，根据实际的文本区分度决定索引长度</p>\n</blockquote>\n<blockquote>\n<p>页面搜索，严禁左模糊和全模糊，如果需要请走搜索引擎，索引文件根据最左匹配原则，如果左边的值未确定，那么无法使用此索引</p>\n</blockquote>\n<blockquote>\n<p>count(*)会统计为列值为null的行,count(列名)不会</p>\n</blockquote>\n<blockquote>\n<p>count(distinct 字段)计算该列除null之外的不重复行</p>\n</blockquote>\n<blockquote>\n<p>null和任何值比较都是null，而不是true或false</p>\n</blockquote>\n<blockquote>\n<p>如果某一列的值全为空，使用IFNULL(count(列名))或者IFNULL(SUM(列名)),避免空指针<br>使用ISNULL判断是否为NULL，ISNULL(列名)</p>\n</blockquote>\n<blockquote>\n<p>若分页查询，count为0,应该直接返回，避免执行后面的分页语句</p>\n</blockquote>\n<blockquote>\n<p>不得使用外键和级联</p>\n</blockquote>\n<blockquote>\n<p>禁止使用存储过程，存储过程难以调试和扩展，更没有移植性</p>\n</blockquote>\n<blockquote>\n<p>数据订正，要先select，避免出现误删除</p>\n</blockquote>\n<blockquote>\n<p>对于数据库中多个表的查询，都需要在列名前加表的别名</p>\n</blockquote>\n<blockquote>\n<p>在表查询中，一律不使用*</p>\n</blockquote>\n<blockquote>\n<p>不要使用resultCLass当返回参数，即使所有的属性名与数据库字段对应，也需要定义resultMap，方便配置映射关系，使字段与DO类解耦</p>\n</blockquote>\n<blockquote>\n<p>不允许直接拿HashMap和HashTable作为查询结果输出<br>某同学为了避免写一个resultMap,直接使用HashMap接受数据库返回结果，结果出现本地把bigint转换成long值，而由于线上数据库版本不一样，解析成BigInteger，出现问题</p>\n</blockquote>\n<blockquote>\n</blockquote>\n"},{"title":"待学清单","date":"2022-06-20T07:57:40.000Z","cover":"/img/8.png","_content":"问题排查能力\nblockingQueue []\nredis\nmongo\ntidb\n","source":"_posts/note/待学清单.md","raw":"---\ntitle: 待学清单\ndate: 2022-6-20 15:57:40\ncover: \ntags:\n- \n---\n问题排查能力\nblockingQueue []\nredis\nmongo\ntidb\n","slug":"note/待学清单","published":1,"updated":"2022-08-13T07:50:12.452Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxc000jo0ti80vvdjf5","content":"<p>问题排查能力<br>blockingQueue []<br>redis<br>mongo<br>tidb</p>\n","site":{"data":{}},"excerpt":"","more":"<p>问题排查能力<br>blockingQueue []<br>redis<br>mongo<br>tidb</p>\n"},{"title":"跨域请求","date":"2020-05-18T12:37:39.000Z","cover":"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220518203805.png","_content":"\n# 什么是跨域请求\n>请求的目标URL和所在网页的URL的协议、域名、端口有一个不同，就算是跨域\n> https,baidu,80\n\n# CORS\n**跨域资源共享(Cross-origin resource sharing)**\n\n> 在跨域请求之前，先发送options请求询问服务器是否允许接下来的跨域请求\n> OPTIONS请求中添加字段\n> Origin:发起请求的域\n> Access-Control-Request-Method：将要发起的跨域请求方式（GET/PUT/POST/DELETE）\n> Access-Control-Request-Headers：将要发起的跨域请求中包含的请求头字段\n\n服务器通过响应字段表示是否允许这个跨域请求，浏览器收到后检查如果不符合，就拒绝\n> Access-Control-Allow-Origin：允许哪些域来访问（*表示允许所有域的请求）\nAccess-Control-Allow-Methods：允许哪些请求方式\nAccess-Control-Allow-Headers：允许哪些请求头字段\nAccess-Control-Allow-Credentials：是否允许携带Cookie\n\n# 两个优化\n如果是一个简单请求，那么就直接发起请求，只需要加入Origin字段表明自己的来源，服务器根据Allow-Origin判断是否符合要求\n简单请求就是HEAD，GET，POST三者之一，请求头中的\n\n# 四种常见的 POST 提交数据方式\nHTTP协议是由ASCII码传输的，建立在TCP/IP协议之上的应用层规范，规范把HTTP请求分为三个部分，状态行，请求头，消息主体\n协议规定POST提交的数据必须放到消息体中，但是没有规定编码方式。\n数据发送出去，服务端通过Content-Type字段对主体进行解析\n## application/x-www-form-urlencoded\n默认的编码方式，采用的浏览器的原生form表单，\n","source":"_posts/note/跨域请求.md","raw":"---\ntitle: 跨域请求\ndate: 2020-5-18 20:37:39\ncover: https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220518203805.png\ntags:\n- note\n---\n\n# 什么是跨域请求\n>请求的目标URL和所在网页的URL的协议、域名、端口有一个不同，就算是跨域\n> https,baidu,80\n\n# CORS\n**跨域资源共享(Cross-origin resource sharing)**\n\n> 在跨域请求之前，先发送options请求询问服务器是否允许接下来的跨域请求\n> OPTIONS请求中添加字段\n> Origin:发起请求的域\n> Access-Control-Request-Method：将要发起的跨域请求方式（GET/PUT/POST/DELETE）\n> Access-Control-Request-Headers：将要发起的跨域请求中包含的请求头字段\n\n服务器通过响应字段表示是否允许这个跨域请求，浏览器收到后检查如果不符合，就拒绝\n> Access-Control-Allow-Origin：允许哪些域来访问（*表示允许所有域的请求）\nAccess-Control-Allow-Methods：允许哪些请求方式\nAccess-Control-Allow-Headers：允许哪些请求头字段\nAccess-Control-Allow-Credentials：是否允许携带Cookie\n\n# 两个优化\n如果是一个简单请求，那么就直接发起请求，只需要加入Origin字段表明自己的来源，服务器根据Allow-Origin判断是否符合要求\n简单请求就是HEAD，GET，POST三者之一，请求头中的\n\n# 四种常见的 POST 提交数据方式\nHTTP协议是由ASCII码传输的，建立在TCP/IP协议之上的应用层规范，规范把HTTP请求分为三个部分，状态行，请求头，消息主体\n协议规定POST提交的数据必须放到消息体中，但是没有规定编码方式。\n数据发送出去，服务端通过Content-Type字段对主体进行解析\n## application/x-www-form-urlencoded\n默认的编码方式，采用的浏览器的原生form表单，\n","slug":"note/跨域请求","published":1,"updated":"2022-08-13T07:50:12.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxe000lo0tiaj3kb1by","content":"<h1 id=\"什么是跨域请求\"><a href=\"#什么是跨域请求\" class=\"headerlink\" title=\"什么是跨域请求\"></a>什么是跨域请求</h1><blockquote>\n<p>请求的目标URL和所在网页的URL的协议、域名、端口有一个不同，就算是跨域<br>https,baidu,80</p>\n</blockquote>\n<h1 id=\"CORS\"><a href=\"#CORS\" class=\"headerlink\" title=\"CORS\"></a>CORS</h1><p><strong>跨域资源共享(Cross-origin resource sharing)</strong></p>\n<blockquote>\n<p>在跨域请求之前，先发送options请求询问服务器是否允许接下来的跨域请求<br>OPTIONS请求中添加字段<br>Origin:发起请求的域<br>Access-Control-Request-Method：将要发起的跨域请求方式（GET/PUT/POST/DELETE）<br>Access-Control-Request-Headers：将要发起的跨域请求中包含的请求头字段</p>\n</blockquote>\n<p>服务器通过响应字段表示是否允许这个跨域请求，浏览器收到后检查如果不符合，就拒绝</p>\n<blockquote>\n<p>Access-Control-Allow-Origin：允许哪些域来访问（*表示允许所有域的请求）<br>Access-Control-Allow-Methods：允许哪些请求方式<br>Access-Control-Allow-Headers：允许哪些请求头字段<br>Access-Control-Allow-Credentials：是否允许携带Cookie</p>\n</blockquote>\n<h1 id=\"两个优化\"><a href=\"#两个优化\" class=\"headerlink\" title=\"两个优化\"></a>两个优化</h1><p>如果是一个简单请求，那么就直接发起请求，只需要加入Origin字段表明自己的来源，服务器根据Allow-Origin判断是否符合要求<br>简单请求就是HEAD，GET，POST三者之一，请求头中的</p>\n<h1 id=\"四种常见的-POST-提交数据方式\"><a href=\"#四种常见的-POST-提交数据方式\" class=\"headerlink\" title=\"四种常见的 POST 提交数据方式\"></a>四种常见的 POST 提交数据方式</h1><p>HTTP协议是由ASCII码传输的，建立在TCP/IP协议之上的应用层规范，规范把HTTP请求分为三个部分，状态行，请求头，消息主体<br>协议规定POST提交的数据必须放到消息体中，但是没有规定编码方式。<br>数据发送出去，服务端通过Content-Type字段对主体进行解析</p>\n<h2 id=\"application-x-www-form-urlencoded\"><a href=\"#application-x-www-form-urlencoded\" class=\"headerlink\" title=\"application/x-www-form-urlencoded\"></a>application/x-www-form-urlencoded</h2><p>默认的编码方式，采用的浏览器的原生form表单，</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"什么是跨域请求\"><a href=\"#什么是跨域请求\" class=\"headerlink\" title=\"什么是跨域请求\"></a>什么是跨域请求</h1><blockquote>\n<p>请求的目标URL和所在网页的URL的协议、域名、端口有一个不同，就算是跨域<br>https,baidu,80</p>\n</blockquote>\n<h1 id=\"CORS\"><a href=\"#CORS\" class=\"headerlink\" title=\"CORS\"></a>CORS</h1><p><strong>跨域资源共享(Cross-origin resource sharing)</strong></p>\n<blockquote>\n<p>在跨域请求之前，先发送options请求询问服务器是否允许接下来的跨域请求<br>OPTIONS请求中添加字段<br>Origin:发起请求的域<br>Access-Control-Request-Method：将要发起的跨域请求方式（GET/PUT/POST/DELETE）<br>Access-Control-Request-Headers：将要发起的跨域请求中包含的请求头字段</p>\n</blockquote>\n<p>服务器通过响应字段表示是否允许这个跨域请求，浏览器收到后检查如果不符合，就拒绝</p>\n<blockquote>\n<p>Access-Control-Allow-Origin：允许哪些域来访问（*表示允许所有域的请求）<br>Access-Control-Allow-Methods：允许哪些请求方式<br>Access-Control-Allow-Headers：允许哪些请求头字段<br>Access-Control-Allow-Credentials：是否允许携带Cookie</p>\n</blockquote>\n<h1 id=\"两个优化\"><a href=\"#两个优化\" class=\"headerlink\" title=\"两个优化\"></a>两个优化</h1><p>如果是一个简单请求，那么就直接发起请求，只需要加入Origin字段表明自己的来源，服务器根据Allow-Origin判断是否符合要求<br>简单请求就是HEAD，GET，POST三者之一，请求头中的</p>\n<h1 id=\"四种常见的-POST-提交数据方式\"><a href=\"#四种常见的-POST-提交数据方式\" class=\"headerlink\" title=\"四种常见的 POST 提交数据方式\"></a>四种常见的 POST 提交数据方式</h1><p>HTTP协议是由ASCII码传输的，建立在TCP/IP协议之上的应用层规范，规范把HTTP请求分为三个部分，状态行，请求头，消息主体<br>协议规定POST提交的数据必须放到消息体中，但是没有规定编码方式。<br>数据发送出去，服务端通过Content-Type字段对主体进行解析</p>\n<h2 id=\"application-x-www-form-urlencoded\"><a href=\"#application-x-www-form-urlencoded\" class=\"headerlink\" title=\"application/x-www-form-urlencoded\"></a>application/x-www-form-urlencoded</h2><p>默认的编码方式，采用的浏览器的原生form表单，</p>\n"},{"title":"开发常用网站","password":"qiuyang","date":"2022-06-14T02:41:30.000Z","cover":"/img/2.png","_content":"# 对账\n模版账号\nv_lyylyang\n密码，验证码随意\n功能预览\nhttps://fss-sit.inwesure.com/$define/check_reconciliation_template\n拖拽前端\nhttps://wof-sit.inwesure.com/app/45?permissionId=17986\n持续集成\nhttps://wesure.coding.inwesure.com/p/g010/application/#/list/12096?tab=ciConstruct\nhttps://core-prd.inwesure.com/resource/4336\n\n\n服务发现地址\nhttps://blc.inwesure.com/$define/etcdmanager\n\n线上日志\nhttps://blc.inwesure.com/app/view/12096\n\n数据库变更\nhttps://blc.oa.com/mysqlChange\n\n对账任务参考网页\nhttps://fss-sit.inwesure.com/deduct\n\n前端文档\nhttps://docs.inwesure.com/gitlab/1303944608295768065/up-ui-components/index\n\n代码仓库\nhttps://wesure.coding.inwesure.com/p/g010/repos\n\nfap财务核算 (finance accounting platform)\n后端\nhttps://wesure.coding.inwesure.com/p/g010/d/fap/git\n前端\nhttps://wesure.coding.inwesure.com/p/g010/d/fap-web/git\n\n采购和财务系统(开发供应商)\n前端\nhttps://wesure.coding.inwesure.com/p/g010/d/cost-web/git\n后端\nhttps://wesure.coding.inwesure.com/p/g010/d/wfp/git\n容器配置\nhttps://blc.inwesure.com/app/view/10836\n网页\nhttps://cost-sit.inwesure.com/cost/$define/cost_pay_list?id=8523&orderNo=GP20220610000005\n表单元素属性\nhttps://www.tapd.cn/32126111/markdown_wikis/show/#1132126111001003555\n鲁班使用指南\nhttps://docs.inwesure.com/gitlab/1448205995955601524/luban-web/%E5%89%8D%E8%A8%80\n任务管理\n\n任务模版\nhttps://blc-sit.inwesure.com/task_template/1527189466907803648\n\n\n\n办事中心-流程控制\nhttps://my.inwesure.com/process/1552110249677607030\n\n\nexcel模版\n[https://core-prd.inwesure.com/resource\n](https://core-prd.inwesure.com/resource\n)\n","source":"_posts/work/开发常用网址.md","raw":"---\ntitle: 开发常用网站\npassword: qiuyang\ndate: 2022-6-14 10:41:30\ncover: \ntags:\n- work\n---\n# 对账\n模版账号\nv_lyylyang\n密码，验证码随意\n功能预览\nhttps://fss-sit.inwesure.com/$define/check_reconciliation_template\n拖拽前端\nhttps://wof-sit.inwesure.com/app/45?permissionId=17986\n持续集成\nhttps://wesure.coding.inwesure.com/p/g010/application/#/list/12096?tab=ciConstruct\nhttps://core-prd.inwesure.com/resource/4336\n\n\n服务发现地址\nhttps://blc.inwesure.com/$define/etcdmanager\n\n线上日志\nhttps://blc.inwesure.com/app/view/12096\n\n数据库变更\nhttps://blc.oa.com/mysqlChange\n\n对账任务参考网页\nhttps://fss-sit.inwesure.com/deduct\n\n前端文档\nhttps://docs.inwesure.com/gitlab/1303944608295768065/up-ui-components/index\n\n代码仓库\nhttps://wesure.coding.inwesure.com/p/g010/repos\n\nfap财务核算 (finance accounting platform)\n后端\nhttps://wesure.coding.inwesure.com/p/g010/d/fap/git\n前端\nhttps://wesure.coding.inwesure.com/p/g010/d/fap-web/git\n\n采购和财务系统(开发供应商)\n前端\nhttps://wesure.coding.inwesure.com/p/g010/d/cost-web/git\n后端\nhttps://wesure.coding.inwesure.com/p/g010/d/wfp/git\n容器配置\nhttps://blc.inwesure.com/app/view/10836\n网页\nhttps://cost-sit.inwesure.com/cost/$define/cost_pay_list?id=8523&orderNo=GP20220610000005\n表单元素属性\nhttps://www.tapd.cn/32126111/markdown_wikis/show/#1132126111001003555\n鲁班使用指南\nhttps://docs.inwesure.com/gitlab/1448205995955601524/luban-web/%E5%89%8D%E8%A8%80\n任务管理\n\n任务模版\nhttps://blc-sit.inwesure.com/task_template/1527189466907803648\n\n\n\n办事中心-流程控制\nhttps://my.inwesure.com/process/1552110249677607030\n\n\nexcel模版\n[https://core-prd.inwesure.com/resource\n](https://core-prd.inwesure.com/resource\n)\n","slug":"work/开发常用网址","published":1,"updated":"2022-08-13T08:04:08.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxf000no0tifqzdhkee","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\r\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"df0bb676bd930094b33d7958b3eb3abc432969f3c79268dfcdebae424cc0d9c1\">4a76fe182f6b350bda831c22429c28628839164ab4d60bac4d2722759e3d085099997ac5d22a768ee614a48bba07fce3ef37c36cac2a9e6be03f73a4b9c2233de74624530c27d1c7377a26219bdd728bf29754731db35a812b43a319a7f7e6080e25411e4d57e9e8f351dbcdfb27b4eee169d0f862c6a8be6a6a53e245952a5f5785e2d366152ff7bde6c507ed41e76e89e24eb3231d1094bf36921e645351e2e21b795f433b8addbc5132e29185832ebdfc2fd353191623f0db86fb6e9e7a680b0c2d61fd46477f032ef08e37b8cfd91b9a40b3d6b7c1263d87597b46fef33fc77a55a696901e9ec071202b663a465cfd72bd08e4a73651cf112eb5343ed3eabeaec9f293e9f1bc365818aec68fd3a220736257ca02343b7c9af9e04a9bc00ccfcb615fa8a479d0a622fc1ff2a8fde5832705400745a1a1739227bd40cf15550e2d55236dfa998b9f3a67a104ad43c34b81b99e972260dd890c56652dad2626e5adb57685fe0b50c46f800bf8d0d45e1b21efa4774c47ef97613247b08d705c217e0428fae75e5b306fb5e3bee5e0e68c1470e1984118c6760633cbb7327e20d8042823aae279fde4a2fe204e5968878c6a507e8caf1af8c46f6dfa232e2045d60ecee16faf79e43094d966999ec4c2e5151e424f9df0ddd99063f433287e35e8df5ad66d6b386d3b21299ccd09b0da21da71a45c31ded2c6a8f787c8bddbb6d4163972f69b4ca1937fb028eaa2bba0bc2987b6d3ed2b075265ed574e0fdd51396d32e8ea66919701b035780f1764f7e23d2a2bee07d108eae21e549fa69cbc953406089c67debc47bf05a0dc574ac8852cae27f99183dce46ef01451c36b3060853f1bc9d61a1d69e8b199accee5d64aa7fe861bfdcbec3280e0eca210b5a2216af685c20d8d3333e85efec31649f6318b593ad3018ed7bb79a52f071d8a48363a9671a61b0824779015e27f6b5a1376fe09eb647f88f1e5cedf790c58de06732845e8e8501fdef1dcc42e411b7bcb36bfe6abe0c607d9e195fed36d4efd707e35433e27862d4da5f26c881d70b2b7e524fd1577cd384b2e879c6dcabc42a8ab469d32122cdfa2f143f1766889a1bcd186e9e552966433d6c122147bb3085e69f1d804f36480392c80d25a58a084da3b18fcf4f925ad96c414d2fa218a976f7d97d923f234c3e08bd4a3a0e42a6eddddfbf404e1e16cfefca537097cf80870316c48eb7d3beac4e17c98a25281d51a8e5d2dae2b6145aabe607556281aaefa845cbb1b93a4bb8788ac56d6f14e32db2c1263034d9ce11b4382328b850f2d906a6b65103a13a9f8070dcccfa643947273db22d7790913fc47f40eb52ea319fe1209ac91e6ec63602f29c7cc53f5cc2c1bf8fe0eed6e2952970c69925e8daf0f3c6a11fd2a000fe1d2da28e2bb3e2979b806315781baf17734e7602128eca59e7149c6391d9a6a6c2e48d077872e123e2c3d86bab5177742f754e70a4a79647f82f1965ce2bdbd040fea6d08337465126e6e6601baa0223691c7b07a947948c095028fdf2257db08c10eadfc03f460563c1cecab8c41fc8450f38345327fe54d88f9db3484b5c3ba3bab8303f0dbcdfe4a8e29f7f2ebaea31a9a6e2e5b4857e862a2087bfe52d9844ee27f57c11dc93e9496b98343fbb08aa5389cda69895a8d6c53daad3b3a452a6a4864b1de85c187d44e292169d39bb42680450f94424bd519ff4504776da3c34501dc4553f725cc25ce545d294766d98daa3d804b35ad1af31f69afb25932ae798a1f2a4a2aee290aa53a2961e2a9cbb56c185c38aadaae33a195fcf5049f6b51f08496b0b5cc2a9ec3876781563b5997d33251b6f3aaa518394015b49191d652422c864234e6c05e31399cc9f7c0eface617ba94f8ad49b9152b06ce58417d18f87797aa2f878390fff0a6882fe64d3e3000c67a950d7aa9bf7d9c92a31e02e07bdcc6fe9a10a9f21e7978ee2fc27b620940da4b020ad77bddf622e338e8f4c6048e79b068731a38a9f8c9ee34aa7535cb4dcfef53783cac6990c26d33b342eb6a9e48e25750868326878bbac091dadba5a710a8be970b6a1db9bcda7584beb31093d57371e22d0fc65a7eab069a2da2fb5addd596a4b58b9e919850211cd3021cd95026189c0eaa1e95a55a4d19dd6afb06161df51495be3a06e4006b526eac8dff94a71a299a766b12cbe53fec4c1027630a97c6b8b17c79aa57036ef59f2b3bb44afd566797da2cc72055d1b7802c6c265ef638e7a689a47c71afb090023b4514004a488ce97b57e4be4f95048ab4d29543cf316b1633c818ee88e86f4da6e2d28e35cd1aee829960d620474505f5329b0b22f8b73baa92192a9e6c12e397e28763bcff03643e172da0a9f19aafcb54ee9320207111387dac0b173b913fe3c29989b59fb7a634a93c2d3fea57d711a6cf3b8c8f4e4eb78ce74e2beaa5561c828ca3e81223c030154c9e418a7658eea8ba1ed63375188ecb77966ecb29886fca9d87f9d12429210605f9d6f84469a0a00b3eaa1ae7995ec744058707d26e9324e252db90bff440dc1a9a49eb015f8dc093b33604e08acf3e80dc613827ee4b4bfab8ff3d7bcd358867d1921bf31356f51ea8f827d91ef2ad885cc9251e1c5e190974009097e6793054e55efdfeb580bec366de4cf9b1631fa126d386b7c02c09cfb7b2743cc775da3bbd4df0e228a10fdaa3f78748a9d4a0f2ef0029b0bfdce175951c5defdcded36130a246e66ce8d60bc14fa392ce3b7b905b1c7e595baeadf094c5e1597f567dae9d0af038e510fa9b59bc02d82aafd5d70d4cedac69207e52986bcf8904111aed62b2e37c1c29684713bebc0a7fbf13b76ceedc19ad9756c067359e2bcdbba528f94df0f113e253dda1adda30ffabff8254a9c47762e8e4c90499121a222a2ba8ab6e5c248f2b22aea4087f2709745752008e71a2a75a59b00e78407f03a3333468f817f4946378c0b96713ebd497d927557226b1c49315c60a953278784a8bdb4305edc7325cab3b4791090c8757dcc89490852fe9122cd66ebddb4193479aad616fa953a68dba37184a122c128616afb11fb701b302ff5f7b0341109ffc261b7285c3b3a99c0156275f88b1a2015d4f0f85b092ae5e651e9f1c31eae3f2779f043ce8008d4c81b5035576e247e0ef2b7ef986cf94125bd6a16915110b2af80f484e213c96e8cb7aa345b42cc5e48f9d02b3dbd2a693b636ff2a29a1ab059d38e68ec351e04277fd4ac6b4bd89d8370590f4933e4f4ae414758b39c87bf84bb005e4c399ce94a1444305004db67b375c4f193def5fe93595c737029e8ac0d36862da761919b970be6781be6803b1dd74c85470ee6ba3c30dced028947210cf85e4b09def305ffc9a770f5ca3f2081811d2d92cc3c30b778bfb224525a9bde7fabee4c5b1a6b54580602610d50787e436bf38e9fe6c02384b0174432162833016e356f482a2c00ac9e3eb5d59429378bc79ba6b52ed258a962daa6fbe27d2b2318fadd40f250497a0de1c04df0881cb0be72454e0fbe6864c5dc9402acff68b613037d547764de71c83e2302e82bbd66ca322d9a145831805186dcc470b3eb3666fe92a8b4a3ec433751147280d1ecc19d8886db10cb9f36795a42893041d98c09346e9a73863549e6fec3345306fe4aff9b08d994747b895aefa4ff512c72db65f977505a4c95ce5a6aea58918d0e46aaf3ffe75c116af33c867c86bf24da307c7e66bdcf454d427614b5b3ea49fa873fda82938d22e17ca7b405be95651865bae89ff5d8645d962ad183c222899b9e8ab49f07c2beb50c3f0e2bc581741f3519cf08f1444afe9df2546a1ebb9cc8a9098e0be8ca339d75529c9fb96e637dc455962f6b79f7eb7beb91819396732662d7f5aacafbf8e8bd79960be80767d68f304343f306fa3f99b03efbbb50224b972e7563dbc8fd239de1fcd0e515affae04fd561cb8cc0c2acffd511da78f835deb15586254b0aa94d0db13c90452d1a872263fe2173ea8d02e344482c048a64f6af1f87e19cee6b39b4ab7a97fed48667d194b324be16459efd2cf7d61a46e8fbff490eac1c8552bf2ce5bc6c726d88cf11d0b81897b0e86c8a18b3a15c4517daa26e64b8c519942a88eeed4a771250c0cb838c2514706ca290ae94b738ae333cbb81e5202a8c89ba9441b4032af31cee72ade5238e8547c1c08e12b585699e8967c9a76846506bff1dd57edbe0fd658e59fa59bda3ad867570bd3c7a2eb7fcb9e4db9ea5d41fde74913f298b7e38691f5929befcfa089f23cda8c834488ba5c85b21ded1c3323d359fb40ecbdb5a139afdd9271c015ecb22e9fa5c3106d7bab3cdb4ec86b3d2679d369568dc28c72e636bc166946d6d60f88ff5aa1b3289874b52b9440fbf4171429b9a2c93f87ba174355cf4f4d697835ba9541a67bc6095fb417f7c7c801860a5c6a3bb4e2a627959b0f63d2ae0c940077294b0ff1c0a45cd3c7813b97d20aec02b9407450165e1d13ba172613c7f715a98b4664ecf110be60ca9e453f3f33aff54cf366fa6c7897d7de59dd5f6eab6edaa9576fcdc7ca02358525b3b6fce2b87f7ae6d0e53d06b4d3623a2e73541969f483d4d0a58c77e545e38704d71f1be8fe01368fe0786f7a24df682ed5b862c2997d1e240896f1adbcdd1087ccbc8ed80af3c7ac379c22a6f9ab6e829650325e089176a914c3661c7d1b7059ff161adf05f335ce079567f43a9f579af8ff0584f2fa5befb479b0e8ca955b249d37e5ba74fd5b87eb2da0890feb6051384c2fa4f5f55ef7b82b</script>\r\n  <div class=\"hbe hbe-content\">\r\n    <div class=\"hbe hbe-input hbe-input-default\">\r\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\r\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\r\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\r\n      </label>\r\n    </div>\r\n  </div>\r\n</div>\r\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"excerpt":"Here's something encrypted, password is required to continue reading.","more":"Here's something encrypted, password is required to continue reading.","origin":"<h1 id=\"对账\"><a href=\"#对账\" class=\"headerlink\" title=\"对账\"></a>对账</h1><p>模版账号<br>v_lyylyang<br>密码，验证码随意<br>功能预览<br><a href=\"https://fss-sit.inwesure.com/$define/check_reconciliation_template\">https://fss-sit.inwesure.com/$define/check_reconciliation_template</a><br>拖拽前端<br><a href=\"https://wof-sit.inwesure.com/app/45?permissionId=17986\">https://wof-sit.inwesure.com/app/45?permissionId=17986</a><br>持续集成<br><a href=\"https://wesure.coding.inwesure.com/p/g010/application/#/list/12096?tab=ciConstruct\">https://wesure.coding.inwesure.com/p/g010/application/#/list/12096?tab=ciConstruct</a><br><a href=\"https://core-prd.inwesure.com/resource/4336\">https://core-prd.inwesure.com/resource/4336</a></p>\n<p>服务发现地址<br><a href=\"https://blc.inwesure.com/$define/etcdmanager\">https://blc.inwesure.com/$define/etcdmanager</a></p>\n<p>线上日志<br><a href=\"https://blc.inwesure.com/app/view/12096\">https://blc.inwesure.com/app/view/12096</a></p>\n<p>数据库变更<br><a href=\"https://blc.oa.com/mysqlChange\">https://blc.oa.com/mysqlChange</a></p>\n<p>对账任务参考网页<br><a href=\"https://fss-sit.inwesure.com/deduct\">https://fss-sit.inwesure.com/deduct</a></p>\n<p>前端文档<br><a href=\"https://docs.inwesure.com/gitlab/1303944608295768065/up-ui-components/index\">https://docs.inwesure.com/gitlab/1303944608295768065/up-ui-components/index</a></p>\n<p>代码仓库<br><a href=\"https://wesure.coding.inwesure.com/p/g010/repos\">https://wesure.coding.inwesure.com/p/g010/repos</a></p>\n<p>fap财务核算 (finance accounting platform)<br>后端<br><a href=\"https://wesure.coding.inwesure.com/p/g010/d/fap/git\">https://wesure.coding.inwesure.com/p/g010/d/fap/git</a><br>前端<br><a href=\"https://wesure.coding.inwesure.com/p/g010/d/fap-web/git\">https://wesure.coding.inwesure.com/p/g010/d/fap-web/git</a></p>\n<p>采购和财务系统(开发供应商)<br>前端<br><a href=\"https://wesure.coding.inwesure.com/p/g010/d/cost-web/git\">https://wesure.coding.inwesure.com/p/g010/d/cost-web/git</a><br>后端<br><a href=\"https://wesure.coding.inwesure.com/p/g010/d/wfp/git\">https://wesure.coding.inwesure.com/p/g010/d/wfp/git</a><br>容器配置<br><a href=\"https://blc.inwesure.com/app/view/10836\">https://blc.inwesure.com/app/view/10836</a><br>网页<br><a href=\"https://cost-sit.inwesure.com/cost/$define/cost_pay_list?id=8523&amp;orderNo=GP20220610000005\">https://cost-sit.inwesure.com/cost/$define/cost_pay_list?id=8523&amp;orderNo=GP20220610000005</a><br>表单元素属性<br><a href=\"https://www.tapd.cn/32126111/markdown_wikis/show/#1132126111001003555\">https://www.tapd.cn/32126111/markdown_wikis/show/#1132126111001003555</a><br>鲁班使用指南<br><a href=\"https://docs.inwesure.com/gitlab/1448205995955601524/luban-web/%E5%89%8D%E8%A8%80\">https://docs.inwesure.com/gitlab/1448205995955601524/luban-web/%E5%89%8D%E8%A8%80</a><br>任务管理</p>\n<p>任务模版<br><a href=\"https://blc-sit.inwesure.com/task_template/1527189466907803648\">https://blc-sit.inwesure.com/task_template/1527189466907803648</a></p>\n<p>办事中心-流程控制<br><a href=\"https://my.inwesure.com/process/1552110249677607030\">https://my.inwesure.com/process/1552110249677607030</a></p>\n<p>excel模版<br><a href=\"https://core-prd.inwesure.com/resource\">https://core-prd.inwesure.com/resource\n</a></p>\n","encrypt":true},{"title":"IDEA暂存文件","date":"2022-06-28T07:23:08.000Z","cover":"/img/3.png","_content":"从主菜单中，选择文件 | 新 | 暂存文件或按Ctrl+Alt+Shift+Insert\nhttps://www.jetbrains.com/help/webstorm/scratches.html#create-scratch-file\n","source":"_posts/pulgin/IDEA暂存文件.md","raw":"---\ntitle: IDEA暂存文件\ndate: 2022-6-28 15:23:08\ncover: \ntags:\n- 暂存文件\n---\n从主菜单中，选择文件 | 新 | 暂存文件或按Ctrl+Alt+Shift+Insert\nhttps://www.jetbrains.com/help/webstorm/scratches.html#create-scratch-file\n","slug":"pulgin/IDEA暂存文件","published":1,"updated":"2022-08-12T16:13:29.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxg000po0ti7qhxcq66","content":"<p>从主菜单中，选择文件 | 新 | 暂存文件或按Ctrl+Alt+Shift+Insert<br><a href=\"https://www.jetbrains.com/help/webstorm/scratches.html#create-scratch-file\">https://www.jetbrains.com/help/webstorm/scratches.html#create-scratch-file</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>从主菜单中，选择文件 | 新 | 暂存文件或按Ctrl+Alt+Shift+Insert<br><a href=\"https://www.jetbrains.com/help/webstorm/scratches.html#create-scratch-file\">https://www.jetbrains.com/help/webstorm/scratches.html#create-scratch-file</a></p>\n"},{"title":"MyBatisCodeHelper-Pro","date":"2022-06-14T03:19:40.000Z","cover":"/img/2.png","_content":"\n# 配置model不被覆盖\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614114751.png)\n\n# 生成单元测试\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115240.png)\n\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115304.png)\n\n# xml生成resultMap\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/generateResultMapAndXmlGenerateJavaMethod.gif)","source":"_posts/pulgin/MyBatisCodeHelper-Pro.md","raw":"---\ntitle: MyBatisCodeHelper-Pro\ndate: 2022-6-14 11:19:40\ncover: \ntags:\n- IDEA插件\n---\n\n# 配置model不被覆盖\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614114751.png)\n\n# 生成单元测试\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115240.png)\n\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115304.png)\n\n# xml生成resultMap\n![](https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/generateResultMapAndXmlGenerateJavaMethod.gif)","slug":"pulgin/MyBatisCodeHelper-Pro","published":1,"updated":"2022-08-12T16:13:29.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxg000ro0ti1uf28hav","content":"<h1 id=\"配置model不被覆盖\"><a href=\"#配置model不被覆盖\" class=\"headerlink\" title=\"配置model不被覆盖\"></a>配置model不被覆盖</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614114751.png\"></p>\n<h1 id=\"生成单元测试\"><a href=\"#生成单元测试\" class=\"headerlink\" title=\"生成单元测试\"></a>生成单元测试</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115240.png\"></p>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115304.png\"></p>\n<h1 id=\"xml生成resultMap\"><a href=\"#xml生成resultMap\" class=\"headerlink\" title=\"xml生成resultMap\"></a>xml生成resultMap</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/generateResultMapAndXmlGenerateJavaMethod.gif\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"配置model不被覆盖\"><a href=\"#配置model不被覆盖\" class=\"headerlink\" title=\"配置model不被覆盖\"></a>配置model不被覆盖</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614114751.png\"></p>\n<h1 id=\"生成单元测试\"><a href=\"#生成单元测试\" class=\"headerlink\" title=\"生成单元测试\"></a>生成单元测试</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115240.png\"></p>\n<p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/20220614115304.png\"></p>\n<h1 id=\"xml生成resultMap\"><a href=\"#xml生成resultMap\" class=\"headerlink\" title=\"xml生成resultMap\"></a>xml生成resultMap</h1><p><img src=\"https://blog-1258707945.cos.ap-guangzhou.myqcloud.com//blog/generateResultMapAndXmlGenerateJavaMethod.gif\"></p>\n"},{"title":"GenerateAllSetter Postfix Completion","date":"2022-06-20T12:13:43.000Z","cover":"/img/2.png","_content":"生成 set\n```java\nfoo.allset\n```\n根据一段含有源对象（a）/目标对象（b）的 b.setXxx(a.getXxx()) 方法代码生成所有 set 方法以快速实现对象转换\n```java\npublic void usage05() {\n    // 用法5, 将 src 的数据赋值给 dest, 常用于两个不同类直接进行 convert(需字段名称相同), 通过 postfix\n    Foo src = new Foo();\n    Foo dest = new Foo();\n    // 取消下面的注释, 光标位于 convert 后面, 按下 Tab 键\n//        dest.setTestInt(src.getTestInt());.convert\n    // 即可得到下面结果\n    dest.setTestInt(src.getTestInt());\n    dest.setTestLong(src.getTestLong());\n    dest.setTestFloat(src.getTestFloat());\n    dest.setTestDouble(src.getTestDouble());\n    dest.setTestBoolean(src.getTestBoolean());\n}\n```\n","source":"_posts/pulgin/GenerateAllSetter Postfix Completion.md","raw":"---\ntitle: GenerateAllSetter Postfix Completion\ndate: 2022-6-20 20:13:43\ncover: \ntags:\n- 插件\n---\n生成 set\n```java\nfoo.allset\n```\n根据一段含有源对象（a）/目标对象（b）的 b.setXxx(a.getXxx()) 方法代码生成所有 set 方法以快速实现对象转换\n```java\npublic void usage05() {\n    // 用法5, 将 src 的数据赋值给 dest, 常用于两个不同类直接进行 convert(需字段名称相同), 通过 postfix\n    Foo src = new Foo();\n    Foo dest = new Foo();\n    // 取消下面的注释, 光标位于 convert 后面, 按下 Tab 键\n//        dest.setTestInt(src.getTestInt());.convert\n    // 即可得到下面结果\n    dest.setTestInt(src.getTestInt());\n    dest.setTestLong(src.getTestLong());\n    dest.setTestFloat(src.getTestFloat());\n    dest.setTestDouble(src.getTestDouble());\n    dest.setTestBoolean(src.getTestBoolean());\n}\n```\n","slug":"pulgin/GenerateAllSetter Postfix Completion","published":1,"updated":"2022-08-12T16:13:29.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxh000so0tihw7990sh","content":"<p>生成 set</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo.allset</span><br></pre></td></tr></table></figure>\n<p>根据一段含有源对象（a）/目标对象（b）的 b.setXxx(a.getXxx()) 方法代码生成所有 set 方法以快速实现对象转换</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">usage05</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 用法5, 将 src 的数据赋值给 dest, 常用于两个不同类直接进行 convert(需字段名称相同), 通过 postfix</span></span><br><span class=\"line\">    Foo src = <span class=\"keyword\">new</span> Foo();</span><br><span class=\"line\">    Foo dest = <span class=\"keyword\">new</span> Foo();</span><br><span class=\"line\">    <span class=\"comment\">// 取消下面的注释, 光标位于 convert 后面, 按下 Tab 键</span></span><br><span class=\"line\"><span class=\"comment\">//        dest.setTestInt(src.getTestInt());.convert</span></span><br><span class=\"line\">    <span class=\"comment\">// 即可得到下面结果</span></span><br><span class=\"line\">    dest.setTestInt(src.getTestInt());</span><br><span class=\"line\">    dest.setTestLong(src.getTestLong());</span><br><span class=\"line\">    dest.setTestFloat(src.getTestFloat());</span><br><span class=\"line\">    dest.setTestDouble(src.getTestDouble());</span><br><span class=\"line\">    dest.setTestBoolean(src.getTestBoolean());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>生成 set</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">foo.allset</span><br></pre></td></tr></table></figure>\n<p>根据一段含有源对象（a）/目标对象（b）的 b.setXxx(a.getXxx()) 方法代码生成所有 set 方法以快速实现对象转换</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">usage05</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 用法5, 将 src 的数据赋值给 dest, 常用于两个不同类直接进行 convert(需字段名称相同), 通过 postfix</span></span><br><span class=\"line\">    Foo src = <span class=\"keyword\">new</span> Foo();</span><br><span class=\"line\">    Foo dest = <span class=\"keyword\">new</span> Foo();</span><br><span class=\"line\">    <span class=\"comment\">// 取消下面的注释, 光标位于 convert 后面, 按下 Tab 键</span></span><br><span class=\"line\"><span class=\"comment\">//        dest.setTestInt(src.getTestInt());.convert</span></span><br><span class=\"line\">    <span class=\"comment\">// 即可得到下面结果</span></span><br><span class=\"line\">    dest.setTestInt(src.getTestInt());</span><br><span class=\"line\">    dest.setTestLong(src.getTestLong());</span><br><span class=\"line\">    dest.setTestFloat(src.getTestFloat());</span><br><span class=\"line\">    dest.setTestDouble(src.getTestDouble());</span><br><span class=\"line\">    dest.setTestBoolean(src.getTestBoolean());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"绩效考核系统","date":"2022-06-21T03:05:47.000Z","cover":"/img/10.png","_content":"\n# 360干部考核系统-wehr\n\n主要功能分为问卷管理，问卷填写，评估管理和结果报告\n\nhttps://wesure.coding.inwesure.com/p/g010/d/wehr/git\n\n使用使用分支 dev\n\n两个项目端口都是9200，改wehr为9201，同时修改grpc端口为59201\n\n\n\n\n\n\n\n# 绩效考核系统-assess\n\n分为绩效目标和绩效考核，绩效考核分为自评、初评、复评、星级报表、评估结果展示、评估配置\n\nhttps://wesure.coding.inwesure.com/p/g010/d/assess/git\n\n使用使用分支 dev\n\n## 流程\n\n新建周期(assess_period)\n\n​\t-目标人员填写(assess_target_persons)    id = period_id\n\n​\t-评估主实体(assess_header) \t\t\t\t\t period_code= period_code\n\n- \n\n\n\n## 问题\n\n### 发起目标，还没有导入填写目标人员，发起成功(好像又不用改动了)\n\n解决\n\n```java\n        //查询当前周期信息\n        AssessPeriod assessPeriodDb = assessPeriodService.selectByPrimaryKey(assessPeriod.getId());\n        if (null == assessPeriodDb){\n            return new BaseResult(BaseMessage.FAILED,\"考核周期不存在\",null);\n        }\n\n        AssessHeaderExample assessHeaderExample = new AssessHeaderExample();\n        assessHeaderExample.createCriteria()\n                .andIsDelEqualTo((byte) 0)\n                .andPeriodCodeEqualTo(assessPeriodDb.getPeriodCode());\n        List<AssessHeader> assessHeaders = assessHeaderService.selectByExample(assessHeaderExample);\n        if (CollectionUtils.isEmpty(assessHeaders)){\n            return new BaseResult(BaseMessage.FAILED,\"请先配置评估人员\",null);\n        }\n```\n\n\n\n```mysql\nperiod_status '状态 0未发起 1已发起 2已结束',\n```\n\n\n\n\n\n\n# 前端网页\n\nhttps://wesure.coding.inwesure.com/p/g010/d/assess-web/git\n\n使用使用分支 develop\n\nhttp://localhost:9008/      \n\n## 配置本地网关\n\nvue.config.js\n\n```js\nmodule.exports = {\n  // app部署路径\n  publicPath: '/',\n  // build目录\n  outputDir: 'dist',\n  devServer: {\n    clientLogLevel: 'warning',\n    historyApiFallback: true,\n    hot: true,\n    compress: true,\n    host: '0.0.0.0',\n    port: 9008,\n    open: false,\n    overlay: {\n      warnings: false, errors: true\n    },\n    watchOptions: {\n      poll: false\n    },\n    proxy: {\n      // 系统业务接口\n      '/wofNidGenerator/getNids': {\n        target: 'http://upmsapi.sit.com:10020',\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'v_linzlzhao'\n        }\n      },\n      // 自定义页面接口\n      '/upmsapi/forward_service/': {\n        target: 'http://upmsapi.sit.com:10020', // sit\n        changeOrigin: true,\n        secure: false\n      },\n      '/manage/formappdata/': {\n        target: 'http://10.0.32.65:80',\n        changeOrigin: true,\n        secure: false\n      },\n      '/manage/customapp/': {\n        target: 'http://10.0.32.65:80',\n        // target: 'http://10.98.163.34:8001',\n        changeOrigin: true,\n        secure: false\n      },\n      '/manage/processappdata/': {\n        target: 'http://10.0.32.65:80',\n        changeOrigin: true,\n        secure: false\n      },\n      '/workflow/workflow_procIns/getDataByUrl': {\n        target: 'http://upmsapi.sit.com:10020',\n        // target: 'http://10.98.163.22:10020',\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'v_linzlzhao'\n        }\n      },\n      '/workflow/': {\n        target: 'http://10.0.32.179:7001',\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'v_linzlzhao'\n        }\n      },\n      // 系统业务接口\n      '/assess/result/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        target: 'http://10.98.164.181:9200', // sit\n        // target: 'http://10.98.164.143:9200', // sit\n        changeOrigin: true,\n        secure: false\n        // headers: {\n        //   'X-WESURE-ENAME': 'raymcheng'\n        // }\n      },\n      '/public/pbc': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9200', // 一路\n        // target: 'http://10.98.163.130:9200', // 景康\n        // target: 'http://10.0.22.240:80', // sit\n        changeOrigin: true,\n        secure: false\n      },\n      '/public/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9200', // 一路\n        // target: 'http://10.98.163.130:9200', // 景康\n        // target: 'http://10.0.22.240:80', // sit\n        changeOrigin: true,\n        secure: false\n      },\n      '/assess/pbc/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9200', // 一路\n        // target: 'http://10.98.163.130:9200', // 景康\n        // target: 'http://10.0.22.240:80', // sit\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'yeelusun'\n        }\n      },\n      '/assess/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9201', // 一路\n        // target: 'http://10.0.64.179:9200', // sit\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'jackieyang'\n        }\n      },\n      '/hr/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.33:9200', // 东哥\n        // target: 'http://10.98.164.197:9200', // 一路\n        target: 'http://10.98.164.181:9201', // 一路\n        // target: 'http://10.0.64.179:9200', // sit\n        changeOrigin: true,\n        secure: false\n        // headers: {\n        //   'X-WESURE-ENAME': 'raymcheng'\n        // }\n      },\n      // 系统业务接口\n      '/manage/': {\n        target: 'http://10.0.32.14:7001',\n        changeOrigin: true,\n        secure: false\n      },\n      // 人员和组织接口, 针对/api/v2/user/search和/api/v2/organization/search，这2个接口没用到的可以不配\n      '/api/': {\n        target: 'http://upmsapi.sit.com:10020',\n        // target: 'http://upmsapi.dev.com:10020',\n        changeOrigin: true,\n        secure: false\n      },\n      // 统一网关接口\n      '/SolomonService/': {\n        target: 'http://upmsapi.sit.com:10020',\n        // target: 'http://upmsapi.dev.com:10020',\n        changeOrigin: true\n      }\n    }\n  }\n}\n\n```\n\n","source":"_posts/task/绩效考核系统.md","raw":"---\ntitle: 绩效考核系统\ndate: 2022-6-21 11:05:47\ncover: \ntags:\n- task\n---\n\n# 360干部考核系统-wehr\n\n主要功能分为问卷管理，问卷填写，评估管理和结果报告\n\nhttps://wesure.coding.inwesure.com/p/g010/d/wehr/git\n\n使用使用分支 dev\n\n两个项目端口都是9200，改wehr为9201，同时修改grpc端口为59201\n\n\n\n\n\n\n\n# 绩效考核系统-assess\n\n分为绩效目标和绩效考核，绩效考核分为自评、初评、复评、星级报表、评估结果展示、评估配置\n\nhttps://wesure.coding.inwesure.com/p/g010/d/assess/git\n\n使用使用分支 dev\n\n## 流程\n\n新建周期(assess_period)\n\n​\t-目标人员填写(assess_target_persons)    id = period_id\n\n​\t-评估主实体(assess_header) \t\t\t\t\t period_code= period_code\n\n- \n\n\n\n## 问题\n\n### 发起目标，还没有导入填写目标人员，发起成功(好像又不用改动了)\n\n解决\n\n```java\n        //查询当前周期信息\n        AssessPeriod assessPeriodDb = assessPeriodService.selectByPrimaryKey(assessPeriod.getId());\n        if (null == assessPeriodDb){\n            return new BaseResult(BaseMessage.FAILED,\"考核周期不存在\",null);\n        }\n\n        AssessHeaderExample assessHeaderExample = new AssessHeaderExample();\n        assessHeaderExample.createCriteria()\n                .andIsDelEqualTo((byte) 0)\n                .andPeriodCodeEqualTo(assessPeriodDb.getPeriodCode());\n        List<AssessHeader> assessHeaders = assessHeaderService.selectByExample(assessHeaderExample);\n        if (CollectionUtils.isEmpty(assessHeaders)){\n            return new BaseResult(BaseMessage.FAILED,\"请先配置评估人员\",null);\n        }\n```\n\n\n\n```mysql\nperiod_status '状态 0未发起 1已发起 2已结束',\n```\n\n\n\n\n\n\n# 前端网页\n\nhttps://wesure.coding.inwesure.com/p/g010/d/assess-web/git\n\n使用使用分支 develop\n\nhttp://localhost:9008/      \n\n## 配置本地网关\n\nvue.config.js\n\n```js\nmodule.exports = {\n  // app部署路径\n  publicPath: '/',\n  // build目录\n  outputDir: 'dist',\n  devServer: {\n    clientLogLevel: 'warning',\n    historyApiFallback: true,\n    hot: true,\n    compress: true,\n    host: '0.0.0.0',\n    port: 9008,\n    open: false,\n    overlay: {\n      warnings: false, errors: true\n    },\n    watchOptions: {\n      poll: false\n    },\n    proxy: {\n      // 系统业务接口\n      '/wofNidGenerator/getNids': {\n        target: 'http://upmsapi.sit.com:10020',\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'v_linzlzhao'\n        }\n      },\n      // 自定义页面接口\n      '/upmsapi/forward_service/': {\n        target: 'http://upmsapi.sit.com:10020', // sit\n        changeOrigin: true,\n        secure: false\n      },\n      '/manage/formappdata/': {\n        target: 'http://10.0.32.65:80',\n        changeOrigin: true,\n        secure: false\n      },\n      '/manage/customapp/': {\n        target: 'http://10.0.32.65:80',\n        // target: 'http://10.98.163.34:8001',\n        changeOrigin: true,\n        secure: false\n      },\n      '/manage/processappdata/': {\n        target: 'http://10.0.32.65:80',\n        changeOrigin: true,\n        secure: false\n      },\n      '/workflow/workflow_procIns/getDataByUrl': {\n        target: 'http://upmsapi.sit.com:10020',\n        // target: 'http://10.98.163.22:10020',\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'v_linzlzhao'\n        }\n      },\n      '/workflow/': {\n        target: 'http://10.0.32.179:7001',\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'v_linzlzhao'\n        }\n      },\n      // 系统业务接口\n      '/assess/result/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        target: 'http://10.98.164.181:9200', // sit\n        // target: 'http://10.98.164.143:9200', // sit\n        changeOrigin: true,\n        secure: false\n        // headers: {\n        //   'X-WESURE-ENAME': 'raymcheng'\n        // }\n      },\n      '/public/pbc': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9200', // 一路\n        // target: 'http://10.98.163.130:9200', // 景康\n        // target: 'http://10.0.22.240:80', // sit\n        changeOrigin: true,\n        secure: false\n      },\n      '/public/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9200', // 一路\n        // target: 'http://10.98.163.130:9200', // 景康\n        // target: 'http://10.0.22.240:80', // sit\n        changeOrigin: true,\n        secure: false\n      },\n      '/assess/pbc/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9200', // 一路\n        // target: 'http://10.98.163.130:9200', // 景康\n        // target: 'http://10.0.22.240:80', // sit\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'yeelusun'\n        }\n      },\n      '/assess/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.130:9200', // 东哥\n        target: 'http://10.98.164.181:9201', // 一路\n        // target: 'http://10.0.64.179:9200', // sit\n        changeOrigin: true,\n        secure: false,\n        headers: {\n          'X-WESURE-ENAME': 'jackieyang'\n        }\n      },\n      '/hr/': {\n        // target: 'http://10.98.163.68:9200', // 淼哥\n        // target: 'http://10.98.163.33:9200', // 东哥\n        // target: 'http://10.98.164.197:9200', // 一路\n        target: 'http://10.98.164.181:9201', // 一路\n        // target: 'http://10.0.64.179:9200', // sit\n        changeOrigin: true,\n        secure: false\n        // headers: {\n        //   'X-WESURE-ENAME': 'raymcheng'\n        // }\n      },\n      // 系统业务接口\n      '/manage/': {\n        target: 'http://10.0.32.14:7001',\n        changeOrigin: true,\n        secure: false\n      },\n      // 人员和组织接口, 针对/api/v2/user/search和/api/v2/organization/search，这2个接口没用到的可以不配\n      '/api/': {\n        target: 'http://upmsapi.sit.com:10020',\n        // target: 'http://upmsapi.dev.com:10020',\n        changeOrigin: true,\n        secure: false\n      },\n      // 统一网关接口\n      '/SolomonService/': {\n        target: 'http://upmsapi.sit.com:10020',\n        // target: 'http://upmsapi.dev.com:10020',\n        changeOrigin: true\n      }\n    }\n  }\n}\n\n```\n\n","slug":"task/绩效考核系统","published":1,"updated":"2022-08-13T07:20:53.807Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6rm3zxi000vo0tibby546u4","content":"<h1 id=\"360干部考核系统-wehr\"><a href=\"#360干部考核系统-wehr\" class=\"headerlink\" title=\"360干部考核系统-wehr\"></a>360干部考核系统-wehr</h1><p>主要功能分为问卷管理，问卷填写，评估管理和结果报告</p>\n<p><a href=\"https://wesure.coding.inwesure.com/p/g010/d/wehr/git\">https://wesure.coding.inwesure.com/p/g010/d/wehr/git</a></p>\n<p>使用使用分支 dev</p>\n<p>两个项目端口都是9200，改wehr为9201，同时修改grpc端口为59201</p>\n<h1 id=\"绩效考核系统-assess\"><a href=\"#绩效考核系统-assess\" class=\"headerlink\" title=\"绩效考核系统-assess\"></a>绩效考核系统-assess</h1><p>分为绩效目标和绩效考核，绩效考核分为自评、初评、复评、星级报表、评估结果展示、评估配置</p>\n<p><a href=\"https://wesure.coding.inwesure.com/p/g010/d/assess/git\">https://wesure.coding.inwesure.com/p/g010/d/assess/git</a></p>\n<p>使用使用分支 dev</p>\n<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><p>新建周期(assess_period)</p>\n<p>​    -目标人员填写(assess_target_persons)    id = period_id</p>\n<p>​    -评估主实体(assess_header)                      period_code= period_code</p>\n<ul>\n<li></li>\n</ul>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><h3 id=\"发起目标，还没有导入填写目标人员，发起成功-好像又不用改动了\"><a href=\"#发起目标，还没有导入填写目标人员，发起成功-好像又不用改动了\" class=\"headerlink\" title=\"发起目标，还没有导入填写目标人员，发起成功(好像又不用改动了)\"></a>发起目标，还没有导入填写目标人员，发起成功(好像又不用改动了)</h3><p>解决</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查询当前周期信息</span></span><br><span class=\"line\">AssessPeriod assessPeriodDb = assessPeriodService.selectByPrimaryKey(assessPeriod.getId());</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == assessPeriodDb)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BaseResult(BaseMessage.FAILED,<span class=\"string\">&quot;考核周期不存在&quot;</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">AssessHeaderExample assessHeaderExample = <span class=\"keyword\">new</span> AssessHeaderExample();</span><br><span class=\"line\">assessHeaderExample.createCriteria()</span><br><span class=\"line\">        .andIsDelEqualTo((<span class=\"keyword\">byte</span>) <span class=\"number\">0</span>)</span><br><span class=\"line\">        .andPeriodCodeEqualTo(assessPeriodDb.getPeriodCode());</span><br><span class=\"line\">List&lt;AssessHeader&gt; assessHeaders = assessHeaderService.selectByExample(assessHeaderExample);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CollectionUtils.isEmpty(assessHeaders))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BaseResult(BaseMessage.FAILED,<span class=\"string\">&quot;请先配置评估人员&quot;</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">period_status &#x27;状态 0未发起 1已发起 2已结束&#x27;,</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h1 id=\"前端网页\"><a href=\"#前端网页\" class=\"headerlink\" title=\"前端网页\"></a>前端网页</h1><p><a href=\"https://wesure.coding.inwesure.com/p/g010/d/assess-web/git\">https://wesure.coding.inwesure.com/p/g010/d/assess-web/git</a></p>\n<p>使用使用分支 develop</p>\n<p><a href=\"http://localhost:9008/\">http://localhost:9008/</a>      </p>\n<h2 id=\"配置本地网关\"><a href=\"#配置本地网关\" class=\"headerlink\" title=\"配置本地网关\"></a>配置本地网关</h2><p>vue.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// app部署路径</span></span><br><span class=\"line\">  <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// build目录</span></span><br><span class=\"line\">  <span class=\"attr\">outputDir</span>: <span class=\"string\">&#x27;dist&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">clientLogLevel</span>: <span class=\"string\">&#x27;warning&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">historyApiFallback</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">hot</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">compress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;0.0.0.0&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">9008</span>,</span><br><span class=\"line\">    <span class=\"attr\">open</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">overlay</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span>, <span class=\"attr\">errors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">watchOptions</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">poll</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 系统业务接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/wofNidGenerator/getNids&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;v_linzlzhao&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 自定义页面接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/upmsapi/forward_service/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>, <span class=\"comment\">// sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/formappdata/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.65:80&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/customapp/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.65:80&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.34:8001&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/processappdata/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.65:80&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/workflow/workflow_procIns/getDataByUrl&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.22:10020&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;v_linzlzhao&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/workflow/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.179:7001&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;v_linzlzhao&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 系统业务接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/assess/result/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// sit</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.164.143:9200&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"comment\">// headers: &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;X-WESURE-ENAME&#x27;: &#x27;raymcheng&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/public/pbc&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 景康</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.22.240:80&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/public/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 景康</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.22.240:80&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/assess/pbc/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 景康</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.22.240:80&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;yeelusun&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/assess/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9201&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.64.179:9200&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;jackieyang&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/hr/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.33:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.164.197:9200&#x27;, // 一路</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9201&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.64.179:9200&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"comment\">// headers: &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;X-WESURE-ENAME&#x27;: &#x27;raymcheng&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 系统业务接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.14:7001&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 人员和组织接口, 针对/api/v2/user/search和/api/v2/organization/search，这2个接口没用到的可以不配</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/api/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://upmsapi.dev.com:10020&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 统一网关接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/SolomonService/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://upmsapi.dev.com:10020&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"360干部考核系统-wehr\"><a href=\"#360干部考核系统-wehr\" class=\"headerlink\" title=\"360干部考核系统-wehr\"></a>360干部考核系统-wehr</h1><p>主要功能分为问卷管理，问卷填写，评估管理和结果报告</p>\n<p><a href=\"https://wesure.coding.inwesure.com/p/g010/d/wehr/git\">https://wesure.coding.inwesure.com/p/g010/d/wehr/git</a></p>\n<p>使用使用分支 dev</p>\n<p>两个项目端口都是9200，改wehr为9201，同时修改grpc端口为59201</p>\n<h1 id=\"绩效考核系统-assess\"><a href=\"#绩效考核系统-assess\" class=\"headerlink\" title=\"绩效考核系统-assess\"></a>绩效考核系统-assess</h1><p>分为绩效目标和绩效考核，绩效考核分为自评、初评、复评、星级报表、评估结果展示、评估配置</p>\n<p><a href=\"https://wesure.coding.inwesure.com/p/g010/d/assess/git\">https://wesure.coding.inwesure.com/p/g010/d/assess/git</a></p>\n<p>使用使用分支 dev</p>\n<h2 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h2><p>新建周期(assess_period)</p>\n<p>​    -目标人员填写(assess_target_persons)    id = period_id</p>\n<p>​    -评估主实体(assess_header)                      period_code= period_code</p>\n<ul>\n<li></li>\n</ul>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><h3 id=\"发起目标，还没有导入填写目标人员，发起成功-好像又不用改动了\"><a href=\"#发起目标，还没有导入填写目标人员，发起成功-好像又不用改动了\" class=\"headerlink\" title=\"发起目标，还没有导入填写目标人员，发起成功(好像又不用改动了)\"></a>发起目标，还没有导入填写目标人员，发起成功(好像又不用改动了)</h3><p>解决</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查询当前周期信息</span></span><br><span class=\"line\">AssessPeriod assessPeriodDb = assessPeriodService.selectByPrimaryKey(assessPeriod.getId());</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == assessPeriodDb)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BaseResult(BaseMessage.FAILED,<span class=\"string\">&quot;考核周期不存在&quot;</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">AssessHeaderExample assessHeaderExample = <span class=\"keyword\">new</span> AssessHeaderExample();</span><br><span class=\"line\">assessHeaderExample.createCriteria()</span><br><span class=\"line\">        .andIsDelEqualTo((<span class=\"keyword\">byte</span>) <span class=\"number\">0</span>)</span><br><span class=\"line\">        .andPeriodCodeEqualTo(assessPeriodDb.getPeriodCode());</span><br><span class=\"line\">List&lt;AssessHeader&gt; assessHeaders = assessHeaderService.selectByExample(assessHeaderExample);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (CollectionUtils.isEmpty(assessHeaders))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> BaseResult(BaseMessage.FAILED,<span class=\"string\">&quot;请先配置评估人员&quot;</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">period_status &#x27;状态 0未发起 1已发起 2已结束&#x27;,</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<h1 id=\"前端网页\"><a href=\"#前端网页\" class=\"headerlink\" title=\"前端网页\"></a>前端网页</h1><p><a href=\"https://wesure.coding.inwesure.com/p/g010/d/assess-web/git\">https://wesure.coding.inwesure.com/p/g010/d/assess-web/git</a></p>\n<p>使用使用分支 develop</p>\n<p><a href=\"http://localhost:9008/\">http://localhost:9008/</a>      </p>\n<h2 id=\"配置本地网关\"><a href=\"#配置本地网关\" class=\"headerlink\" title=\"配置本地网关\"></a>配置本地网关</h2><p>vue.config.js</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// app部署路径</span></span><br><span class=\"line\">  <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// build目录</span></span><br><span class=\"line\">  <span class=\"attr\">outputDir</span>: <span class=\"string\">&#x27;dist&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">clientLogLevel</span>: <span class=\"string\">&#x27;warning&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">historyApiFallback</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">hot</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">compress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;0.0.0.0&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">9008</span>,</span><br><span class=\"line\">    <span class=\"attr\">open</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">overlay</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span>, <span class=\"attr\">errors</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">watchOptions</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">poll</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 系统业务接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/wofNidGenerator/getNids&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;v_linzlzhao&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 自定义页面接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/upmsapi/forward_service/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>, <span class=\"comment\">// sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/formappdata/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.65:80&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/customapp/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.65:80&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.34:8001&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/processappdata/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.65:80&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/workflow/workflow_procIns/getDataByUrl&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.22:10020&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;v_linzlzhao&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/workflow/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.179:7001&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;v_linzlzhao&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 系统业务接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/assess/result/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// sit</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.164.143:9200&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"comment\">// headers: &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;X-WESURE-ENAME&#x27;: &#x27;raymcheng&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/public/pbc&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 景康</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.22.240:80&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/public/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 景康</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.22.240:80&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/assess/pbc/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9200&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 景康</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.22.240:80&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;yeelusun&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/assess/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.130:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9201&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.64.179:9200&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;X-WESURE-ENAME&#x27;</span>: <span class=\"string\">&#x27;jackieyang&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;/hr/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.68:9200&#x27;, // 淼哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.163.33:9200&#x27;, // 东哥</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.98.164.197:9200&#x27;, // 一路</span></span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.98.164.181:9201&#x27;</span>, <span class=\"comment\">// 一路</span></span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://10.0.64.179:9200&#x27;, // sit</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"comment\">// headers: &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">//   &#x27;X-WESURE-ENAME&#x27;: &#x27;raymcheng&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 系统业务接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/manage/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://10.0.32.14:7001&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 人员和组织接口, 针对/api/v2/user/search和/api/v2/organization/search，这2个接口没用到的可以不配</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/api/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://upmsapi.dev.com:10020&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 统一网关接口</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/SolomonService/&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://upmsapi.sit.com:10020&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// target: &#x27;http://upmsapi.dev.com:10020&#x27;,</span></span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl6rm3zwz0001o0ti99bv38h0","tag_id":"cl6rm3zx30004o0ti87av3vow","_id":"cl6rm3zx70009o0tig8uwecoy"},{"post_id":"cl6rm3zx20003o0tifvfqg4be","tag_id":"cl6rm3zx70008o0ti2a8s8u9v","_id":"cl6rm3zx9000eo0tidv8d9fs1"},{"post_id":"cl6rm3zx40005o0tidjqtd0ew","tag_id":"cl6rm3zx8000co0tiff9ohcqj","_id":"cl6rm3zxc000io0tifxy8dlys"},{"post_id":"cl6rm3zx50006o0ti0ku67bc0","tag_id":"cl6rm3zx70008o0ti2a8s8u9v","_id":"cl6rm3zxf000mo0ti9vs1cfl9"},{"post_id":"cl6rm3zx60007o0ti90j98xr1","tag_id":"cl6rm3zxd000ko0ti7nx958lj","_id":"cl6rm3zxg000qo0ti25a8b6cd"},{"post_id":"cl6rm3zx7000ao0ti4n169f3c","tag_id":"cl6rm3zxf000oo0tibe7cej1e","_id":"cl6rm3zxi000uo0tidfvr8785"},{"post_id":"cl6rm3zx8000bo0ti51o5boet","tag_id":"cl6rm3zxf000oo0tibe7cej1e","_id":"cl6rm3zxj000xo0ti3jdw1kxl"},{"post_id":"cl6rm3zx9000do0ti21awg4s0","tag_id":"cl6rm3zxf000oo0tibe7cej1e","_id":"cl6rm3zxj000zo0ti3u0a2z2p"},{"post_id":"cl6rm3zx9000fo0ti77v4e7y4","tag_id":"cl6rm3zxf000oo0tibe7cej1e","_id":"cl6rm3zxk0011o0tiek5t3x4i"},{"post_id":"cl6rm3zxb000ho0ti8r7q1tvi","tag_id":"cl6rm3zxf000oo0tibe7cej1e","_id":"cl6rm3zxk0013o0tig24q235u"},{"post_id":"cl6rm3zxe000lo0tiaj3kb1by","tag_id":"cl6rm3zxf000oo0tibe7cej1e","_id":"cl6rm3zxk0015o0tie02j8f02"},{"post_id":"cl6rm3zxf000no0tifqzdhkee","tag_id":"cl6rm3zxk0014o0ti88u1gt23","_id":"cl6rm3zxl0017o0tie02yeuxz"},{"post_id":"cl6rm3zxg000po0ti7qhxcq66","tag_id":"cl6rm3zxk0016o0tibu7nddld","_id":"cl6rm3zxl0019o0tiarfx7zyw"},{"post_id":"cl6rm3zxg000ro0ti1uf28hav","tag_id":"cl6rm3zxl0018o0tienp59mup","_id":"cl6rm3zxl001bo0tiaks70vxj"},{"post_id":"cl6rm3zxh000so0tihw7990sh","tag_id":"cl6rm3zxl001ao0tiaar44edb","_id":"cl6rm3zxl001do0ti638056x9"},{"post_id":"cl6rm3zxi000vo0tibby546u4","tag_id":"cl6rm3zxl001co0ti6r2lfw3d","_id":"cl6rm3zxm001eo0tig6p28prq"}],"Tag":[{"name":"code","_id":"cl6rm3zx30004o0ti87av3vow"},{"name":"config","_id":"cl6rm3zx70008o0ti2a8s8u9v"},{"name":"嘿嘿","_id":"cl6rm3zx8000co0tiff9ohcqj"},{"name":"vue","_id":"cl6rm3zxd000ko0ti7nx958lj"},{"name":"note","_id":"cl6rm3zxf000oo0tibe7cej1e"},{"name":"work","_id":"cl6rm3zxk0014o0ti88u1gt23"},{"name":"暂存文件","_id":"cl6rm3zxk0016o0tibu7nddld"},{"name":"IDEA插件","_id":"cl6rm3zxl0018o0tienp59mup"},{"name":"插件","_id":"cl6rm3zxl001ao0tiaar44edb"},{"name":"task","_id":"cl6rm3zxl001co0ti6r2lfw3d"}]}}